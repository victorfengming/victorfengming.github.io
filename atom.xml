<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Victor&#39;s Blog</title>
  
  
  <link href="http://victorfengming.gitee.io/atom.xml" rel="self"/>
  
  <link href="http://victorfengming.gitee.io/"/>
  <updated>2022-03-04T05:02:52.655Z</updated>
  <id>http://victorfengming.gitee.io/</id>
  
  <author>
    <name>Victor</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Gitbook文档索引</title>
    <link href="http://victorfengming.gitee.io/index/gitbook/"/>
    <id>http://victorfengming.gitee.io/index/gitbook/</id>
    <published>2022-12-20T22:07:08.000Z</published>
    <updated>2022-03-04T05:02:52.655Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Created by <a href="https://www.gitbook.com/">gitbook</a></p></blockquote><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><div>    <table>        <thead>        <tr>            <th></th>            <th></th>            <th></th>        </tr>        </thead>        <tbody>        <tr>            <td>                <a href="https://victorfengming.gitee.io/shell/">                    <span>shell</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/makefile/">                    <span>makefile</span>                </a>            </td>            <td></td>        </tr>        </tbody>    </table></div><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><div>    <table>        <thead>        <tr>            <th></th>            <th></th>            <th></th>        </tr>        </thead>        <tbody>        <tr>            <td>                <a href="https://victorfengming.gitee.io/course/front_page/index.html">                    <span>html</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/network/index.html">                    <span>network</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/typescript/">                    <span>typescript</span>                </a>            </td>        </tr>        <tr>            <td>                <a href="https://victorfengming.gitee.io/axios/">                    <span>axios</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/webpack/">                    <span>webpack</span>                </a>            </td>            <td></td>        </tr>        <tr>            <td>                <a href="https://victorfengming.gitee.io/vue/">                    <span>vue</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/react/">                    <span>react</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/promise/">                    <span>promise</span>                </a>            </td>        </tr>        <tr>            <td>                <a href="https://victorfengming.gitee.io/course/pyqt5/index.html">                    <span>pyqt5</span>                </a>            </td>            <td></td>            <td></td>        </tr>        </tbody>    </table></div><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><div>    <table>        <thead>        <tr>            <th></th>            <th></th>            <th></th>        </tr>        </thead>        <tbody>        <tr>            <td>                <a href="https://blog.colemak.cn/scala/">                    <span>scala</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/python_book/index.html">                    <span>python</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/go/index.html">                    <span>golang</span>                </a>            </td>        </tr>        </tbody>    </table></div><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><div>    <table>        <thead>        <tr>            <th></th>            <th></th>            <th></th>        </tr>        </thead>        <tbody>        <tr>            <td>                <a href="https://victorfengming.gitee.io/course/beego/index.html">                    <span>beego</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/django/index.html">                    <span>django</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/flask/index.html">                    <span>flask</span>                </a>            </td>        </tr>        <tr>            <td>                <a href="https://victorfengming.gitee.io/springboot/">                    <span>springboot</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/springcloud/">                    <span>springcloud</span>                </a>            </td>            <td></td>        </tr>        </tbody>    </table></div><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><div>    <table>        <thead>        <tr>            <th></th>            <th></th>            <th></th>            <th></th>        </tr>        </thead>        <tbody>        <tr>            <td>                <a href="https://victorfengming.gitee.io/course/mysql/index.html">                    <span>mysql</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/mybatis/index.html">                    <span>mybatis</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/nosql/index.html">                    <span>nosql</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/redis/index.html">                    <span>redis</span>                </a>            </td>        </tr>        </tbody>    </table></div><h2 id="大数据运维"><a href="#大数据运维" class="headerlink" title="大数据运维"></a>大数据运维</h2><div>    <table>        <thead>        <tr>            <th></th>            <th></th>            <th></th>            <th></th>        </tr>        </thead>        <tbody>        <tr>            <td>                <a href="https://victorfengming.gitee.io/shell/">                    <span>shell</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/docker/">                    <span>docker</span>                </a>            </td>            <td>            </td>            <td>                <a href="https://victorfengming.gitee.io/elk/">                    <span>elk</span>                </a>            </td>        </tr>        <tr>            <td>                <a href="https://victorfengming.gitee.io/flink/">                    <span>flink</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/hadoop/">                    <span>hadoop</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/hive/">                    <span>hive</span>                </a>            </td>            <td>                <a href="http://victorfengming.gitee.io/jenkins/">                    <span>jenkins</span>                </a>            </td>        </tr>        <tr>            <td>                <a href="https://victorfengming.gitee.io/kubernetes/">                    <span>kubernetes</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/zookeeper/">                    <span>zookeeper</span>                </a>            </td>            <td></td>            <td></td>        </tr>        </tbody>    </table></div><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><div>    <table>        <thead>        <tr>            <th></th>            <th></th>            <th></th>            <th></th>        </tr>        </thead>        <tbody>        <tr>            <td>                <a href="https://victorfengming.gitee.io/jvm/">                    <span>jvm</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/data_algorithm/">                    <span>data_algorithm</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/data_science/index.html">                    <span>data_science</span>                </a>            </td>            <td></td>        </tr>        <tr>            <td>                <a href="https://victorfengming.gitee.io/design_pattern/">                    <span>design_pattern</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/git/index.html">                    <span>git</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/course/svn/index.html">                    <span>svn</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/interview/">                    <span>interview</span>                </a>            </td>        </tr>        <tr>            <td>                <a href="https://victorfengming.gitee.io/rabbit_mq/">                    <span>rabbit_mq</span>                </a>            </td>            <td>                <a href="https://victorfengming.gitee.io/leetcode/">                    <span>leetcode</span>                </a>            </td>            <td>                <a href="https://gitee.com/victorfengming/javase/">                    <span>javase</span>                </a>            </td>        </tr>        </tbody>    </table></div><style>    span:hover {        color: #FFFFFF;        background: #00b5e5;    }</style>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Created by &lt;a href=&quot;https://www.gitbook.com/&quot;&gt;gitbook&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;脚本&quot;&gt;&lt;a href=&quot;#脚本&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    
    <category term="gitbook" scheme="http://victorfengming.gitee.io/tags/gitbook/"/>
    
    <category term="index" scheme="http://victorfengming.gitee.io/tags/index/"/>
    
  </entry>
  
  <entry>
    <title>deepin系统开机自动切换colemak键盘布局</title>
    <link href="http://victorfengming.gitee.io/linux/deepin-colemak/"/>
    <id>http://victorfengming.gitee.io/linux/deepin-colemak/</id>
    <published>2021-10-07T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.107Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-xmodmap文件准备"><a href="#1-xmodmap文件准备" class="headerlink" title="1. xmodmap文件准备"></a>1. xmodmap文件准备</h2><p>可以参考</p><p><a href="https://wiki.archlinux.org/title/Xmodmap_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/title/Xmodmap_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p><p>我们需要一个colemak的映射文件,命名为<code>.Xmodmap</code></p><p>即 创建一个键映射表（即文件 <code>~/.Xmodmap</code>）： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmodmap -pke &gt; ~/.Xmodmap</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="1633613241160.png" alt="1633613241160"></p><p>修改文件内容如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">clear lock</span><br><span class="line"></span><br><span class="line">keycode  10 = 1 exclam 1 exclam</span><br><span class="line">keycode  11 = 2 at 2 at</span><br><span class="line">keycode  12 = 3 numbersign 3 numbersign</span><br><span class="line">keycode  13 = 4 dollar 4 dollar</span><br><span class="line">keycode  14 = 5 percent 5 percent</span><br><span class="line">keycode  15 = 6 asciicircum 6 asciicircum</span><br><span class="line">keycode  16 = 7 ampersand 7 ampersand</span><br><span class="line">keycode  17 = 8 asterisk 8 asterisk</span><br><span class="line">keycode  18 = 9 parenleft 9 parenleft</span><br><span class="line">keycode  19 = 0 parenright 0 parenright</span><br><span class="line">keycode  20 = minus underscore minus underscore</span><br><span class="line">keycode  21 = equal plus equal plus</span><br><span class="line">keycode  22 = BackSpace BackSpace BackSpace BackSpace</span><br><span class="line">keycode  23 = Tab ISO_Left_Tab Tab ISO_Left_Tab</span><br><span class="line">keycode  24 = q Q q Q</span><br><span class="line">keycode  25 = w W w W</span><br><span class="line">keycode  26 = f F f F</span><br><span class="line">keycode  27 = p P p P</span><br><span class="line">keycode  28 = g G g G</span><br><span class="line">keycode  29 = j J j J</span><br><span class="line">keycode  30 = l L l L</span><br><span class="line">keycode  31 = u U u U</span><br><span class="line">keycode  32 = y Y y Y</span><br><span class="line">keycode  33 = semicolon colon semicolon colon</span><br><span class="line">keycode  34 = bracketleft braceleft bracketleft braceleft</span><br><span class="line">keycode  35 = bracketright braceright bracketright braceright</span><br><span class="line">keycode  36 = Return NoSymbol Return</span><br><span class="line">keycode  37 = Control_L NoSymbol Control_L</span><br><span class="line">keycode  38 = a A a A</span><br><span class="line">keycode  39 = r R r R</span><br><span class="line">keycode  40 = s S s S</span><br><span class="line">keycode  41 = t T t T</span><br><span class="line">keycode  42 = d D d D</span><br><span class="line">keycode  43 = h H h H</span><br><span class="line">keycode  44 = n N n N</span><br><span class="line">keycode  45 = e E e E</span><br><span class="line">keycode  46 = i I i I</span><br><span class="line">keycode  47 = o O o O</span><br><span class="line">keycode  48 = apostrophe quotedbl apostrophe quotedbl</span><br><span class="line">keycode  49 = grave asciitilde grave asciitilde</span><br><span class="line">keycode  50 = Shift_L NoSymbol Shift_L</span><br><span class="line">keycode  51 = backslash bar backslash bar</span><br><span class="line">keycode  52 = z Z z Z</span><br><span class="line">keycode  53 = x X x X</span><br><span class="line">keycode  54 = c C c C</span><br><span class="line">keycode  55 = v V v V</span><br><span class="line">keycode  56 = b B b B</span><br><span class="line">keycode  57 = k K k K</span><br><span class="line">keycode  58 = m M m M</span><br><span class="line">keycode  59 = comma less comma less</span><br><span class="line">keycode  60 = period greater period greater</span><br><span class="line">keycode  61 = slash question slash question</span><br><span class="line">keycode  62 = Shift_R NoSymbol Shift_R</span><br><span class="line">keycode  64 = Alt_L Meta_L Alt_L Meta_L</span><br><span class="line">keycode  65 = space NoSymbol space</span><br><span class="line">keycode  66 = BackSpace BackSpace Delete Delete</span><br><span class="line">keycode 105 = Control_R NoSymbol Control_R</span><br><span class="line">keycode 108 = Mode_switch NoSymbol Mode_switch</span><br><span class="line">keycode 133 = Super_L NoSymbol Super_L</span><br><span class="line">keycode 134 = Super_R NoSymbol Super_R</span><br><span class="line">keycode 135 = Menu NoSymbol Menu</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-测试是否生效"><a href="#2-测试是否生效" class="headerlink" title="2. 测试是否生效"></a>2. 测试是否生效</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmodmap ~/.Xmodmap</span><br></pre></td></tr></table></figure><h2 id="3-配置开机启动"><a href="#3-配置开机启动" class="headerlink" title="3. 配置开机启动"></a>3. 配置开机启动</h2><blockquote><p>首先 需要 准备一个启动脚本</p></blockquote><p>比如创建一个名为<code>colemak.sh</code>的文件</p><p>内容如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmodmap ~/.Xmodmap</span><br></pre></td></tr></table></figure><p>将脚本文件粘贴到 <code>~/.config/autostart</code>目录下面</p><p>生成启动快捷方式,也粘贴到 <code>~/.config/autostart</code>目录下面</p><p>及<code>colemak.desktop</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line"></span><br><span class="line">Type=Application</span><br><span class="line"></span><br><span class="line">Exec=/home/victor/.config/autostart/colemak.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="1633613256359.png" alt="1633613256359"></p><p>重新启动即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h1><h2 id="上个版本参考"><a href="#上个版本参考" class="headerlink" title="上个版本参考"></a>上个版本参考</h2><p><a href="https://blog.csdn.net/BenSYZ/article/details/104520678">https://blog.csdn.net/BenSYZ/article/details/104520678</a></p><p><a href="http://www.voidcn.com/article/p-bplopzoo-bwq.html">http://www.voidcn.com/article/p-bplopzoo-bwq.html</a></p><p><a href="https://baijiahao.baidu.com/s?id=1666002986214880905&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1666002986214880905&amp;wfr=spider&amp;for=pc</a></p><h2 id="xmodmap参考"><a href="#xmodmap参考" class="headerlink" title="xmodmap参考:"></a>xmodmap参考:</h2><p><a href="https://wiki.archlinux.org/title/Xmodmap_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/title/Xmodmap_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p><p>colemak替换文件来自: </p><p><a href="https://download.csdn.net/download/weixin_42176827/19824153">https://download.csdn.net/download/weixin_42176827/19824153</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-xmodmap文件准备&quot;&gt;&lt;a href=&quot;#1-xmodmap文件准备&quot; class=&quot;headerlink&quot; title=&quot;1. xmodmap文件准备&quot;&gt;&lt;/a&gt;1. xmodmap文件准备&lt;/h2&gt;&lt;p&gt;可以参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;htt</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://victorfengming.gitee.io/tags/Linux/"/>
    
    <category term="deepin" scheme="http://victorfengming.gitee.io/tags/deepin/"/>
    
    <category term="colemak" scheme="http://victorfengming.gitee.io/tags/colemak/"/>
    
  </entry>
  
  <entry>
    <title>在自己的服务器上搭建git服务</title>
    <link href="http://victorfengming.gitee.io/comic/git-server/"/>
    <id>http://victorfengming.gitee.io/comic/git-server/</id>
    <published>2021-09-08T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.008Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-服务器搭建"><a href="#Git-服务器搭建" class="headerlink" title="Git 服务器搭建"></a>Git 服务器搭建</h1><p>上一章节中我们远程仓库使用了 Github，Github 公开的项目是免费的，2019 年开始 Github 私有存储库也可以无限制使用。</p><p>这当然我们也可以自己搭建一台 Git 服务器作为私有仓库使用。</p><p>接下来我们将以 Centos 为例搭建 Git 服务器。</p><h3 id="1、安装Git"><a href="#1、安装Git" class="headerlink" title="1、安装Git"></a>1、安装Git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel</span><br><span class="line">$ yum install git</span><br></pre></td></tr></table></figure><p>接下来我们 创建一个git用户组和用户，用来运行git服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ groupadd git</span><br><span class="line">$ useradd git -g git</span><br></pre></td></tr></table></figure><h3 id="2、创建证书登录"><a href="#2、创建证书登录" class="headerlink" title="2、创建证书登录"></a>2、创建证书登录</h3><p>收集所有需要登录的用户的公钥，公钥位于id_rsa.pub文件中，把我们的公钥导入到/home/git/.ssh/authorized_keys文件里，一行一个。</p><p>如果没有该文件创建它：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cd &#x2F;home&#x2F;git&#x2F;</span><br><span class="line">$ mkdir .ssh</span><br><span class="line">$ chmod 755 .ssh</span><br><span class="line">$ touch .ssh&#x2F;authorized_keys</span><br><span class="line">$ chmod 644 .ssh&#x2F;authorized_keys</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="5.png" alt="image.png"></p><h3 id="3、初始化Git仓库"><a href="#3、初始化Git仓库" class="headerlink" title="3、初始化Git仓库"></a>3、初始化Git仓库</h3><p>首先我们选定一个目录作为Git仓库，假定是/home/gitrepo/victor.git，在/home/gitrepo目录下输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cd &#x2F;home</span><br><span class="line">$ mkdir gitrepo</span><br><span class="line">$ chown git:git gitrepo&#x2F;</span><br><span class="line">$ cd gitrepo</span><br><span class="line"></span><br><span class="line">$ git init --bare victor.git</span><br><span class="line">Initialized empty Git repository in &#x2F;home&#x2F;gitrepo&#x2F;victor.git&#x2F;</span><br></pre></td></tr></table></figure><p>以上命令Git创建一个空仓库，服务器上的Git仓库通常都以.git结尾。然后，把仓库所属用户改为git：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chown -R git:git victor.git</span><br></pre></td></tr></table></figure><h3 id="4、克隆仓库"><a href="#4、克隆仓库" class="headerlink" title="4、克隆仓库"></a>4、克隆仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git@116.62.194.162:&#x2F;home&#x2F;gitrepo&#x2F;victor.git</span><br><span class="line">Cloning into &#39;victor&#39;...</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... done.</span><br></pre></td></tr></table></figure><p>116.62.194.162 为 Git 所在服务器 ip ，你需要将其修改为你自己的 Git 服务 ip。</p><p>这样我们的 Git 服务器安装就完成。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.runoob.com/git/git-server.html">https://www.runoob.com/git/git-server.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Git-服务器搭建&quot;&gt;&lt;a href=&quot;#Git-服务器搭建&quot; class=&quot;headerlink&quot; title=&quot;Git 服务器搭建&quot;&gt;&lt;/a&gt;Git 服务器搭建&lt;/h1&gt;&lt;p&gt;上一章节中我们远程仓库使用了 Github，Github 公开的项目是免费的，201</summary>
      
    
    
    
    
    <category term="git" scheme="http://victorfengming.gitee.io/tags/git/"/>
    
    <category term="linux" scheme="http://victorfengming.gitee.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Gradle配置阿里云镜像</title>
    <link href="http://victorfengming.gitee.io/develop/gradle/"/>
    <id>http://victorfengming.gitee.io/develop/gradle/</id>
    <published>2021-08-30T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>Gradle是一个基于Apache Ant和Apache Maven概念的项目自动化构建开源工具。它使用一种基于Groovy的特定领域语言(DSL)来声明项目设置，目前也增加了基于Kotlin语言的kotlin-based DSL，抛弃了基于XML的各种 繁琐配置。</p><h1 id="镜像源配置"><a href="#镜像源配置" class="headerlink" title="镜像源配置"></a>镜像源配置</h1><h2 id="单个项目"><a href="#单个项目" class="headerlink" title="单个项目"></a>单个项目</h2><p>使用阿里云国内镜像</p><p>生效，在项目中的build.gradle修改内容</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url <span class="string">&#x27;http://maven.aliyun.com/nexus/content/groups/public/&#x27;</span> &#125;</span><br><span class="line">                maven&#123; url <span class="string">&#x27;http://maven.aliyun.com/nexus/content/repositories/jcenter&#x27;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">&#x27;com.android.tools.build:gradle:2.2.3&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url <span class="string">&#x27;http://maven.aliyun.com/nexus/content/groups/public/&#x27;</span> &#125;</span><br><span class="line">        maven&#123; url <span class="string">&#x27;http://maven.aliyun.com/nexus/content/repositories/jcenter&#x27;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="默认源配置"><a href="#默认源配置" class="headerlink" title="默认源配置"></a>默认源配置</h2><p>对所有项目生效，在USER_HOME/.gradle/下创建init.gradle文件</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">allprojects&#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        <span class="keyword">def</span> ALIYUN_REPOSITORY_URL = <span class="string">&#x27;http://maven.aliyun.com/nexus/content/groups/public&#x27;</span></span><br><span class="line">        <span class="keyword">def</span> ALIYUN_JCENTER_URL = <span class="string">&#x27;http://maven.aliyun.com/nexus/content/repositories/jcenter&#x27;</span></span><br><span class="line">        <span class="keyword">def</span> GRADLE_LOCAL_RELEASE_URL = <span class="string">&#x27;https://repo.gradle.org/gradle/libs-releases-local&#x27;</span></span><br><span class="line">        <span class="keyword">def</span> ALIYUN_SPRING_RELEASE_URL = <span class="string">&#x27;https://maven.aliyun.com/repository/spring-plugin&#x27;</span></span><br><span class="line">        </span><br><span class="line">        all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">            <span class="keyword">if</span>(repo <span class="keyword">instanceof</span> MavenArtifactRepository)&#123;</span><br><span class="line">                <span class="keyword">def</span> url = repo.url.toString()</span><br><span class="line">                <span class="keyword">if</span> (url.startsWith(<span class="string">&#x27;https://repo1.maven.org/maven2&#x27;</span>)) &#123;</span><br><span class="line">                    project.logger.lifecycle <span class="string">&quot;Repository $&#123;repo.url&#125; replaced by $ALIYUN_REPOSITORY_URL.&quot;</span></span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (url.startsWith(<span class="string">&#x27;https://jcenter.bintray.com/&#x27;</span>)) &#123;</span><br><span class="line">                    project.logger.lifecycle <span class="string">&quot;Repository $&#123;repo.url&#125; replaced by $ALIYUN_JCENTER_URL.&quot;</span></span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (url.startsWith(<span class="string">&#x27;http://repo.spring.io/plugins-release&#x27;</span>)) &#123;</span><br><span class="line">                    project.logger.lifecycle <span class="string">&quot;Repository $&#123;repo.url&#125; replaced by $ALIYUN_SPRING_RELEASE_URL.&quot;</span></span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url ALIYUN_REPOSITORY_URL     </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        maven &#123;            </span><br><span class="line">            url ALIYUN_JCENTER_URL          </span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;            </span><br><span class="line">            url ALIYUN_SPRING_RELEASE_URL</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url GRADLE_LOCAL_RELEASE_URL</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="网上搜集的常用仓库地址"><a href="#网上搜集的常用仓库地址" class="headerlink" title="网上搜集的常用仓库地址"></a>网上搜集的常用仓库地址</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">epositories &#123;</span><br><span class="line"></span><br><span class="line">    mavenCentral()</span><br><span class="line"></span><br><span class="line">    maven &#123; url <span class="string">&quot;https://jitpack.io&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">    maven &#123; url <span class="string">&quot;http://maven.aliyun.com/nexus/content/groups/public/&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">    maven &#123; url <span class="string">&#x27;http://maven.oschina.net/content/groups/public/&#x27;</span> &#125;</span><br><span class="line"></span><br><span class="line">    maven &#123; url <span class="string">&#x27;https://oss.sonatype.org/content/repositories/snapshots/&#x27;</span> &#125;</span><br><span class="line"></span><br><span class="line">    maven &#123; url <span class="string">&quot;http://maven.springframework.org/release&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">    maven &#123; url <span class="string">&quot;http://maven.restlet.org&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">    maven &#123; url <span class="string">&quot;http://mirrors.ibiblio.org/maven2&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">    maven &#123;</span><br><span class="line"></span><br><span class="line">        url <span class="string">&quot;http://repo.baichuan-android.taobao.com/content/groups/BaichuanRepositories/&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    maven &#123; url <span class="string">&#x27;https://maven.fabric.io/public&#x27;</span> &#125;</span><br><span class="line"></span><br><span class="line">    jcenter()</span><br><span class="line"></span><br><span class="line">    google()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="阿里仓库集合"><a href="#阿里仓库集合" class="headerlink" title="阿里仓库集合"></a>阿里仓库集合</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">apache snapshots</span><br><span class="line">proxy</span><br><span class="line">SNAPSHOT</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/apache-snapshots</span></span><br><span class="line">central</span><br><span class="line">proxy</span><br><span class="line">RELEASE</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/central</span></span><br><span class="line">google</span><br><span class="line">proxy</span><br><span class="line">RELEASE</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/google</span></span><br><span class="line">gradle-plugin</span><br><span class="line">proxy</span><br><span class="line">RELEASE</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/gradle-plugin</span></span><br><span class="line">jcenter</span><br><span class="line">proxy</span><br><span class="line">RELEASE</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/jcenter</span></span><br><span class="line">spring</span><br><span class="line">proxy</span><br><span class="line">RELEASE</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/spring</span></span><br><span class="line">spring-plugin</span><br><span class="line">proxy</span><br><span class="line">RELEASE</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/spring-plugin</span></span><br><span class="line"><span class="keyword">public</span></span><br><span class="line">group</span><br><span class="line">RELEASE</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/public</span></span><br><span class="line">releases</span><br><span class="line">hosted</span><br><span class="line">RELEASE</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/releases</span></span><br><span class="line">snapshots</span><br><span class="line">hosted</span><br><span class="line">SNAPSHOT</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/snapshots</span></span><br><span class="line">grails-core</span><br><span class="line">proxy</span><br><span class="line">RELEASE</span><br><span class="line"><span class="attr">https:</span><span class="comment">//maven.aliyun.com/repository/grails-core</span></span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>build.gradle 文件内 对于 顺序有要求(注意避坑)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h1&gt;&lt;p&gt;Gradle是一个基于Apache Ant和Apache Maven概念的项目自动化构建开源工具。它使用一种基于Groovy的特定领域语言(</summary>
      
    
    
    
    
    <category term="solution" scheme="http://victorfengming.gitee.io/tags/solution/"/>
    
  </entry>
  
  <entry>
    <title>ELK启动问题解决方案</title>
    <link href="http://victorfengming.gitee.io/operation/elk/"/>
    <id>http://victorfengming.gitee.io/operation/elk/</id>
    <published>2021-08-30T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="elk"><a href="#elk" class="headerlink" title="elk"></a>elk</h2><p>elasticsearch</p><p>lotstash</p><p>kibana</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>报错解决:</p><ul><li><p><a href="https://blog.csdn.net/ywdhzxf/article/details/89740406">csdn</a></p></li><li><p><a href="https://blog.csdn.net/zxz9325/article/details/110262417?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&dist_request_id=&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">csdn</a></p></li><li><p><a href="http://www.voidcn.com/article/p-raygpaqb-bys.html">voidcn</a></p></li></ul><h2 id="更多"><a href="#更多" class="headerlink" title="更多:"></a>更多:</h2><p><a href="http://victorfengming.gitee.io/elk/">elk课件</a></p><hr><p>版本</p><p> elasticsearch kibana logstash filebeat 都用6.8.0的哈</p><p>机器</p><p>10.221.154.185</p><p>10.221.154.186</p><p>10.221.154.187</p><p><a href="https://blog.csdn.net/yehongzhi1994/article/details/109459225">https://blog.csdn.net/yehongzhi1994/article/details/109459225</a></p><p>官网下载</p><blockquote><p>filebeat-6.8.0-linux-x86_64.tar.gz</p><p>logstash-6.8.0.tar.gz</p><p>elasticsearch-6.8.0.tar.gz</p><p>kibana-6.8.0-linux-x86_64.tar.gz</p></blockquote><p> 找到config目录下的elasticsearch.yml文件，修改配置： </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cluster.name:</span> <span class="number">154</span><span class="string">-es</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">node-185</span></span><br><span class="line"><span class="attr">bootstrap.memory_lock:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">bootstrap.system_call_filter:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">10.221</span><span class="number">.154</span><span class="number">.185</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9003</span></span><br><span class="line"><span class="attr">discovery.zen.ping.unicast.hosts:</span> [<span class="string">&quot;10.221.154.182&quot;</span>, <span class="string">&quot;10.221.154.183&quot;</span>]</span><br><span class="line"><span class="attr">discovery.zen.minimum_master_nodes:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">node.master:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">node.ingest:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>es配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cluster.name:</span> <span class="number">154</span><span class="string">-es</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">node-185</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">10.221</span><span class="number">.154</span><span class="number">.185</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9003</span></span><br><span class="line"><span class="attr">path.data:</span> <span class="string">/opt/app/elk6.8.0/elasticsearch-6.8.0/data</span></span><br><span class="line"><span class="attr">path.logs:</span> <span class="string">/opt/app/elk6.8.0/elasticsearch-6.8.0/logs</span></span><br><span class="line"></span><br><span class="line"><span class="attr">xpack.security.enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.verification_mode:</span> <span class="string">certificate</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.keystore.path:</span> <span class="string">/opt/app/elk6.8.0/elasticsearch-6.8.0/elastic-certificates.p12</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.truststore.path:</span> <span class="string">/opt/app/elk6.8.0/elasticsearch-6.8.0/elastic-certificates.p12</span></span><br></pre></td></tr></table></figure><p>修改配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/app/elk6.8.0/elasticsearch-6.8.0/config/</span><br><span class="line">vi elasticsearch.yml</span><br></pre></td></tr></table></figure><p>查找替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s&#x2F;\&#x2F;\&#x2F;&#x2F;#&#x2F;g </span><br></pre></td></tr></table></figure><p>%s全局</p><p>//  待匹配的字符</p><p><code># 要替换的字符</code></p><p>g匹配到的全替换</p><p>查找替换</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/#/\r# /g</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network.host:</span> <span class="number">10.221</span><span class="number">.154</span><span class="number">.185</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9003</span></span><br><span class="line"><span class="attr">path:</span></span><br><span class="line">    <span class="attr">data:</span> <span class="string">/opt/app/elk6.8.0/elasticsearch-6.8.0/data</span></span><br><span class="line">    <span class="attr">logs:</span> <span class="string">/opt/app/elk6.8.0/elasticsearch-6.8.0/logs</span></span><br><span class="line"><span class="attr">bootstrap.memory_lock:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">bootstrap.system_call_filter:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">xpack.security.enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.verification_mode:</span> <span class="string">certificate</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.keystore.path:</span> <span class="string">/opt/app/elk6.8.0/elasticsearch-6.8.0/elastic-certificates.p12</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.truststore.path:</span> <span class="string">/opt/app/elk6.8.0/elasticsearch-6.8.0/elastic-certificates.p12</span></span><br></pre></td></tr></table></figure><h1 id="elasticsearch"><a href="#elasticsearch" class="headerlink" title="elasticsearch"></a>elasticsearch</h1><h2 id="启动es"><a href="#启动es" class="headerlink" title="启动es"></a>启动es</h2><blockquote><p>ps -ef|grep ela</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;app&#x2F;elk6.8.0&#x2F;elasticsearch-6.8.0</span><br><span class="line"></span><br><span class="line">rm output.log</span><br><span class="line"></span><br><span class="line">nohup .&#x2F;bin&#x2F;elasticsearch &gt;&gt; output.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">ps -ef|grep ela</span><br><span class="line"></span><br><span class="line">tail -f output.log</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>解决1: <a href="https://blog.csdn.net/qq_21383435/article/details/108962457">es check the logs and fix your configuration or disable system call filters</a></p><h1 id="kibana"><a href="#kibana" class="headerlink" title="kibana"></a>kibana</h1><p>配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#修改如下配置</span></span><br><span class="line"><span class="attr">server.port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">server.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="comment">##修改为自己es的端口</span></span><br><span class="line"><span class="attr">elasticsearch.url:</span> <span class="string">&quot;http://10.221.154.185:9003&quot;</span></span><br><span class="line"><span class="attr">kibana.index:</span> <span class="string">&quot;.kibana&quot;</span></span><br><span class="line"><span class="attr">i18n.locale:</span> <span class="string">&quot;zh-CN&quot;</span><span class="comment"># 配置中文 6.7以后版本可直接配置</span></span><br></pre></td></tr></table></figure><p>启动脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cd &#x2F;opt&#x2F;app&#x2F;elk6.8.0&#x2F;kibana-6.8.0-linux-x86_64&#x2F;bin</span><br><span class="line"></span><br><span class="line">rm output.log</span><br><span class="line"></span><br><span class="line">nohup .&#x2F;kibana &gt;&gt; output.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">ps -ef|grep kibana</span><br></pre></td></tr></table></figure><hr><h1 id="filebeat"><a href="#filebeat" class="headerlink" title="filebeat"></a>filebeat</h1><h2 id="完整-filebeat-logstash-ES"><a href="#完整-filebeat-logstash-ES" class="headerlink" title="完整 filebeat-logstash-ES"></a>完整 filebeat-logstash-ES</h2><p>10.221.154.188</p><p><a href="https://www.cnblogs.com/lwx57280/p/13742433.html">https://www.cnblogs.com/lwx57280/p/13742433.html</a></p><p>配值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/app/elk6.8.0/filebeat-6.8.0-linux-x86_64</span><br><span class="line"></span><br><span class="line">vi f2l2e-log.yml</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/opt/applog/*.log</span></span><br><span class="line">  <span class="attr">tags:</span> [<span class="string">&quot;web&quot;</span>, <span class="string">&quot;test&quot;</span>]</span><br><span class="line">  <span class="attr">fields:</span></span><br><span class="line">    <span class="attr">from:</span> <span class="string">test-web</span></span><br><span class="line">  <span class="attr">fields_under_root:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">setup.template.settings:</span></span><br><span class="line">  <span class="attr">index.number_of_shards:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">output.logstash:</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;10.221.154.186:5044&quot;</span>]</span><br><span class="line"><span class="attr">setup.kibana:</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">&quot;10.221.154.187:8080&quot;</span></span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/app/elk6.8.0/filebeat-6.8.0-linux-x86_64</span><br><span class="line"></span><br><span class="line">rm output1.log</span><br><span class="line"></span><br><span class="line">nohup ./filebeat -e -c ./f2l2e-log.yml  &gt;&gt; output1.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="meta">#</span><span class="bash"> -e 标准启动 -c 指定配置文件</span></span><br><span class="line">ps -ef|grep filebeat</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/applog/</span><br><span class="line"></span><br><span class="line">echo &quot;victor279&quot; &gt;&gt; q.log</span><br></pre></td></tr></table></figure><h2 id="测试-filebeat-ES"><a href="#测试-filebeat-ES" class="headerlink" title="测试 filebeat-ES"></a>测试 filebeat-ES</h2><p>配值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/app/elk6.8.0/filebeat-6.8.0-linux-x86_64</span><br><span class="line"></span><br><span class="line">vi f2e-log.yml</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/opt/applog/*.log</span></span><br><span class="line">  <span class="attr">tags:</span> [<span class="string">&quot;web&quot;</span>, <span class="string">&quot;test&quot;</span>]</span><br><span class="line">  <span class="attr">fields:</span></span><br><span class="line">    <span class="attr">from:</span> <span class="string">test-web</span></span><br><span class="line">  <span class="attr">fields_under_root:</span> <span class="literal">false</span> </span><br><span class="line"><span class="attr">setup.template.settings:</span></span><br><span class="line">  <span class="attr">index.number_of_shards:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;10.221.154.185:9003&quot;</span>]</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/app/elk6.8.0/filebeat-6.8.0-linux-x86_64</span><br><span class="line"></span><br><span class="line">rm output2.log</span><br><span class="line"></span><br><span class="line">nohup ./filebeat -e -c ./f2e-log.yml  &gt;&gt; output2.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="meta">#</span><span class="bash"> -e 标准启动 -c 指定配置文件</span></span><br><span class="line"></span><br><span class="line">ps -ef|grep filebeat</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/applog/</span><br><span class="line"></span><br><span class="line">echo &quot;victor990&quot; &gt;&gt; c.log</span><br></pre></td></tr></table></figure><p>ELK : <a href="https://blog.csdn.net/beyond_qjm/article/details/81943187">https://blog.csdn.net/beyond_qjm/article/details/81943187</a></p><h1 id="Logstash"><a href="#Logstash" class="headerlink" title="Logstash"></a>Logstash</h1><h2 id="完整-filebeat-logstash-ES-1"><a href="#完整-filebeat-logstash-ES-1" class="headerlink" title="完整 filebeat-logstash-ES"></a>完整 filebeat-logstash-ES</h2><p><a href="https://blog.csdn.net/beyond_qjm/article/details/81945527">https://blog.csdn.net/beyond_qjm/article/details/81945527</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ./logstash -f ../config/logstash-sample.conf</span> </span><br><span class="line"></span><br><span class="line">cd /opt/app/elk6.8.0/logstash-6.8.0/</span><br><span class="line"></span><br><span class="line">rm output.log</span><br><span class="line"></span><br><span class="line">nohup ./bin/logstash -f ./config/f2l2e-pipelines.yml   &gt;&gt; output.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">ps -ef|grep logstash</span><br><span class="line"></span><br><span class="line">tail -f output.log</span><br></pre></td></tr></table></figure><hr><h2 id="测试-logstash-ES"><a href="#测试-logstash-ES" class="headerlink" title="测试 logstash-ES"></a>测试 logstash-ES</h2><hr><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">input</span> &#123;</span><br><span class="line">    <span class="string">file</span> &#123;</span><br><span class="line">        <span class="string">path</span> <span class="string">=&gt;</span> <span class="string">&quot;/opt/applog/*.log&quot;</span></span><br><span class="line">        <span class="string">start_position</span> <span class="string">=&gt;</span> <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">filter</span> &#123;</span><br><span class="line">    <span class="string">mutate</span> &#123;</span><br><span class="line">        <span class="string">split</span> <span class="string">=&gt;</span> &#123;<span class="string">&quot;message&quot;</span><span class="string">=&gt;&quot;|&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">output</span> &#123;</span><br><span class="line">    <span class="string">elasticsearch</span> &#123;</span><br><span class="line">        <span class="string">hosts</span> <span class="string">=&gt;</span> [<span class="string">&quot;10.221.154.185:9003&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/app/elk6.8.0/logstash-6.8.0</span><br><span class="line"></span><br><span class="line">rm output.log</span><br><span class="line"></span><br><span class="line">nohup ./bin/logstash -f ./config/l2e-piplines.yml  &gt;&gt; output.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">ps -ef|grep logstash</span><br><span class="line"></span><br><span class="line">cat output.log</span><br></pre></td></tr></table></figure><hr><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/applog/</span><br><span class="line"></span><br><span class="line">echo &quot;victor494&quot; &gt;&gt; f.log</span><br></pre></td></tr></table></figure><h2 id="input-from-filebeat"><a href="#input-from-filebeat" class="headerlink" title="input from filebeat"></a>input from filebeat</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">input</span> &#123;</span><br><span class="line">   <span class="string">beats</span> &#123;</span><br><span class="line">     <span class="string">port</span> <span class="string">=&gt;</span> <span class="number">5044</span>   <span class="comment">#要监听的端口</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">filter</span> &#123;</span><br><span class="line">    <span class="string">mutate</span> &#123;</span><br><span class="line">        <span class="string">split</span> <span class="string">=&gt;</span> &#123;<span class="string">&quot;message&quot;</span><span class="string">=&gt;&quot;|&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">output</span> &#123;</span><br><span class="line">    <span class="string">elasticsearch</span> &#123;</span><br><span class="line">        <span class="string">hosts</span> <span class="string">=&gt;</span> [<span class="string">&quot;10.221.154.185:9003&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/app/elk6.8.0/logstash-6.8.0</span><br><span class="line"></span><br><span class="line">rm output.log</span><br><span class="line"></span><br><span class="line">nohup ./bin/logstash -f ./config/f2l2e-pipelines.yml  &gt;&gt; output.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">ps -ef|grep logstash</span><br><span class="line"></span><br><span class="line">tail -f output.log</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/applog/</span><br><span class="line"></span><br><span class="line">echo &quot;victor991&quot; &gt;&gt; f.log</span><br></pre></td></tr></table></figure><h1 id="todo"><a href="#todo" class="headerlink" title="todo"></a>todo</h1><p>单独测试 </p><p>filebeat 连 logstash</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch f2l-pipelines.yml</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">input</span> &#123;</span><br><span class="line">   <span class="string">beats</span> &#123;</span><br><span class="line">     <span class="string">port</span> <span class="string">=&gt;</span> <span class="number">5044</span>   <span class="comment">#要监听的端口</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">output</span> &#123;</span><br><span class="line">    <span class="string">stdout</span> &#123; <span class="string">codec</span> <span class="string">=&gt;</span> <span class="string">rubydebug</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/app/elk6.8.0/logstash-6.8.0</span><br><span class="line"></span><br><span class="line">rm output.log</span><br><span class="line"></span><br><span class="line">nohup ./bin/logstash -f ./config/f2l-pipelines.yml  &gt;&gt; output.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">ps -ef|grep logstash</span><br></pre></td></tr></table></figure><hr><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">filebeat.inputs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">log</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/opt/applog/*.log</span></span><br><span class="line">  <span class="attr">tags:</span> [<span class="string">&quot;web&quot;</span>, <span class="string">&quot;test&quot;</span>]</span><br><span class="line">  <span class="attr">fields:</span></span><br><span class="line">    <span class="attr">from:</span> <span class="string">test-web</span></span><br><span class="line">  <span class="attr">fields_under_root:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">setup.template.settings:</span></span><br><span class="line">  <span class="attr">index.number_of_shards:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">output.logstash:</span></span><br><span class="line">  <span class="attr">hosts:</span> [<span class="string">&quot;10.221.154.186:5044&quot;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/app/elk6.8.0/filebeat-6.8.0-linux-x86_64</span><br><span class="line"></span><br><span class="line">rm output.log</span><br><span class="line"></span><br><span class="line">nohup ./filebeat -e -c ./f2l-log.yml  &gt;&gt; output1.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="meta">#</span><span class="bash"> -e 标准启动 -c 指定配置文件</span></span><br><span class="line">ps -ef|grep filebeat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;elk&quot;&gt;&lt;a href=&quot;#elk&quot; class=&quot;headerlink&quot; title=&quot;elk&quot;&gt;&lt;/a&gt;elk&lt;/h2&gt;&lt;p&gt;elasticsearch&lt;/p&gt;
&lt;p&gt;lotstash&lt;/p&gt;
&lt;p&gt;kibana&lt;/p&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a hre</summary>
      
    
    
    
    
    <category term="solution" scheme="http://victorfengming.gitee.io/tags/solution/"/>
    
    <category term="elk" scheme="http://victorfengming.gitee.io/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>Gitbook安装问题</title>
    <link href="http://victorfengming.gitee.io/git/gitbook/"/>
    <id>http://victorfengming.gitee.io/git/gitbook/</id>
    <published>2021-08-28T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.091Z</updated>
    
    <content type="html"><![CDATA[<p>安装gitbook ,由于原来的 安装环境中的文件没有删除干净,导致一直安装不上,</p><p>只需要将对应的文件删除了即可</p><p>现在解决就</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">E:\Projects\IdeaProjects\gitbook\other_gitbook&gt;</span><br><span class="line">E:\Projects\IdeaProjects\gitbook\other_gitbook&gt;npm install -g gitbook-cli</span><br><span class="line">npm WARN rollback Rolling back is-fullwidth-code-point@2.0.0 failed (this is probably harmless): EPERM: operation not permitted, lstat &#x27;C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbo</span><br><span class="line">ok-cli\node_modules\npm\node_modules\update-notifier\node_modules\boxen\node_modules\string-width\node_modules&#x27;</span><br><span class="line">npm WARN rollback Rolling back strip-ansi@4.0.0 failed (this is probably harmless): EPERM: operation not permitted, lstat &#x27;C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\node_m</span><br><span class="line">odules\npm\node_modules\update-notifier\node_modules\boxen\node_modules\string-width\node_modules&#x27;</span><br><span class="line">npm WARN rollback Rolling back number-is-nan@1.0.1 failed (this is probably harmless): EPERM: operation not permitted, lstat &#x27;C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\nod</span><br><span class="line">e_modules\npm\node_modules\update-notifier\node_modules\boxen\node_modules\widest-line\node_modules\string-width\node_modules\is-fullwidth-code-point\node_modules&#x27;</span><br><span class="line">npm WARN rollback Rolling back copy-concurrently@1.0.3 failed (this is probably harmless): EPERM: operation not permitted, lstat &#x27;C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli</span><br><span class="line">\node_modules\npm\node_modules\move-concurrently\node_modules&#x27;</span><br><span class="line">npm WARN rollback Rolling back has-ansi@2.0.0 failed (this is probably harmless): EPERM: operation not permitted, scandir &#x27;C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\node_m</span><br><span class="line">odules\npm\node_modules\update-notifier\node_modules\chalk\node_modules&#x27;</span><br><span class="line">npm WARN rollback Rolling back defaults@1.0.3 failed (this is probably harmless): EPERM: operation not permitted, lstat &#x27;C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\node_mod</span><br><span class="line">ules\npm\node_modules\columnify\node_modules\wcwidth\node_modules&#x27;</span><br><span class="line">npm WARN rollback Rolling back registry-url@3.1.0 failed (this is probably harmless): EPERM: operation not permitted, scandir &#x27;C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\no</span><br><span class="line">de_modules\npm\node_modules\update-notifier\node_modules\latest-version\node_modules\package-json\node_modules&#x27;</span><br><span class="line">npm WARN rollback Rolling back asn1@0.2.3 failed (this is probably harmless): EPERM: operation not permitted, scandir &#x27;C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\node_modul</span><br><span class="line">es\npmi\node_modules\npm\node_modules\request\node_modules\http-signature\node_modules\sshpk\node_modules&#x27;</span><br><span class="line">npm WARN rollback Rolling back http-signature@1.1.1 failed (this is probably harmless): EPERM: operation not permitted, scandir &#x27;C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\</span><br><span class="line">node_modules\npmi\node_modules\npm\node_modules\request\node_modules&#x27;</span><br><span class="line">npm ERR! code EEXIST</span><br><span class="line">npm ERR! path C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\bin\gitbook.js</span><br><span class="line">npm ERR! dest C:\Users\Administrator\AppData\Roaming\npm\gitbook</span><br><span class="line">npm ERR! EEXIST: file already exists, cmd shim &#x27;C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\bin\gitbook.js&#x27; -&gt; &#x27;C:\Users\Administrator\AppData\Roaming\npm\gitbook&#x27;</span><br><span class="line">npm ERR! File exists: C:\Users\Administrator\AppData\Roaming\npm\gitbook</span><br><span class="line">npm ERR! Remove the existing file and try again, or run npm</span><br><span class="line">npm ERR! with --force to overwrite files recklessly.</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found in:</span><br><span class="line">npm ERR!     C:\Users\Administrator\AppData\Roaming\npm-cache\_logs\2021-02-04T13_02_46_864Z-debug.log</span><br><span class="line"></span><br><span class="line">E:\Projects\IdeaProjects\gitbook\other_gitbook&gt;npm install -g gitbook-cli</span><br><span class="line">C:\Users\Administrator\AppData\Roaming\npm\gitbook -&gt; C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\bin\gitbook.js</span><br><span class="line">+ gitbook-cli@2.3.2</span><br><span class="line">added 578 packages from 672 contributors in 16.351s</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="第二个问题"><a href="#第二个问题" class="headerlink" title="第二个问题"></a>第二个问题</h3><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">E:\Projects\IdeaProjects\gitbook\other_gitbook&gt;gitbook -V</span><br><span class="line">CLI version: 2.3.2</span><br><span class="line">Installing GitBook 3.2.3</span><br><span class="line">C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\node_modules\npm\node_modules\graceful-fs\polyfills.js:287</span><br><span class="line">      if (cb) cb.apply(this, arguments)</span><br><span class="line">                 ^</span><br><span class="line"></span><br><span class="line">TypeError: cb.apply is not a function</span><br><span class="line">    at C:\Users\Administrator\AppData\Roaming\npm\node_modules\gitbook-cli\node_modules\npm\node_modules\graceful-fs\polyfills.js:287:18</span><br><span class="line">    at FSReqCallback.oncomplete (fs.js:169:5)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这行代码就是检查的,没鸡儿用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">statFix</span> (<span class="params">orig</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!orig) <span class="keyword">return</span> orig</span><br><span class="line">  <span class="comment">// Older versions of Node erroneously returned signed integers for</span></span><br><span class="line">  <span class="comment">// uid + gid.</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">target, cb</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> orig.call(fs, target, <span class="function"><span class="keyword">function</span> (<span class="params">er, stats</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (!stats) <span class="keyword">return</span> cb.apply(<span class="built_in">this</span>, <span class="built_in">arguments</span>)</span><br><span class="line">      <span class="keyword">if</span> (stats.uid &lt; <span class="number">0</span>) stats.uid += <span class="number">0x100000000</span></span><br><span class="line">      <span class="keyword">if</span> (stats.gid &lt; <span class="number">0</span>) stats.gid += <span class="number">0x100000000</span></span><br><span class="line">      <span class="comment">// if (cb) cb.apply(this, arguments)</span></span><br><span class="line">      <span class="comment">// 直接就给他注释掉,完美!perfect </span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><p>这里不能直接注释 掉if (cb) cb.apply(this, arguments)</p><p>需要注释掉62-64行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fs.stat = statFix(fs.stat)</span></span><br><span class="line"><span class="comment">// fs.fstat = statFix(fs.fstat)</span></span><br><span class="line"><span class="comment">// fs.lstat = statFix(fs.lstat)</span></span><br></pre></td></tr></table></figure><p>看完这些commit的记录</p><p>物是人非</p><p>19 20 21年的提交都在这里</p><p>刻出了时光的痕迹</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;安装gitbook ,由于原来的 安装环境中的文件没有删除干净,导致一直安装不上,&lt;/p&gt;
&lt;p&gt;只需要将对应的文件删除了即可&lt;/p&gt;
&lt;p&gt;现在解决就&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;figcaption&gt;&lt;span&gt;script</summary>
      
    
    
    
    
    <category term="gitbook" scheme="http://victorfengming.gitee.io/tags/gitbook/"/>
    
  </entry>
  
  <entry>
    <title>如何绕过dgrijalva/jwt go中的cve-2020-26160漏洞</title>
    <link href="http://victorfengming.gitee.io/golang/fiber/jwt-bug/"/>
    <id>http://victorfengming.gitee.io/golang/fiber/jwt-bug/</id>
    <published>2021-08-20T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.094Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何绕过dgrijalva-jwt-go中的cve-2020-26160漏洞"><a href="#如何绕过dgrijalva-jwt-go中的cve-2020-26160漏洞" class="headerlink" title="如何绕过dgrijalva/jwt go中的cve-2020-26160漏洞"></a>如何绕过dgrijalva/jwt go中的cve-2020-26160漏洞</h1><p>如何绕过dgrijalva/jwt go中的cve-2020-26160漏洞？</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> jwt jwt-<span class="keyword">go</span></span><br></pre></td></tr></table></figure><p>由于存在一个高级漏洞，Gitlab管道中无法传递容器安全状态。此漏洞为jwt-go，安装的版本为v3.2.0+incompatible。错误标题如下：jwt-go: access restriction bypass vulnerability–&gt;avd.aquasec.com/nvd/cve-2020-26160。相关回购协议的Go版本为1.16.3。如何修复此漏洞？</p><p>CVE-2020-26160漏洞是由于dgrijalva/jwt-go错误地将JWTaud字段建模为string，而基于JWT规范，它应该是字符串的一部分。</p><p>在一般情况下，“aud”值是case-sensitive字符串的数组</p><p>你自己不能绕过它，因为它是库中的一个bug：<code>https://github.com/dgrijalva/jwt-go/issues/428</code></p><p>切换到官方社区分支golang-jwt/jwt，其v3.2.1修复了漏洞：<code>https://github.com/golang-jwt/jwt/releases/tag/v3.2.1</code></p><p>导入路径更改：有关更新代码的提示，请参见MIGRATION_GUIDE.md，将导入路径从<code>github.com/dgrijalva/jwt-go</code>更改为<code>github.com/golang-jwt/jwt</code><br>修复了VerifyAudience（#12）中字符串和[]字符串之间的类型混淆问题。这修复了CVE-2020-26160</p><p>原文连接: <a href="https://www.5axxw.com/questions/content/o849sj">https://www.5axxw.com/questions/content/o849sj</a></p><p>文档地址: <a href="https://docs.gofiber.io/">https://docs.gofiber.io/</a></p><h1 id="helloworld"><a href="#helloworld" class="headerlink" title="helloworld"></a>helloworld</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/gofiber/fiber/v2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">app := fiber.New()</span><br><span class="line"></span><br><span class="line">app.Get(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *fiber.Ctx)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.SendString(<span class="string">&quot;Hello, World!&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.Listen(<span class="string">&quot;:3000&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="其他案例"><a href="#其他案例" class="headerlink" title="其他案例"></a>其他案例</h1><ul><li><a href="https://gitee.com/victorfengming/fiber-demo/">fiber-demo</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何绕过dgrijalva-jwt-go中的cve-2020-26160漏洞&quot;&gt;&lt;a href=&quot;#如何绕过dgrijalva-jwt-go中的cve-2020-26160漏洞&quot; class=&quot;headerlink&quot; title=&quot;如何绕过dgrijalva/jw</summary>
      
    
    
    
    
    <category term="Golang" scheme="http://victorfengming.gitee.io/tags/Golang/"/>
    
    <category term="Web" scheme="http://victorfengming.gitee.io/tags/Web/"/>
    
    <category term="Fiber" scheme="http://victorfengming.gitee.io/tags/Fiber/"/>
    
  </entry>
  
  <entry>
    <title>DDD领域驱动设计实战</title>
    <link href="http://victorfengming.gitee.io/comic/architecture-design/"/>
    <id>http://victorfengming.gitee.io/comic/architecture-design/</id>
    <published>2021-08-17T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:14.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DDD1-课程介绍"><a href="#DDD1-课程介绍" class="headerlink" title="DDD1-课程介绍"></a>DDD1-课程介绍</h1><h2 id="互联网大厂的蔚来架构之道"><a href="#互联网大厂的蔚来架构之道" class="headerlink" title="互联网大厂的蔚来架构之道"></a>互联网大厂的蔚来架构之道</h2><p>DDD领域驱动设计 实战</p><p>阿里ddd: cola</p><p>DDD天生就适合微服务的这种方式</p><p>阿里中台的概念</p><p>很多企业发现在践行中台的战略中遇到很多问题</p><blockquote><p>提升软件质量</p></blockquote><hr><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><p>DDD是一个庞大的理论体系,如何落地是一个问题,而不像微服务体系或者MVC架构有这么多框架</p><p>很多大厂是用这种小型的项目用DDD来进行推广</p><p>DDD要求于具体的技术无关的</p><hr><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p><img src= "/img/loading.gif" data-lazy-src="1629338118966.png" alt="1629338118966"></p><p><img src= "/img/loading.gif" data-lazy-src="1629338198960.png" alt="1629338198960"></p><p>技术学起来很快,想要与众不同,就需要你的软实力,这种软实力的提升就是比较虚的</p><p>DDD适合贯穿于你的整个体系</p><ul><li><img src= "/img/loading.gif" data-lazy-src="https://s1.hdslb.com/bfs/static/jinkela/video/asserts/playing.gif" alt="img">P22.</li></ul><h1 id="DDD2-什么是DDD"><a href="#DDD2-什么是DDD" class="headerlink" title="DDD2-什么是DDD"></a>DDD2-什么是DDD</h1><p>  17:40</p><h2 id="啥时DDD"><a href="#啥时DDD" class="headerlink" title="啥时DDD"></a>啥时DDD</h2><p><img src= "/img/loading.gif" data-lazy-src="1629338564960.png" alt="1629338564960"></p><p>NoSql: redis mongodb hbase </p><p>nosql概念是这个作者提出来的</p><p>软件设计的复杂性,要复杂才能适合ddd</p><hr><p>不如在进行权限控制的时候,我们就会简历RBAC</p><p>,通过角色来简历权限控制,就是一种ddd</p><h2 id="实现领域驱动设计"><a href="#实现领域驱动设计" class="headerlink" title="实现领域驱动设计"></a>实现领域驱动设计</h2><hr><p><img src= "/img/loading.gif" data-lazy-src="1629339244610.png" alt="1629339244610"></p><h1 id="DDD3-系统老化谁的锅"><a href="#DDD3-系统老化谁的锅" class="headerlink" title="DDD3-系统老化谁的锅"></a>DDD3-系统老化谁的锅</h1><p>  11:28</p><h2 id="什么是系统老化"><a href="#什么是系统老化" class="headerlink" title="什么是系统老化"></a>什么是系统老化</h2><p>迭代时间很长的项目</p><p>比如一个项目迭代了10多年</p><h2 id="系统老化"><a href="#系统老化" class="headerlink" title="系统老化"></a>系统老化</h2><p><img src= "/img/loading.gif" data-lazy-src="1629340114232.png" alt="1629340114232"></p><p>人员变更,</p><p>新的人员如何去理解业务需求</p><p>文档一般还是跟不上的</p><hr><p>重构否??? 重构了没有实质性的提升,成本却很高</p><h2 id="微服务架构能防止系统变老么"><a href="#微服务架构能防止系统变老么" class="headerlink" title="微服务架构能防止系统变老么"></a>微服务架构能防止系统变老么</h2><p><img src= "/img/loading.gif" data-lazy-src="1629340539762.png" alt="1629340539762"></p><p>随着微服务的发展</p><p>还是会出现没有这种实质性的该变</p><p>局部业务出现膨胀 还是需要重构, 还是需要拆分</p><p>微服务架构会一定程度上的解决,但是还是不会根本解决,只会让你的老化速度变慢一点儿</p><hr><p>DDD理论体系</p><h1 id="DDD4-转账功能改造上"><a href="#DDD4-转账功能改造上" class="headerlink" title="DDD4-转账功能改造上"></a>DDD4-转账功能改造上</h1><p>  21:03</p><p>写出一个小demo</p><h2 id="于浩代码的差距到底在哪"><a href="#于浩代码的差距到底在哪" class="headerlink" title="于浩代码的差距到底在哪"></a>于浩代码的差距到底在哪</h2><hr><p><img src= "/img/loading.gif" data-lazy-src="1629340761309.png" alt="1629340761309"></p><p><img src= "/img/loading.gif" data-lazy-src="1629340847009.png" alt="1629340847009"></p><p><img src= "/img/loading.gif" data-lazy-src="1629340861574.png" alt="1629340861574"></p><p><img src= "/img/loading.gif" data-lazy-src="1629340872021.png" alt="1629340872021"></p><p>这样的代码实际上是面相过程的方式</p><p>也被称之为事务脚本</p><p>先不考虑他的执行效果</p><p>写高质量的代码: 高内聚 低耦合</p><p>需要可行的标准: </p><p>单一职责原则:(一个模块只做一个业务)</p><p>开放封闭原则:对扩展开放,对修改封闭</p><p>依赖翻转原则: 面相接口依赖,而不是依赖具体的实现类</p><h2 id="抽象数据存储层"><a href="#抽象数据存储层" class="headerlink" title="抽象数据存储层"></a>抽象数据存储层</h2><p><img src= "/img/loading.gif" data-lazy-src="1629341310457.png" alt="1629341310457"></p><p><img src= "/img/loading.gif" data-lazy-src="1629341335070.png" alt="1629341335070"></p><p>把业务方法写到 实体里面</p><p>DDD里面提到的充血模型</p><p>与之对应的 称为 贫血模型&gt;&gt;&gt; POJO Martin Fowler 提出来的(就是只有属性和get set 方法的实体类)</p><blockquote><p>我们这个实体本来是为了承载业务来设计的,但是</p><p>最后变成从这个实体根本看不出有哪些业务了,这种称为贫血失忆症</p><p>如和解决: 充血模型</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="1629341860503.png" alt="1629341860503"></p><p>可以在定义一个实体,来实现,比如修改密码,修改xxx的业务,这个实体只做他的事情: 转入转出操作</p><hr><p>定义的时候就比较别扭了</p><p>到底什么方法要加入实体类中</p><p>DDD中对这个Business是有说道的</p><p>业务是对于实体改变的</p><p>而这种转账是不会改变实体的</p><blockquote><p>Order -&gt; OrderItem -&gt; Address</p></blockquote><p>整体于部分的关系,</p><hr><p>把仓库定义成巨大无比的对象池</p><p>理想: 所有对象都在内存对象池里</p><p>如果有大对象,就需要工厂来 帮助改造</p><h1 id="DDD5-转账功能改造下"><a href="#DDD5-转账功能改造下" class="headerlink" title="DDD5-转账功能改造下"></a>DDD5-转账功能改造下</h1><p>  24:52</p><h2 id="抽象第三方服务"><a href="#抽象第三方服务" class="headerlink" title="抽象第三方服务"></a>抽象第三方服务</h2><p><img src= "/img/loading.gif" data-lazy-src="1629350158455.png" alt="1629350158455"></p><p><img src= "/img/loading.gif" data-lazy-src="1629350169915.png" alt="1629350169915"></p><p>你的第三方服务怎么实现的和我的业务没有关系</p><blockquote><p>DDD中的防腐层ACL: 隔离第三方的依赖</p></blockquote><h2 id="抽象第三方组件"><a href="#抽象第三方组件" class="headerlink" title="抽象第三方组件"></a>抽象第三方组件</h2><p><img src= "/img/loading.gif" data-lazy-src="1629350386261.png" alt="1629350386261"></p><p><img src= "/img/loading.gif" data-lazy-src="1629351563267.png" alt="1629351563267"></p><h2 id="DDD4层架构"><a href="#DDD4层架构" class="headerlink" title="DDD4层架构"></a>DDD4层架构</h2><p><img src= "/img/loading.gif" data-lazy-src="1629352294652.png" alt="1629352294652"></p><blockquote><p>DDD的一大特点,当你的业务绝对简单的时候,</p><p>在小型的业务下,往往体现不出优势</p></blockquote><h1 id="DDD6-DDD项目改造"><a href="#DDD6-DDD项目改造" class="headerlink" title="DDD6-DDD项目改造"></a>DDD6-DDD项目改造</h1><p>  16:53</p><h1 id="DDD7-DDD项目改造"><a href="#DDD7-DDD项目改造" class="headerlink" title="DDD7-DDD项目改造"></a>DDD7-DDD项目改造</h1><p>  25:22</p><h2 id="“DDD”Vs-DDD项目改造"><a href="#“DDD”Vs-DDD项目改造" class="headerlink" title="“DDD”Vs DDD项目改造"></a>“DDD”Vs DDD项目改造</h2><p><img src= "/img/loading.gif" data-lazy-src="1629353459610.png" alt="1629353459610"></p><h1 id="DDD8-DDD项目改造下"><a href="#DDD8-DDD项目改造下" class="headerlink" title="DDD8-DDD项目改造下"></a>DDD8-DDD项目改造下</h1><p>  11:02</p><p><img src= "/img/loading.gif" data-lazy-src="1629354275521.png" alt="1629354275521"></p><p>“DDD”,data driven design</p><h1 id="DDD9-DDD视角下的单体架构与微服务架构"><a href="#DDD9-DDD视角下的单体架构与微服务架构" class="headerlink" title="DDD9-DDD视角下的单体架构与微服务架构"></a>DDD9-DDD视角下的单体架构与微服务架构</h1><p>  13:46</p><h2 id="微服务时代-单体架构淘汰了吗"><a href="#微服务时代-单体架构淘汰了吗" class="headerlink" title="微服务时代,单体架构淘汰了吗"></a>微服务时代,单体架构淘汰了吗</h2><p><img src= "/img/loading.gif" data-lazy-src="1629356649627.png" alt="1629356649627"></p><h2 id="DDD视角下单体架构与微服务架构的统一"><a href="#DDD视角下单体架构与微服务架构的统一" class="headerlink" title="DDD视角下单体架构与微服务架构的统一"></a>DDD视角下单体架构与微服务架构的统一</h2><p><img src= "/img/loading.gif" data-lazy-src="1629360817198.png" alt="1629360817198"></p><h1 id="DDD10-DDD发展展望"><a href="#DDD10-DDD发展展望" class="headerlink" title="DDD10-DDD发展展望"></a>DDD10-DDD发展展望</h1><p>  17:46</p><h2 id="中台-DDD的另一片战场"><a href="#中台-DDD的另一片战场" class="headerlink" title="中台,DDD的另一片战场"></a>中台,DDD的另一片战场</h2><p><img src= "/img/loading.gif" data-lazy-src="1629360930637.png" alt="1629360930637"></p><blockquote><p>战略工具,DDD提供 的方法 形成一个统一的语言</p></blockquote><p>平台+资源调度&gt;-&gt;- 中台</p><p><img src= "/img/loading.gif" data-lazy-src="1629361977397.png" alt="1629361977397"></p><p><img src= "/img/loading.gif" data-lazy-src="1629362358998.png" alt="1629362358998"></p><hr><h1 id="from"><a href="#from" class="headerlink" title="from"></a>from</h1><p><a href="https://www.bilibili.com/video/BV1Y341167Xp?from=search&amp;seid=8938952084618205028">https://www.bilibili.com/video/BV1Y341167Xp?from=search&amp;seid=8938952084618205028</a></p><p>2小时掌握宇宙最强DDD（Data Display Debugger）DDD领域驱动设计实战</p><hr><p><img src= "/img/loading.gif" data-lazy-src="1631600715895.png" alt="1631600715895"></p><p><img src= "/img/loading.gif" data-lazy-src="1631600712581.png" alt="1631600712581"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DDD1-课程介绍&quot;&gt;&lt;a href=&quot;#DDD1-课程介绍&quot; class=&quot;headerlink&quot; title=&quot;DDD1-课程介绍&quot;&gt;&lt;/a&gt;DDD1-课程介绍&lt;/h1&gt;&lt;h2 id=&quot;互联网大厂的蔚来架构之道&quot;&gt;&lt;a href=&quot;#互联网大厂的蔚来架构之道&quot;</summary>
      
    
    
    
    
    <category term="DDD" scheme="http://victorfengming.gitee.io/tags/DDD/"/>
    
    <category term="base" scheme="http://victorfengming.gitee.io/tags/base/"/>
    
  </entry>
  
  <entry>
    <title>Kafka速度快的原因</title>
    <link href="http://victorfengming.gitee.io/cp/why-kafka-fast/"/>
    <id>http://victorfengming.gitee.io/cp/why-kafka-fast/</id>
    <published>2021-06-16T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.065Z</updated>
    
    <content type="html"><![CDATA[<p>读写2方面:</p><h2 id="写-tv-發財"><a href="#写-tv-發財" class="headerlink" title="写: tv_發財"></a>写: tv_發財</h2><pre><code>    1. 顺序存储:           -  顺序写入,去掉了比较耗费时间的磁盘寻址的过程,这个磁盘的顺序读写速度甚至超过内存的随机读写           -  顺序写入,jvm的GC效率低,内存占用大, 使用磁盘可以避免这个问题,相比(在内存中操作)           -  顺序写入,系统冷启动后,磁盘缓存依然可用 (linux对于磁盘的读写也有优化,比如磁盘缓存)            不删除数据:后的2种策略:           -   顺序写入一是基于时间。           -   顺序写入二是基于partition文件大小。    2. 分页存储:           - 数据写入不实时,利用现代操作系统的分页存储来利用内存提高IO效率.            Memory Mapped Files(后面简称mmap)也被翻译成 内存映射文件 ，在64位操作系统中一般可以表示            20G的数据文件，它的工作原理是直接利用操作系统的Page来实现文件到物理内存的直接映射。` 完成映射之后你对物理内存的操作会被同步到硬盘上（操作系统在适当的时候）</code></pre><h2 id="读-tv-呆"><a href="#读-tv-呆" class="headerlink" title="读: tv_呆"></a>读: tv_呆</h2><pre><code>    1. 零拷贝            Kafka使用零拷贝(Zero-Copy)技术来提供它的性能，所谓的零拷贝是指将数据直接从磁盘文件复制到网卡设备中，而                                            不需要经由应用程序之手，减少了内核和用户模式之间的上下文切换，零拷贝技术通过DMA技术实现。   2.  消息压缩            因为网络IO更可能成为瓶颈,所以利用少量的cpu资源进行压缩是有必要的           2.1、如果每个消息都压缩，但是压缩率相对很低，所以Kafka使用了批量压缩，即将多个消息一起压缩                而不是单个消息压缩            2.2、Kafka允许使用递归的消息集合，批量的消息可以通过压缩的形式传输并且在日志中也可以保持压                    缩格式，直到被消费者解压缩            2.3、Kafka支持多种压缩协议，包括Gzip和Snappy压缩协议</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;读写2方面:&lt;/p&gt;
&lt;h2 id=&quot;写-tv-發財&quot;&gt;&lt;a href=&quot;#写-tv-發財&quot; class=&quot;headerlink&quot; title=&quot;写: tv_發財&quot;&gt;&lt;/a&gt;写: tv_發財&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;    1. 顺序存储:
           - </summary>
      
    
    
    
    
    <category term="solution" scheme="http://victorfengming.gitee.io/tags/solution/"/>
    
    <category term="interview" scheme="http://victorfengming.gitee.io/tags/interview/"/>
    
    <category term="kafka" scheme="http://victorfengming.gitee.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>The Plan Of Java Training</title>
    <link href="http://victorfengming.gitee.io/index/train/"/>
    <id>http://victorfengming.gitee.io/index/train/</id>
    <published>2021-05-20T05:14:00.000Z</published>
    <updated>2022-03-04T04:24:15.097Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th><a href="https://victorfengming.gitee.io/index/gitbook/">Go</a></th><th>完成度</th><th></th><th></th></tr></thead><tbody><tr><td>01.第一阶段 开源框架源码解析（完结）</td><td></td><td></td><td></td></tr><tr><td>–&gt; 01.模块一 持久层框架设计及MyBatis源码分析,<a href="https://victorfengming.gitee.io/file/pdf/mybatis/lagou_mybatis.pdf">课件</a></td><td></td><td></td><td>2021/5/18</td></tr><tr><td>–&gt;–&gt; <a href="http://victorfengming.gitee.io/mybatis/lagou/01_%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%81%E4%B9%85%E5%B1%82%E6%A1%86%E6%9E%B6/">01.任务一：自定义持久层框架</a></td><td>85</td><td></td><td>2021/5/19</td></tr><tr><td>–&gt;–&gt; <a href="http://victorfengming.gitee.io/mybatis/lagou/02_MyBatis%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE%E5%8F%8A%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/#01--mybatis%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%E5%9B%9E%E9%A1%BEvep">02.任务二：MyBatis基础回顾及高级应用</a></td><td>85</td><td></td><td>2021/5/20</td></tr><tr><td>–&gt;–&gt; <a href="http://victorfengming.gitee.io/mybatis/lagou/03_MyBatis%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/">03.任务三：MyBatis源码剖析</a></td><td>35</td><td></td><td>2021/5/21</td></tr><tr><td>–&gt;–&gt; <a href="https://victorfengming.gitee.io/mybatis/lagou/04_%E6%A8%A1%E5%9D%97%E4%BD%9C%E4%B8%9A/">04.任务四：模块作业</a></td><td>15</td><td></td><td>2021/5/22</td></tr><tr><td>–&gt;–&gt; 05.直播答疑回放</td><td>0</td><td></td><td>2021/5/23</td></tr><tr><td>–&gt;–&gt; 选修：<a href="https://victorfengming.gitee.io/mybatis/lagou/05_Mybatis-Plus/">MyBatis-Plus应用</a></td><td>65</td><td>13/30</td><td>2021/5/23</td></tr><tr><td>–&gt; 02.模块二 IoC容器设计实现及Spring源码分析,<a href="https://victorfengming.gitee.io/file/pdf/spring/lagou_spring.pdf">课件</a></td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：自定义IoC&amp;AOP框架</td><td></td><td>5/14</td><td>2021/5/24</td></tr><tr><td>–&gt;–&gt; 02.任务二：Spring IoC高级应用与源码剖析</td><td>0</td><td></td><td>2021/5/25</td></tr><tr><td>–&gt;–&gt; 03.任务三：Spring AOP高级应用与源码剖析</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 04.任务四：模块作业</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.直播答疑回放</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 03.模块三 <a href="http://victorfengming.gitee.io/spring/">MVC框架设计实现及SpringMVC源码分析、通用数据操作接口设计及SpringData 接口规范</a></td><td>0</td><td></td><td>2021/5/26</td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td>0</td><td></td><td>2021/5/27</td></tr><tr><td>–&gt;–&gt; 01.任务一： SpringMVC基础回顾及其高级深入</td><td>0</td><td></td><td>2021/5/28</td></tr><tr><td>–&gt;–&gt; 02.任务二：自定义MVC框架</td><td>0</td><td></td><td>2021/5/29</td></tr><tr><td>–&gt;–&gt; 03.任务三：SpringMVC源码剖析及其SSM整合</td><td>0</td><td></td><td>2021/5/30</td></tr><tr><td>–&gt;–&gt; 04.任务四：SpringData高级 应用及其源码剖析</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.任务五：模块作业</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 06.直播答疑回放</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 04.模块四 <a href="http://victorfengming.gitee.io/springboot/">约定优于配置设计范式及Spring Boot源码剖析 SpringBoot缓存管理之自定义RedisCache</a></td><td>0</td><td></td><td>2021/5/31</td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td>0</td><td></td><td>2021/6/1</td></tr><tr><td>–&gt;–&gt; 01.任务一：SpringBoot基础回顾</td><td>0</td><td></td><td>2021/6/2</td></tr><tr><td>–&gt;–&gt; 02.任务二：SpringBoot源码剖析</td><td>0</td><td></td><td>2021/6/3</td></tr><tr><td>–&gt;–&gt; 03.任务三：SpringBoot高级进阶</td><td>0</td><td></td><td>2021/6/4</td></tr><tr><td>–&gt;–&gt; 04.任务四：模板作业</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.直播答疑回放</td><td>0</td><td></td><td></td></tr><tr><td>02.第二阶段 Web服务器深度应用及调优（完结）</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 01.模块一 Tomcat深度剖析及性能调优、Nginx深度剖析及性能调优</td><td>0</td><td></td><td>2021/6/5</td></tr><tr><td>–&gt;–&gt; 01.任务一：Tomcat高级使用及其原理剖析</td><td>0</td><td></td><td>2021/6/6</td></tr><tr><td>–&gt;–&gt; 02.任务二：Tomcat源码剖析及调优</td><td>0</td><td></td><td>2021/6/7</td></tr><tr><td>–&gt;–&gt; 03.任务三：<a href="https://victorfengming.gitee.io/nginx/">Nginx原理深入剖析</a></td><td>0</td><td></td><td>2021/6/8</td></tr><tr><td>–&gt;–&gt; 04.任务四：模块作业</td><td>0</td><td></td><td>2021/6/9</td></tr><tr><td>–&gt;–&gt; 05.直播答疑回放</td><td>0</td><td></td><td>2021/6/10</td></tr><tr><td>–&gt; 02.模块二 Cluster模式潜在问题及解决方案、Web服务综合解决方案</td><td>0</td><td></td><td>2021/6/14</td></tr><tr><td>–&gt;–&gt; 00.资料</td><td>0</td><td></td><td>2021/6/15</td></tr><tr><td>–&gt;–&gt; 01.任务一：一致性Hash问题及解决方案</td><td>0</td><td></td><td>2021/6/16</td></tr><tr><td>–&gt;–&gt; 02.任务二：分布式集群时钟同步问题及解决方案</td><td>0</td><td></td><td>2021/6/17</td></tr><tr><td>–&gt;–&gt; 03.任务三：分布式ID问题及解决方案</td><td>0</td><td></td><td>2021/6/18</td></tr><tr><td>–&gt;–&gt; 04.任务四：分布式调度问题及解决方案</td><td>0</td><td></td><td>2021/6/19</td></tr><tr><td>–&gt;–&gt; 05.任务五：Session一致性问题及解决方案</td><td>0</td><td></td><td>2021/6/20</td></tr><tr><td>–&gt;–&gt; 06.任务六：模块作业</td><td>0</td><td></td><td>2021/6/21</td></tr><tr><td>–&gt;–&gt; 07.直播答疑回放</td><td>0</td><td></td><td>2021/6/22</td></tr><tr><td>03.第三阶段 分布式架构设计&amp;微服务深入剖析（完结）</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 01.模块一 分布式理论、架构设计（自定义RPC）</td><td>0</td><td></td><td>2021/6/23</td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：基础理论及一致性算法</td><td>0</td><td></td><td>2021/6/24</td></tr><tr><td>–&gt;–&gt; 02.任务二：分布式系统设计策略</td><td>0</td><td></td><td>2021/6/25</td></tr><tr><td>–&gt;–&gt; 03.任务三：分布式架构网络通信及自定义RPC</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 04.任务四：模块作业</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.直播答疑回放</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 02.模块二 <a href="https://victorfengming.gitee.io/zookeeper/">分布式服务治理、分布式协调服务Zookeeper深入</a></td><td>0</td><td></td><td>2021/6/26</td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：Zookeeper环境搭建和基本使用</td><td>0</td><td></td><td>2021/6/27</td></tr><tr><td>–&gt;–&gt; 02.任务二：Zookeeper应用场景和深入进阶</td><td></td><td></td><td>2021/6/28</td></tr><tr><td>–&gt;–&gt; 03.任务三：Zookeeper源码剖析</td><td>0</td><td></td><td>2021/6/29</td></tr><tr><td>–&gt;–&gt; 04.任务四：模块作业</td><td>0</td><td></td><td>2021/6/30</td></tr><tr><td>–&gt;–&gt; 05.直播答疑回放</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 03.模块三 高性能RPC框架Apache Dubbo</td><td></td><td></td><td>2021/6/29</td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：架构演变及Dubbo使用回顾</td><td>0</td><td></td><td>2021/6/30</td></tr><tr><td>–&gt;–&gt; 02.任务二：Dubbo深入配置和高级实战</td><td>0</td><td></td><td>2021/7/1</td></tr><tr><td>–&gt;–&gt; 03.任务三：Dubbo架构设计和源码剖析</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 04.任务四：模块作业</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.直播答疑回放</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 04.模块四 <a href="https://victorfengming.gitee.io/springcloud/">SpringCloud组件设计原理及实战-上</a></td><td>00</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：微服务架构与SpringCloud概述</td><td>0</td><td></td><td>2021/7/2</td></tr><tr><td>–&gt;–&gt; 02.任务二：微服务案例引入及问题剖析</td><td>0</td><td></td><td>2021/7/3</td></tr><tr><td>–&gt;–&gt; 03.任务三：SpringCloud核心组件原理及实战（上）</td><td>0</td><td></td><td>2021/7/4</td></tr><tr><td>–&gt;–&gt; 04.任务四：SpringCloud核心组件原理及实战（中）</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.任务五：SpringCloud核心组件原理及实战（下）</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 06.任务六：模块作业</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 07.直播答疑回放</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 05.模块五 SpringCloud组件设计原理及实战（下）</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：Spring Cloud高级实战</td><td>0</td><td></td><td>2021/7/5</td></tr><tr><td>–&gt;–&gt; 02.任务二：Spring Cloud Alibaba高级实战</td><td>0</td><td></td><td>2021/7/6</td></tr><tr><td>–&gt;–&gt; 03.任务三：模块作业</td><td>0</td><td></td><td>2021/7/7</td></tr><tr><td>–&gt;–&gt; 04.直播答疑回放</td><td>0</td><td></td><td></td></tr><tr><td>04.第四阶段 大型分布式存储系统架构进阶（完结）</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 模块一：<a href="https://victorfengming.gitee.io/course/mysql/index.html">MySQL海量数据存储与优化-上</a></td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 00.资料</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：MySQL架构原理</td><td>0</td><td></td><td>2021/7/8</td></tr><tr><td>–&gt;–&gt; 02.任务二：MySQL索引原理</td><td>0</td><td></td><td>2021/7/9</td></tr><tr><td>–&gt;–&gt; 03.任务三：MySQL事务和锁</td><td>0</td><td></td><td>2021/7/10</td></tr><tr><td>–&gt;–&gt; 05.任务四：MySQL集群架构</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 06.扩展：MySQL性能优化</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 07.任务五：模块作业</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 08.模块一直播【回放】</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 模块二：MySQL海量数据存储与优化（下）</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 00.资料</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：分库分表实战</td><td>0</td><td></td><td>2021/7/11</td></tr><tr><td>–&gt;–&gt; 02.任务二：ShardingSphere实战</td><td></td><td></td><td>2021/7/12</td></tr><tr><td>–&gt;–&gt; 03.任务三：Mycat实战</td><td></td><td></td><td>2021/7/13</td></tr><tr><td>–&gt;–&gt; 04.任务四：运维工具</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.任务五：模块作业</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 06.模块二直播回放</td><td></td><td></td><td></td></tr><tr><td>–&gt; 模块三：分布式文档存储独角兽MongoDB、知识图谱存储数据库Neo4j</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：分布式文档存储MongoDB</td><td></td><td></td><td>2021/7/14</td></tr><tr><td>–&gt;–&gt; 02.任务二：知识图谱存储Neo4j</td><td></td><td></td><td>2021/7/15</td></tr><tr><td>–&gt;–&gt; 03.任务三：模块作业</td><td></td><td></td><td>2021/7/16</td></tr><tr><td>–&gt;–&gt; 04.直播回放</td><td></td><td></td><td></td></tr><tr><td>–&gt; 模块四：轻量级分布式文件系统FastDFS、阿里云OSS云存储平台</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 00.资料</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：轻量级分布式文件系统FastDFS</td><td></td><td></td><td>2021/7/17</td></tr><tr><td>–&gt;–&gt; 02.任务二：阿里云OSS云存储平台</td><td></td><td></td><td>2021/7/18</td></tr><tr><td>–&gt;–&gt; 03.模块作业</td><td></td><td></td><td>2021/7/19</td></tr><tr><td>–&gt;–&gt; 04.直播</td><td></td><td></td><td></td></tr><tr><td>–&gt; 模块五：<a href="http://victorfengming.gitee.io/hadoop/">Hadoop分布式文件系统HDFS、海量列式存储数据库HBase</a></td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：Hadoop简介及Apache Hadoop完全分布式集群搭建</td><td>0</td><td></td><td>2021/7/20</td></tr><tr><td>–&gt;–&gt; 02.任务二：HDFS分布式文件系统</td><td></td><td></td><td>2021/7/21</td></tr><tr><td>–&gt;–&gt; 03.任务三：MapReduce分布式计算框架</td><td>0</td><td></td><td>2021/7/22</td></tr><tr><td>–&gt;–&gt; 04.任务四：YARN资源调度、HDFS核心源码及Hadoop3.X 新特性概述</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.任务五：海量列式存储数据库HBase</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 06.任务六：模块作业</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 07.直播答疑回放</td><td>0</td><td></td><td></td></tr><tr><td>05.第五阶段 大型分布式系统缓存架构进阶（完结）</td><td></td><td></td><td></td></tr><tr><td>–&gt; 01.模块一 <a href="http://victorfengming.gitee.io/redis/">高性能分布式缓存Redis、分布式 Redis 解决方案Codis-Twemproxy替代方案</a></td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：缓存原理&amp;设计</td><td>0</td><td></td><td>2021/7/23</td></tr><tr><td>–&gt;–&gt; 02.任务二：Redis底层结构和缓存原理</td><td></td><td></td><td>2021/7/24</td></tr><tr><td>–&gt;–&gt; 03.任务三：Redis通讯协议和事件处理机制</td><td>0</td><td></td><td>2021/7/25</td></tr><tr><td>–&gt;–&gt; 04.任务四：Redis持久化机制和扩展功能</td><td>0</td><td></td><td>2021/7/26</td></tr><tr><td>–&gt;–&gt; 05.任务五：Redis分布式高可用方案</td><td></td><td></td><td>2021/7/27</td></tr><tr><td>–&gt;–&gt; 06.任务六：企业实战和大厂面试</td><td></td><td></td><td>2021/7/28</td></tr><tr><td>–&gt;–&gt; 07.任务七：模块作业</td><td></td><td></td><td>2021/7/29</td></tr><tr><td>–&gt;–&gt; 08.加餐：Codis集群搭建</td><td></td><td></td><td>2021/7/30</td></tr><tr><td>–&gt;–&gt; 09.模块一直播回放</td><td></td><td></td><td>2021/7/31</td></tr><tr><td>–&gt; 02.模块二 Guava Cache、EVCache、Tair、Aerospike</td><td>0</td><td></td><td>2021/8/1</td></tr><tr><td>–&gt;–&gt; 00.课程资料</td><td></td><td></td><td>2021/8/2</td></tr><tr><td>–&gt;–&gt; 01.任务一：Guava Cache</td><td>0</td><td></td><td>2021/8/3</td></tr><tr><td>–&gt;–&gt; 02.任务二：EVCache</td><td></td><td></td><td>2021/8/4</td></tr><tr><td>–&gt;–&gt; 03.任务三：Tair</td><td></td><td></td><td>2021/8/5</td></tr><tr><td>–&gt;–&gt; 04.任务四：Aerospike</td><td>0</td><td></td><td>2021/8/6</td></tr><tr><td>–&gt;–&gt; 05.任务五：模块作业</td><td></td><td></td><td>2021/8/7</td></tr><tr><td>06.第六阶段 分布式消息服务中间件进阶（完结）</td><td></td><td></td><td></td></tr><tr><td>–&gt; 01.模块一 <a href="https://victorfengming.gitee.io/rabbit_mq/">开源消息中间件RabbitMQ</a></td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：消息中间件概述</td><td></td><td></td><td>2021/8/8</td></tr><tr><td>–&gt;–&gt; 02.任务二：RabbitMQ架构与实战</td><td>0</td><td></td><td>2021/8/9</td></tr><tr><td>–&gt;–&gt; 03.任务三：RabbitMQ高级特性解析</td><td></td><td></td><td>2021/8/10</td></tr><tr><td>–&gt;–&gt; 04.任务四：RabbitMQ集群与运维</td><td></td><td></td><td>2021/8/11</td></tr><tr><td>–&gt;–&gt; 05.任务五：RabbitMQ源码剖析</td><td>0</td><td></td><td>2021/8/12</td></tr><tr><td>–&gt;–&gt; 06.任务六：模块作业</td><td></td><td></td><td>2021/8/13</td></tr><tr><td>–&gt;–&gt; 07.模块一直播【回放】</td><td>0</td><td></td><td>2021/8/14</td></tr><tr><td>–&gt;–&gt; 08.模块一【课程资料】</td><td></td><td></td><td></td></tr><tr><td>–&gt; 02.模块二 高吞吐消息中间件Kafka</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：Kafka架构与实战</td><td>0</td><td></td><td>2021/8/14</td></tr><tr><td>–&gt;–&gt; 02.任务二：Kafka高级特性解析</td><td></td><td></td><td>2021/8/15</td></tr><tr><td>–&gt;–&gt; 03.任务三：Kafka集群与运维</td><td>0</td><td></td><td>2021/8/16</td></tr><tr><td>–&gt;–&gt; 04.任务四：Kafka源码剖析</td><td></td><td></td><td>2021/8/17</td></tr><tr><td>–&gt;–&gt; 05.任务五：模块作业</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 06.模块二直播【回放】</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 07.模块二【课程资料】</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 03.模块三 Apache消息中间件RocketMQ</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：RocketMQ架构与实战</td><td></td><td></td><td>2021/8/18</td></tr><tr><td>–&gt;–&gt; 02.任务二：RocketMQ高级特性及原理</td><td></td><td></td><td>2021/8/19</td></tr><tr><td>–&gt;–&gt; 03.任务三：RocketMQ高级实战</td><td>0</td><td></td><td>2021/8/20</td></tr><tr><td>–&gt;–&gt; 04.任务四：RocketMQ集群与运维</td><td></td><td></td><td>2021/8/21</td></tr><tr><td>–&gt;–&gt; 05.任务五：RocketMQ源码剖析</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 06.任务六：模块作业</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 07.模块三直播【回放】</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 08.模块三【课程资料】</td><td>0</td><td></td><td></td></tr><tr><td>07.第七阶段 分布式搜索引擎进阶（完结）</td><td></td><td></td><td></td></tr><tr><td>–&gt; 01.模块一 引擎工具包Lucene、搜索应用服务器Solr</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：引擎工具包Lucene</td><td></td><td></td><td>2021/8/22</td></tr><tr><td>–&gt;–&gt; 02.任务二：搜索应用服务器Solr</td><td>0</td><td></td><td>2021/8/23</td></tr><tr><td>–&gt;–&gt; 03.模块一【课程资料】</td><td>0</td><td></td><td>2021/8/24</td></tr><tr><td>–&gt; 02.模块二 <a href="https://victorfengming.gitee.io/elk/">海量日志分析平台Elastic Stack</a></td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：Elasticsearch快速实战</td><td></td><td></td><td>2021/8/25</td></tr><tr><td>–&gt;–&gt; 02.任务二：Elasticsearch高级应用</td><td>0</td><td></td><td>2021/8/26</td></tr><tr><td>–&gt;–&gt; 03.任务三：Elasticsearch集群与高级实战</td><td></td><td></td><td>2021/8/27</td></tr><tr><td>–&gt;–&gt; 04.任务四：Elasticsearch之深度应用及原理剖析</td><td>0</td><td></td><td>2021/8/28</td></tr><tr><td>–&gt;–&gt; 05.模块作业</td><td>0</td><td></td><td>2021/8/29</td></tr><tr><td>–&gt;–&gt; 06.模块二直播【回放】</td><td></td><td></td><td>2021/8/30</td></tr><tr><td>–&gt;–&gt; 07.模块二【课程资料】</td><td>0</td><td></td><td></td></tr><tr><td>08.第八阶段 分布式实时流式计算引擎Flink（完结）</td><td></td><td></td><td></td></tr><tr><td>–&gt; 01.模块一 分布式实时流式计算引擎Flink</td><td>0</td><td></td><td>2021/8/31</td></tr><tr><td>–&gt;–&gt; 01.任务一：Flink快速应用及基础原理</td><td>0</td><td></td><td>2021/9/1</td></tr><tr><td>–&gt;–&gt; 02.任务二：Flink常用API</td><td>0</td><td></td><td>2021/9/2</td></tr><tr><td>–&gt;–&gt; 03.任务三：窗口_水印_并行度_连接器</td><td>0</td><td></td><td>2021/9/3</td></tr><tr><td>–&gt;–&gt; 04.任务四：实战案例</td><td>0</td><td></td><td>2021/9/4</td></tr><tr><td>–&gt;–&gt; 05.【课程资料】</td><td></td><td></td><td>2021/9/5</td></tr><tr><td>09.第九阶段 容器技术&amp;CI_CD、DevOps（完结）</td><td></td><td></td><td>2021/9/6</td></tr><tr><td>–&gt; 01.模块一 <a href="http://victorfengming.gitee.io/docker/">Docker容器虚拟化技术</a></td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：Docker快速入门</td><td></td><td></td><td>2021/9/13</td></tr><tr><td>–&gt;–&gt; 02.任务二：Docker核心原理</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 03.任务三：Docker运维管理</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 04.第九阶段模块一作业</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.【课程资料】</td><td></td><td></td><td></td></tr><tr><td>–&gt; 02.模块二 <a href="http://victorfengming.gitee.io/kubernetes/">K8s容器编排系统</a></td><td></td><td></td><td>2021/9/14</td></tr><tr><td>–&gt;–&gt; 01.任务一：Kubernetes快速实战</td><td></td><td></td><td>2021/9/15</td></tr><tr><td>–&gt;–&gt; 02.任务二：Kubernetes核心原理</td><td>0</td><td></td><td>2021/9/16</td></tr><tr><td>–&gt;–&gt; 03.任务三：Kubernetes运维管理</td><td>0</td><td></td><td>2021/9/17</td></tr><tr><td>–&gt;–&gt; 04.模块二作业</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.模块一、二直播</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 06.模块二【课程资料】</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 03.模块三 CI_CD、DevOps</td><td>0</td><td></td><td>2021/9/18</td></tr><tr><td>–&gt;–&gt; 01.任务一：CICD、Devops概述</td><td></td><td></td><td>2021/9/19</td></tr><tr><td>–&gt;–&gt; 02.任务二：<a href="https://victorfengming.gitee.io/jenkins/">Jenkins概述与安装</a></td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 03.任务三：Jenkins环境搭建</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 04.任务四：Jenkins项目实战</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 05.任务五：Jenkins运维管理</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 06.【课程资料】</td><td></td><td></td><td></td></tr><tr><td>–&gt; 04.模块四 APM管理和性能监控工具</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 01.任务一：APM管理工具Skywalking</td><td></td><td></td><td>2021/9/20</td></tr><tr><td>–&gt;–&gt; 02.任务二：性能监控工具Pinpoint</td><td>0</td><td></td><td>2021/9/21</td></tr><tr><td>–&gt;–&gt; 03.任务三：代码质量管理工具Sonar</td><td></td><td></td><td>2021/9/22</td></tr><tr><td>–&gt;–&gt; 04.【课程资料】</td><td>0</td><td></td><td></td></tr><tr><td>10.第十阶段 底层调优与算法深入</td><td></td><td></td><td></td></tr><tr><td>–&gt; 模块一：<a href="http://victorfengming.gitee.io/data_algorithm/">数据结构、算法</a></td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 任务一：数据结构与算法基础</td><td></td><td></td><td>2021/9/23</td></tr><tr><td>–&gt;–&gt; 任务二：数据结构与算法高级</td><td>0</td><td></td><td>2021/9/24</td></tr><tr><td>–&gt;–&gt; 模块一作业</td><td></td><td></td><td>2021/9/25</td></tr><tr><td>–&gt;–&gt; 直播</td><td></td><td></td><td>2021/9/26</td></tr><tr><td>–&gt;–&gt; 数据结构与算法.zip</td><td>0</td><td></td><td>2021/9/27</td></tr><tr><td>–&gt; 模块二：并发编程、JVM优化、Linux优化</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 任务一：并发编程</td><td>0</td><td></td><td>2021/9/30</td></tr><tr><td>–&gt;–&gt; 任务三：Linux优化</td><td>-0</td><td></td><td>2021/10/1</td></tr><tr><td>–&gt;–&gt; 任务二：JVM优化</td><td>0</td><td></td><td>2021/10/2</td></tr><tr><td>–&gt;–&gt; 模块二直播【回放】</td><td></td><td></td><td>2021/10/3</td></tr><tr><td>–&gt;–&gt; 第十阶段模块二作业</td><td></td><td></td><td>2021/10/4</td></tr><tr><td>–&gt;–&gt; 课程资料.zip</td><td></td><td></td><td>2021/10/5</td></tr><tr><td>11.第十一阶段 大型互联网项目实战和业务解决方案（完结）</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 模块一：大型互联网项目开发实战和解决方案</td><td></td><td></td><td></td></tr><tr><td>–&gt;–&gt; 任务一：系统需求和设计</td><td>0</td><td></td><td>2021/10/16</td></tr><tr><td>–&gt;–&gt; 任务七：系统开发-消息模块</td><td>0</td><td></td><td>2021/10/17</td></tr><tr><td>–&gt;–&gt; 任务三：系统开发-用户模块</td><td></td><td></td><td>2021/10/18</td></tr><tr><td>–&gt;–&gt; 任务二：系统开发-广告模块</td><td></td><td></td><td>2021/10/19</td></tr><tr><td>–&gt;–&gt; 任务五：系统开发-订单和支付</td><td></td><td></td><td>2021/10/20</td></tr><tr><td>–&gt;–&gt; 任务八：系统开发-Seata分布式事务</td><td>0</td><td></td><td>2021/10/21</td></tr><tr><td>–&gt;–&gt; 任务六：系统开发-权限模块</td><td>0</td><td></td><td>2021/10/22</td></tr><tr><td>–&gt;–&gt; 任务四：系统开发-课程模块</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 第十一阶段模块一作业</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 数据库.zip</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 项目资料.zip</td><td>0</td><td></td><td></td></tr><tr><td>–&gt; 模块二：大型互联网项目系统发布和环境监控</td><td>0</td><td></td><td></td></tr><tr><td>–&gt;–&gt; 任务一：系统功能发布和压测</td><td>0</td><td></td><td>2021/10/23</td></tr><tr><td>–&gt;–&gt; 任务二：系统环境部署和监控</td><td>0</td><td></td><td>2021/10/24</td></tr><tr><td>–&gt;–&gt; 十一阶段直播【回放】</td><td></td><td></td><td>2021/10/25</td></tr><tr><td>–&gt;–&gt; 第十一阶段模块二作业</td><td></td><td></td><td>2021/10/26</td></tr><tr><td>–&gt;–&gt; 项目实战.zip</td><td>0</td><td></td><td>2021/10/27</td></tr><tr><td>12.第十二阶段 进大厂必备-面试求职深度辅导（完结）</td><td></td><td></td><td>2021/10/28</td></tr><tr><td>–&gt; 模块一：进大厂必备-面试求职深度辅导</td><td>0</td><td></td><td>2021/10/31</td></tr><tr><td>–&gt;–&gt; 任务一： 就业须知</td><td></td><td></td><td>2021/11/1</td></tr><tr><td>–&gt;–&gt; 任务三： 面试技巧</td><td>0</td><td></td><td>2021/11/2</td></tr><tr><td>–&gt;–&gt; 任务二： 面试准备</td><td></td><td></td><td>2021/11/3</td></tr><tr><td>–&gt;–&gt; 任务四： 面试总结</td><td>0</td><td></td><td>2021/11/4</td></tr><tr><td>–&gt;–&gt; 大厂面试题</td><td></td><td></td><td>2021/11/18</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href=&quot;https://victorfengming.gitee.io/index/gitbook/&quot;&gt;Go&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;完成度&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead</summary>
      
    
    
    
    
    <category term="interview" scheme="http://victorfengming.gitee.io/tags/interview/"/>
    
    <category term="index" scheme="http://victorfengming.gitee.io/tags/index/"/>
    
    <category term="java" scheme="http://victorfengming.gitee.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>python实现猴子爬山算法</title>
    <link href="http://victorfengming.gitee.io/python/collection/monkey_climbing/"/>
    <id>http://victorfengming.gitee.io/python/collection/monkey_climbing/</id>
    <published>2021-04-24T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.134Z</updated>
    
    <content type="html"><![CDATA[<p>猴子爬山一只顽猴在一座有N级台阶的小山上爬山跳跃。上山时需从山脚至山顶往上跳N级台阶，一步可跳1级，或跳3级，求上山有多少种不同的跳法？ （N&lt;50）</p><p>问题分析:</p><p> 每一次都可以选择1,2,3有3种跳法</p><p>直接使用递归</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">jumpWay = [<span class="number">1</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">footstep = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line">jumping = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#first write</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jump</span>(<span class="params">nowstep, footstep, jumpWay</span>):</span></span><br><span class="line">    <span class="keyword">if</span> nowstep == footstep:</span><br><span class="line">        <span class="keyword">global</span> jumping</span><br><span class="line">        jumping += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">elif</span> nowstep &gt; footstep:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(jumpWay)):</span><br><span class="line">            jump(nowstep + jumpWay[i], footstep, jumpWay)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jump(<span class="number">0</span>, footstep, jumpWay)</span><br></pre></td></tr></table></figure><p>但是这种方式会提示 递归层数过多</p><p>想办法对算法进行合理优化,排列组合</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">size = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">n3 = size//<span class="number">3</span></span><br><span class="line">res = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 求阶乘</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jiecheng</span>(<span class="params">n</span>):</span></span><br><span class="line">    num = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">            num*=i</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"><span class="comment"># 求排列</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c43</span>(<span class="params">n4,n3</span>):</span></span><br><span class="line">    <span class="comment"># return jiecheng</span></span><br><span class="line">    <span class="comment"># 3!/(4-3)!*3!</span></span><br><span class="line">    <span class="comment"># j3 = jiecheng(3)</span></span><br><span class="line">    <span class="keyword">return</span> jiecheng(n4)//(jiecheng(n4-n3)*jiecheng(n3))</span><br><span class="line"></span><br><span class="line"><span class="comment"># a32不用了</span></span><br><span class="line"><span class="comment"># def a32(n3,n2):</span></span><br><span class="line"><span class="comment">#    return jiecheng(n2)//jiecheng(n3)-jiecheng(n2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(size+<span class="number">1</span>):</span><br><span class="line">    <span class="comment"># i 为有几个 1步的情况</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n3+<span class="number">1</span>):</span><br><span class="line">        <span class="comment"># j为有 几个 3步的情况</span></span><br><span class="line">        <span class="keyword">if</span> (i+j*<span class="number">3</span>) == size:</span><br><span class="line">            <span class="comment"># temp 为总数</span></span><br><span class="line">            temp = j+i</span><br><span class="line">            res+=c43(temp,j)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;猴子爬山一只顽猴在一座有N级台阶的小山上爬山跳跃。上山时需从山脚至山顶往上跳N级台阶，一步可跳1级，或跳3级，求上山有多少种不同的跳法？ （N&amp;lt;50）&lt;/p&gt;
&lt;p&gt;问题分析:&lt;/p&gt;
&lt;p&gt; 每一次都可以选择1,2,3有3种跳法&lt;/p&gt;
&lt;p&gt;直接使用递归&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="solution" scheme="http://victorfengming.gitee.io/tags/solution/"/>
    
    <category term="Python" scheme="http://victorfengming.gitee.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>面试题大全</title>
    <link href="http://victorfengming.gitee.io/index/interview/"/>
    <id>http://victorfengming.gitee.io/index/interview/</id>
    <published>2021-04-20T21:07:08.000Z</published>
    <updated>2022-03-04T04:24:15.097Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数据库相关"><a href="#数据库相关" class="headerlink" title="数据库相关"></a>数据库相关</h3><ul><li><a href="https://www.cnblogs.com/bypp/p/7755307.html">MySQL索引原理以及查询优化</a></li><li><a href="https://www.cnblogs.com/curedfisher/p/12529670.html">MySQL索引的理解</a></li><li><a href="https://blog.csdn.net/xdc17824032252/article/details/94118980">栈中的方法peek()和pop()的比较</a></li></ul><h2 id="interview"><a href="#interview" class="headerlink" title="interview"></a>interview</h2><h3 id="ApacheDubbo"><a href="#ApacheDubbo" class="headerlink" title="ApacheDubbo"></a>ApacheDubbo</h3><ul><li><a href="http://victorfengming.gitee.io/file/pdf/inter/ApacheDubbo/dubbo%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3%E9%9D%A2%E8%AF%95%E9%A2%98.pdf">dubbo服务相关面试题</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/ApacheDubbo/%E7%AE%80%E8%BF%B0dubbo%E7%9A%84spi%E6%80%9D%E6%83%B3.pdf">简述dubbo的spi思想</a><h3 id="CAS"><a href="#CAS" class="headerlink" title="CAS"></a>CAS</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/CAS/%E8%B0%88%E4%B8%80%E8%B0%88%E5%AF%B9CAS%E7%9A%84%E7%90%86%E8%A7%A3.pdf">谈一谈对CAS的理解</a><h3 id="container"><a href="#container" class="headerlink" title="container"></a>container</h3><h3 id="data-algorithm"><a href="#data-algorithm" class="headerlink" title="data_algorithm"></a>data_algorithm</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/data_algorithm/HashMap%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8.pdf">HashMap为什么是线程不安全</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/data_algorithm/%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98.pdf">八皇后问题</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/data_algorithm/%E5%A6%82%E4%BD%95%E8%A1%A1%E9%87%8F%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%95%88%E7%8E%87%EF%BC%9F.pdf">如何衡量程序运行的效率？</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/data_algorithm/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E9%9D%A2%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90.pdf">快速排序算法面试题解析</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/data_algorithm/%E6%89%BE%E5%87%BA%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B4%E6%95%B0.pdf">找出不重复的整数</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/data_algorithm/%E6%B1%82%E4%B8%AD%E4%BD%8D%E6%95%B0.pdf">求中位数</a><h3 id="design-pattern"><a href="#design-pattern" class="headerlink" title="design_pattern"></a>design_pattern</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/design_pattern/DDD%E9%9D%A2%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90.pdf">DDD面试题解析</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/design_pattern/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AF%A6%E8%A7%A3.pdf">代理模式面试题详解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/design_pattern/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E5%90%97.pdf">你真的了解单例模式吗</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/design_pattern/%E7%A9%BA%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.pdf">空对象设计模式</a><h3 id="distributed-theory"><a href="#distributed-theory" class="headerlink" title="distributed_theory"></a>distributed_theory</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/distributed_theory/%E4%BB%80%E4%B9%88%E6%98%AF%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9_%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%9B%AA%E5%B4%A9%E7%9A%84%E5%9C%BA%E6%99%AF%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.pdf">什么是缓存雪崩_服务器雪崩的场景与解决方案</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/distributed_theory/%E4%BB%8E%E5%8D%95%E4%BD%93%E6%9E%B6%E6%9E%84_%E5%88%B0SOA_%E5%86%8D%E5%88%B0%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E8%AF%A6%E8%A7%A3.pdf">从单体架构_到SOA_再到微服务的架构设计详解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/distributed_theory/%E5%88%86%E5%B8%83%E5%BC%8FSession%E5%85%B1%E4%BA%AB%E7%9A%844%E7%B1%BB%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88_%E4%B8%8E%E4%BC%98%E5%8A%A3%E5%8A%BF%E6%AF%94%E8%BE%83.pdf">分布式Session共享的4类技术方案_与优劣势比较</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/distributed_theory/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E9%9D%A2%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90.pdf">分布式事务面试题解析</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/distributed_theory/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E4%B8%80%E8%87%B4%E6%80%A7%E7%9A%84%E5%8E%9F%E7%90%86%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88.pdf">分布式数据库数据一致性的原理与技术实现方案</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/distributed_theory/%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%B9%82%E7%AD%89%E6%80%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AF%A6%E8%A7%A3.pdf">分布式服务接口的幂等性面试题详解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/distributed_theory/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.pdf">分布式锁的几种实现方式</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/distributed_theory/%E8%B0%88%E8%B0%88%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9B%B8%E5%85%B3%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7%E4%B8%8E%E5%AE%9E%E6%88%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.pdf">谈谈分布式事务相关的一致性与实战解决方案</a><h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/docker/%E8%AF%B4%E4%B8%80%E4%B8%8B%E4%BD%A0%E5%AF%B9docker%E7%9A%84%E4%BA%86%E8%A7%A3.pdf">说一下你对docker的了解</a><h3 id="ES"><a href="#ES" class="headerlink" title="ES"></a>ES</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/ES/es%E5%9C%A8%E6%95%B0%E6%8D%AE%E9%87%8F%E5%BE%88%E5%A4%A7%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B_%E6%95%B0%E5%8D%81%E4%BA%BF%E7%BA%A7%E5%88%AB_%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E6%9F%A5%E8%AF%A2%E6%95%88%E7%8E%87.pdf">es在数据量很大的情况下_数十亿级别_如何提高查询效率</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/ES/ES%E7%9A%84%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%8F%96%E8%BF%87%E7%A8%8B%E4%BB%A5%E5%8F%8A%E6%96%87%E6%A1%A3%E8%AF%BB%E5%86%99%E5%8E%9F%E7%90%86%E5%A4%A7%E8%87%B4%E5%88%86%E6%9E%90%E4%B8%80%E4%B8%8B.pdf">ES的数据读取过程以及文档读写原理大致分析一下</a><h3 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/HashMap/HashMap%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86.pdf">HashMap底层原理</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/HashMap/Hash%E5%86%B2%E7%AA%81%E6%9C%89%E4%BB%80%E4%B9%88%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F.pdf">Hash冲突有什么解决方式</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/HashMap/%E9%9D%A2%E8%AF%95%E9%A2%98-HashMap.pdf">面试题-HashMap</a><h3 id="IO"><a href="#IO" class="headerlink" title="IO"></a>IO</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/IO/JavaIO%E6%B5%81%E9%9D%A2%E8%AF%95.pdf">JavaIO流面试</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/IO/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E9%9B%B6%E6%8B%B7%E8%B4%9D.pdf">如何实现零拷贝</a><h3 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/JDK/%E5%8F%8D%E5%B0%84%E7%9B%B8%E5%85%B3%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AF%A6%E8%A7%A3.pdf">反射相关面试题详解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/JDK/%E8%AE%B2%E4%B8%80%E4%B8%8BJDK1.8%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90.pdf">讲一下JDK1.8的新特性面试题解析</a><h3 id="Jsp"><a href="#Jsp" class="headerlink" title="Jsp"></a>Jsp</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Jsp/JSP%E4%B8%8ESevlet%E5%8C%BA%E5%88%AB_Jsp%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1_Jsp%E5%9B%9B%E7%A7%8D%E4%BD%9C%E7%94%A8%E5%9F%9F_session%E4%B8%8Ecookie%E7%9A%84%E5%8C%BA%E5%88%AB.pdf">JSP与Sevlet区别_Jsp内置对象_Jsp四种作用域_session与cookie的区别</a><h3 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/JVM/7%E7%A7%8DJVM%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8%E7%89%B9%E7%82%B9_%E4%BC%98%E5%8A%A3%E5%8A%BF_%E5%8F%8A%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF.pdf">7种JVM垃圾收集器特点_优劣势_及使用场景</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/JVM/java%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96_%E6%9C%89%E5%93%AA%E4%BA%9B%E8%A1%A1%E9%87%8F%E6%8C%87%E6%A0%87_%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88_.pdf">java性能优化_有哪些衡量指标_需要注意什么_</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/JVM/JVM%E5%86%85%E5%AD%98%E8%B0%83%E4%BC%98.pdf">JVM内存调优</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/JVM/JVM%E7%9A%844%E7%A7%8D%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%AE%97%E6%B3%95_%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%80%BB%E7%BB%93.pdf">JVM的4种垃圾回收算法_垃圾回收机制与总结</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/JVM/Jvm%E7%BB%84%E6%88%90%E8%BF%90%E8%A1%8C%E6%97%B6%E5%8C%BA%E5%A0%86%E6%A0%88%E9%98%9F%E5%88%97%E7%9A%84%E5%8C%BA%E5%88%AB.pdf">Jvm组成运行时区堆栈队列的区别</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/JVM/%E6%B7%B1%E5%85%A5%E8%AF%A6%E8%A7%A3JVM%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E4%B8%8EJVM%E5%8F%82%E6%95%B0%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE.pdf">深入详解JVM内存模型与JVM参数详细配置</a><h3 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Kafka/Kafka%E9%9D%A2%E8%AF%95%E9%A2%98Kafka%E9%80%9F%E5%BA%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BF%AB.pdf">Kafka面试题Kafka速度为什么快</a><h3 id="Lambda"><a href="#Lambda" class="headerlink" title="Lambda"></a>Lambda</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Lambda/Java8_Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F.pdf">Java8_Lambda表达式</a><h3 id="leetcode"><a href="#leetcode" class="headerlink" title="leetcode"></a>leetcode</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/leetcode/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0.pdf">字符串转换整数</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/leetcode/%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97.pdf">数组中出现次数超过一半的数字</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/leetcode/%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97.pdf">用两个栈实现队列</a><h3 id="load-balance"><a href="#load-balance" class="headerlink" title="load_balance"></a>load_balance</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/load_balance/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E5%8E%9F%E7%90%86_%E5%88%86%E7%B1%BB_%E5%AE%9E%E7%8E%B0%E6%9E%B6%E6%9E%84_%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF.pdf">负载均衡的原理_分类_实现架构_以及使用场景</a><h3 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MyBatis/Mybatis%E4%B8%8EHibernate%E7%9A%84%E5%8C%BA%E5%88%AB.pdf">Mybatis与Hibernate的区别</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MyBatis/MyBatis%E4%B8%ADMapper%E6%8E%A5%E5%8F%A3%E7%9B%B8%E5%85%B3%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AF%A6%E8%A7%A3.pdf">MyBatis中Mapper接口相关面试题详解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MyBatis/MyBatis%E5%8A%A8%E6%80%81sql%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AF%A6%E8%A7%A3.pdf">MyBatis动态sql面试题详解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MyBatis/Mybatis%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD.pdf">Mybatis延迟加载</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MyBatis/MyBatis%E7%9A%84%E4%B8%80%E7%BA%A7%E7%BC%93%E5%AD%98%E5%92%8C%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98.pdf">MyBatis的一级缓存和二级缓存</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MyBatis/%E4%BD%A0%E7%9F%A5%E9%81%93MyBatis%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%E4%B9%8B%E5%88%9D%E5%A7%8B%E5%8C%96%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84%E5%90%97.pdf">你知道MyBatis执行过程之初始化是如何执行的吗</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MyBatis/%E5%AF%B9MybatisPlugin%E7%9A%84%E4%BA%86%E8%A7%A3.pdf">对MybatisPlugin的了解</a><h3 id="MySQL-adv"><a href="#MySQL-adv" class="headerlink" title="MySQL_adv"></a>MySQL_adv</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MySQL_adv/mysql_B+%E6%A0%91%E7%B4%A2%E5%BC%95%E5%92%8C%E5%93%88%E5%B8%8C%E7%B4%A2%E5%BC%95%E7%9A%84%E5%8C%BA%E5%88%AB.pdf">mysql_B+树索引和哈希索引的区别</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MySQL_adv/MySQL%E4%BA%8B%E5%8A%A1%E4%B8%8EMVCC%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.pdf">MySQL事务与MVCC如何实现的隔离级别</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MySQL_adv/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8+%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E6%BA%90+%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB.pdf">如何实现分库分表+动态数据源+读写分离</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/MySQL_adv/%E8%AE%BE%E8%AE%A1%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%97%B6%E5%80%99_%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B1%82%E9%9D%A2%E8%AF%A5%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1.pdf">设计高并发系统的时候_数据库层面该如何设计</a><h3 id="Mysql-base"><a href="#Mysql-base" class="headerlink" title="Mysql_base"></a>Mysql_base</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Mysql_base/%E5%85%B3%E4%BA%8Emysql%E7%9A%84%E4%B8%89%E8%8C%83%E5%BC%8F_ACID_%E7%B4%A2%E5%BC%95%E7%9A%84%E5%AE%9E%E7%8E%B0.pdf">关于mysql的三范式_ACID_索引的实现</a><h3 id="net"><a href="#net" class="headerlink" title="net"></a>net</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/net/TCP&UDP%E5%8C%BA%E5%88%AB_TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E7%9B%AE%E7%9A%84_OSI%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B_get%E5%92%8Cpost%E5%8C%BA%E5%88%AB.pdf">TCP&amp;UDP区别_TCP三次握手目的_OSI七层模型_get和post区别</a><h3 id="Netty"><a href="#Netty" class="headerlink" title="Netty"></a>Netty</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Netty/Netty%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86_%E7%89%B9%E7%82%B9%E4%B8%8E%E4%BC%98%E5%8A%BF_%E4%BB%A5%E5%8F%8A%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF.pdf">Netty的实现原理_特点与优势_以及适用场景</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Netty/NIO_BIO_AIO%E7%9A%84%E5%8C%BA%E5%88%AB.pdf">NIO_BIO_AIO的区别</a><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Nginx/%E8%81%8A%E8%81%8A%E4%BD%A0%E5%AF%B9NGINX%E7%9A%84%E7%90%86%E8%A7%A3.pdf">聊聊你对NGINX的理解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Nginx/%E8%AF%B4%E4%B8%80%E4%B8%8B%E4%BD%A0%E5%AF%B9Nginx%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86%E4%B8%8E%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%90%86%E8%A7%A3.pdf">说一下你对Nginx正向代理与反向代理理解</a><h3 id="parallel-programming"><a href="#parallel-programming" class="headerlink" title="parallel_programming"></a>parallel_programming</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/4%E7%A7%8D%E5%B8%B8%E7%94%A8Java%E7%BA%BF%E7%A8%8B%E9%94%81%E7%9A%84%E7%89%B9%E7%82%B9_%E6%80%A7%E8%83%BD%E6%AF%94%E8%BE%83_%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF.pdf">4种常用Java线程锁的特点_性能比较_使用场景</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/Java%E6%8F%90%E4%BE%9B%E4%BA%86%E5%93%AA%E5%87%A0%E7%A7%8D%E7%BA%BF%E7%A8%8B%E6%B1%A0_%E9%9D%A2%E8%AF%95%E9%A2%98.pdf">Java提供了哪几种线程池_面试题</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/ThreadLocal%E7%9A%84%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D.pdf">ThreadLocal的内存泄露的原因分析以及如何避免</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/Volatile%E4%B8%8D%E4%BF%9D%E8%AF%81%E5%8E%9F%E5%AD%90%E6%80%A7%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.pdf">Volatile不保证原子性及解决方案</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/volatile%E5%8F%AF%E8%A7%81%E6%80%A7%E8%AF%A6%E8%A7%A3.pdf">volatile可见性详解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/Volatile%E7%A6%81%E6%AD%A2%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92.pdf">Volatile禁止指令重排</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/%E4%BD%A0%E4%BA%86%E8%A7%A3Java%E5%B9%B6%E5%8F%91%E4%B9%8BAQS.pdf">你了解Java并发之AQS</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/%E4%BD%A0%E7%9F%A5%E9%81%93Java%E4%B8%AD%E6%9C%89%E5%93%AA%E4%BA%9B%E9%94%81.pdf">你知道Java中有哪些锁</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/%E4%BD%A0%E7%9F%A5%E9%81%93ReentrantLock%E5%90%97_%E8%B0%88%E4%B8%80%E8%B0%88%E5%AF%B9%E5%AE%83%E7%9A%84%E7%90%86%E8%A7%A3.pdf">你知道ReentrantLock吗_谈一谈对它的理解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F.pdf">如何设计一个高并发系统</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/%E5%B9%B6%E5%8F%91%E5%AE%B9%E5%99%A8%E7%9A%84%E5%8E%9F%E7%90%86.pdf">并发容器的原理</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/%E8%AE%A9%E6%88%91%E4%BB%AC%E8%81%8A%E4%B8%80%E8%81%8AJava%E5%B9%B6%E5%8F%91%E4%B9%8BSynchronized.pdf">让我们聊一聊Java并发之Synchronized</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/parallel_programming/%E8%B0%88%E4%B8%80%E8%B0%88%E5%B9%B6%E5%8F%91CAS_CompareAndSwap%E5%AE%9E%E7%8E%B0.pdf">谈一谈并发CAS_CompareAndSwap实现</a><h3 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/RabbitMQ/RabbitMq%E9%98%B2%E6%AD%A2%E6%B6%88%E6%81%AF%E4%B8%A2%E5%A4%B1%E9%9D%A2%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90.pdf">RabbitMq防止消息丢失面试题解析</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/RabbitMQ/Rabbit%E6%80%8E%E4%B9%88%E5%AF%B9%E6%B6%88%E6%81%AF%E7%A1%AE%E8%AE%A4%E6%9C%BA%E5%88%B6%E7%9A%84.pdf">Rabbit怎么对消息确认机制的</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/RabbitMQ/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97.pdf">为什么使用消息队列</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/RabbitMQ/%E4%BB%80%E4%B9%88%E6%98%AF%E6%B5%81%E9%87%8F%E5%89%8A%E5%B3%B0_%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E7%A7%92%E6%9D%80%E4%B8%9A%E5%8A%A1%E7%9A%84%E5%89%8A%E5%B3%B0%E5%9C%BA%E6%99%AF.pdf">什么是流量削峰_如何解决秒杀业务的削峰场景</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/RabbitMQ/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E7%9A%84%E9%A1%BA%E5%BA%8F%E6%80%A7.pdf">如何保证消息的顺序性</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/RabbitMQ/%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8.pdf">如何保证消息队列的高可用</a><h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Redis/Redis_RDB%E6%8C%81%E4%B9%85%E5%8C%96_AOF%E6%8C%81%E4%B9%85%E5%8C%96.pdf">Redis_RDB持久化_AOF持久化</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Redis/Redis%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E5%8D%95%E7%BA%BF%E7%A8%8B_%E5%8F%8A%E9%AB%98%E5%B9%B6%E5%8F%91%E5%BF%AB%E7%9A%84%E5%8E%9F%E5%9B%A0.pdf">Redis为什么是单线程_及高并发快的原因</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Redis/Redis%E5%93%A8%E5%85%B5_%E5%A4%8D%E5%88%B6_%E9%9B%86%E7%BE%A4%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%8E%9F%E7%90%86_%E4%BB%A5%E5%8F%8A%E5%8C%BA%E5%88%AB.pdf">Redis哨兵_复制_集群的设计原理_以及区别</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Redis/Redis%E5%B9%B6%E5%8F%91%E7%AB%9E%E4%BA%89key%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E8%AF%A6%E8%A7%A3.pdf">Redis并发竞争key的解决方案详解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Redis/Redis%E7%BC%93%E5%AD%98%E5%92%8CMySQL%E6%95%B0%E6%8D%AE%E4%B8%80%E8%87%B4%E6%80%A7%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.pdf">Redis缓存和MySQL数据一致性的解决方案</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Redis/Redis%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F_%E7%BC%93%E5%AD%98%E5%87%BB%E7%A9%BF_%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9%E9%9D%A2%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90.pdf">Redis缓存穿透_缓存击穿_缓存雪崩面试题解析</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Redis/Redis%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9%E9%9D%A2%E8%AF%95%E9%A2%98.pdf">Redis缓存雪崩面试题</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Redis/%E7%BC%93%E5%AD%98%E5%87%BB%E7%A9%BF%E9%9D%A2%E8%AF%95%E9%A2%98.pdf">缓存击穿面试题</a><h3 id="ReentrantReadWriteLock"><a href="#ReentrantReadWriteLock" class="headerlink" title="ReentrantReadWriteLock"></a>ReentrantReadWriteLock</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/ReentrantReadWriteLock/ReentrantReadWriteLock%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%B8%8E%E9%94%81%E8%8E%B7%E5%8F%96.pdf">ReentrantReadWriteLock的实现原理与锁获取</a><h3 id="RocketMQ"><a href="#RocketMQ" class="headerlink" title="RocketMQ"></a>RocketMQ</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/RocketMQ/RocketMQ%E7%9A%84%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1_%E5%85%B3%E9%94%AE%E7%89%B9%E6%80%A7%E4%B8%8E%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF.pdf">RocketMQ的架构设计_关键特性与应用场景</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/RocketMQ/%E5%A6%82%E4%BD%95%E4%BB%8E0%E5%88%B01%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%B8%AD%E9%97%B4%E4%BB%B6.pdf">如何从0到1设计一个消息队列中间件</a><h3 id="single-login"><a href="#single-login" class="headerlink" title="single_login"></a>single_login</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/single_login/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E9%97%AE%E9%A2%98.pdf">单点登录问题</a><h3 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Spring/BeanFactory%E5%92%8CFactoryBean%E7%9A%84%E5%8C%BA%E5%88%AB%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AF%A6%E8%A7%A3.pdf">BeanFactory和FactoryBean的区别面试题详解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Spring/Spring%E4%B8%ADbean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.pdf">Spring中bean的作用域与生命周期</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E4%BA%86%E5%93%AA%E4%BA%9B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.pdf">Spring中使用了哪些设计模式</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Spring/Spring%E4%BA%8B%E5%8A%A1%E7%9A%84%E4%BC%A0%E6%92%AD%E5%B1%9E%E6%80%A7%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AF%A6%E8%A7%A3.pdf">Spring事务的传播属性面试题详解</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Spring/%E8%AE%B2%E4%B8%80%E8%AE%B2Springbean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.pdf">讲一讲Springbean的生命周期</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Spring/%E8%AE%B2%E4%B8%80%E8%AE%B2Spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F.pdf">讲一讲Spring循环依赖及解决方式</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/Spring/%E8%B0%88%E8%B0%88%E5%AF%B9SpringAOP%E7%9A%84%E7%90%86%E8%A7%A3.pdf">谈谈对SpringAOP的理解</a><h3 id="springboot"><a href="#springboot" class="headerlink" title="springboot"></a>springboot</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/springboot/springboot%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E5%90%AF%E5%8A%A8%E6%97%B6%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E6%95%B0%E6%8D%AE.pdf">springboot如何设置启动时的初始化数据</a><h3 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h3></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/SpringCloud/Dubbo%E4%B8%8ESpringCloud%E7%9A%84Ribbon_Hystrix_Feign%E7%9A%84%E4%BC%98%E5%8A%A3%E5%8A%BF%E6%AF%94%E8%BE%83.pdf">Dubbo与SpringCloud的Ribbon_Hystrix_Feign的优劣势比较</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/SpringCloud/nacos%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E6%96%B9%E6%A1%88.pdf">nacos权限控制方案</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/SpringCloud/Restful_SOAP_RPC_SOA_%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB.pdf">Restful_SOAP_RPC_SOA_微服务之间的区别</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/SpringCloud/SpringCloud%E4%B8%8EDubbo%E7%9A%84%E5%AF%B9%E6%AF%94.pdf">SpringCloud与Dubbo的对比</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/SpringCloud/SpringCloud%E7%9A%84%E6%A0%B8%E5%BF%83%E6%88%90%E5%91%98_%E4%BB%A5%E5%8F%8A%E6%9E%B6%E6%9E%84%E5%AE%9E%E7%8E%B0%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D.pdf">SpringCloud的核心成员_以及架构实现详细介绍</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/SpringCloud/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E4%B8%8Efeign%E8%B6%85%E6%97%B6%E7%9A%84%E7%BA%A0%E8%91%9B_%E8%AF%A5%E5%92%8B%E4%BC%98%E5%8C%96_.pdf">定时任务与feign超时的纠葛_该咋优化_</a></li><li><a href="http://victorfengming.gitee.io/file/pdf/inter/SpringCloud/%E5%BE%AE%E6%9C%8D%E5%8A%A1Dubbo%E5%92%8CSpringCloud%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1_%E4%BC%98%E5%8A%A3%E5%8A%BF%E6%AF%94%E8%BE%83.pdf">微服务Dubbo和SpringCloud架构设计_优劣势比较</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数据库相关&quot;&gt;&lt;a href=&quot;#数据库相关&quot; class=&quot;headerlink&quot; title=&quot;数据库相关&quot;&gt;&lt;/a&gt;数据库相关&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/bypp/p/7755307.html</summary>
      
    
    
    
    
    <category term="interview" scheme="http://victorfengming.gitee.io/tags/interview/"/>
    
    <category term="index" scheme="http://victorfengming.gitee.io/tags/index/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot解决方案</title>
    <link href="http://victorfengming.gitee.io/java/springboot/collection-solve/"/>
    <id>http://victorfengming.gitee.io/java/springboot/collection-solve/</id>
    <published>2021-04-20T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.104Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置文件优先级"><a href="#配置文件优先级" class="headerlink" title="配置文件优先级"></a>配置文件优先级</h1><h2 id="1-项目内部配置文件"><a href="#1-项目内部配置文件" class="headerlink" title="1. 项目内部配置文件"></a>1. 项目内部配置文件</h2><p>spring boot 启动会扫描以下位置的application.properties或者application.yml文件作为Spring boot的默认配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">　　–file:.&#x2F;config&#x2F;</span><br><span class="line">　　–file:.&#x2F;</span><br><span class="line">　　–classpath:&#x2F;config&#x2F;</span><br><span class="line">　　–classpath:&#x2F;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="928953-20190613113659461-117207878.png" alt="img"></p><p>以上是按照优先级从高到低的顺序，所有位置的文件都会被加载，高优先级配置内容会覆盖低优先级配置内容。</p><p>SpringBoot会从这四个位置全部加载主配置文件，如果高优先级中配置文件属性与低优先级配置文件不冲突的属性，则会共同存在—互补配置。</p><hr><p>我们也可以通过配置spring.config.location来改变默认配置。</p><p>java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar –spring.config.location=file:///D:/application.properties,classpath:/,<a href="http://classpath/config/">classpath:/config/</a><br>项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置。</p><p>指定配置文件和默认加载的这些配置文件共同起作用形成互补配置。<br>Idea 单测启用自定义配置：添加jvm参数：-Dspring.config.location=file:///D:/project_conf/application.yml -ea</p><h2 id="2-外部配置加载顺序"><a href="#2-外部配置加载顺序" class="headerlink" title="2. 外部配置加载顺序"></a>2. 外部配置加载顺序</h2><p>SpringBoot也可以从以下位置加载配置：优先级从高到低；高优先级的配置覆盖低优先级的配置，所有的配置会形成互补配置。</p><p>1.命令行参数</p><ul><li>所有的配置都可以在命令行上进行指定；</li><li>多个配置用空格分开； –配置项=值</li></ul><p>　　java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar –server.port=8087 –server.context-path=/abc</p><p>2.来自java:comp/env的JNDI属性 </p><p>3.Java系统属性（System.getProperties()） </p><p>4.操作系统环境变量 </p><p>5.RandomValuePropertySource配置的random.*属性值</p><p>6.jar包外部的application-{profile}.properties或application.yml(带spring.profile)配置文件</p><p>7.jar包内部的application-{profile}.properties或application.yml(带spring.profile)配置文件</p><p>8.jar包外部的application.properties或application.yml(不带spring.profile)配置文件</p><p>9.jar包内部的application.properties或application.yml(不带spring.profile)配置文件</p><p>10.@Configuration注解类上的@PropertySource </p><p>11.通过SpringApplication.setDefaultProperties指定的默认属性</p><p><a href="https://docs.spring.io/spring-boot/docs/1.5.9.RELEASE/reference/htmlsingle/#boot-features-external-config">参考官网地址</a></p><p>原文:<a href="https://www.cnblogs.com/erbing/p/11015599.html">SpringBoot配置文件加载位置与优先级</a></p><h1 id="配置文件加密"><a href="#配置文件加密" class="headerlink" title="配置文件加密"></a>配置文件加密</h1><p>Spring-boot项目中properties文件中的密码明文不太安全，</p><p>所以想到给明文加密。了解了一下，有一个依赖工具可以实现这个功能。Ulisesbocchio插件</p><p><em>*<em>*1.*</em>*<em>添加*</em>*<em>maven*</em>*<em>依赖：*</em>*</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.ulisesbocchio&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jasypt-spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.14&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p><em>*<em>*2.*</em>*<em>配置加密密钥或盐值（properties文件中配置）：*</em>*</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jasypt.encryptor.password&#x3D;1111111111</span><br></pre></td></tr></table></figure><p><em>*<em>*3.*</em>*<em>进入本地maven库.m2\repository\org\jasypt\jasypt\1.9.2路径下，执行加密命令：*</em>*</em></p><p>java -cp jasypt-1.9.2.jar org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI input=密码明文 password=<em><strong>*1111111111*</strong></em> algorithm=PBEWithMD5AndDES</p><p>执行命令后会出现加密后密码：</p><p><img src= "/img/loading.gif" data-lazy-src="39d11b56889d67e8781c78bdb12643f1365.jpg" alt="39d11b56889d67e8781c78bdb12643f1365.jpg"></p><p><strong>4.将properties文件中需要加密的数据替换成”ENC(密文)”，如：</strong></p><p>user.password=ENC(LtogooCZuLSM2vE8uKcCnA==)</p><p><strong>5.运行代码正常！</strong></p><p>转载于:<a href="https://my.oschina.net/kevin2kelly/blog/2254055">https://my.oschina.net/kevin2kelly/blog/2254055</a></p><p><strong>6. 用于生成加密字符tool类</strong></p><blockquote><p>可以写一个类用来生成</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.travelsky.shopping.console.loca.tool;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jasypt.util.text.BasicTextEncryptor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncryptorGenerator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">         BasicTextEncryptor textEncryptor = <span class="keyword">new</span> BasicTextEncryptor();</span><br><span class="line">    <span class="comment">// 加密密钥</span></span><br><span class="line">    textEncryptor.setPassword(<span class="string">&quot;1111111111&quot;</span>);</span><br><span class="line">    <span class="comment">// 要加密的数据（如数据库的用户名或密码）</span></span><br><span class="line">    String username = textEncryptor.encrypt(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    String password = textEncryptor.encrypt(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;username:&quot;</span> + username);</span><br><span class="line">    System.out.println(<span class="string">&quot;password:&quot;</span> + password);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>原文:<a href="https://blog.csdn.net/weixin_34241036/article/details/92575297">使用ulisesbocchio对spring-boot项目properties配置文件信息加密</a></p><hr><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ulisesbocchio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ulisesbocchio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt-spring-boot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jasypt<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>问题分析: 因为考虑是内网，我们用的是自己的maven私服，光配置jasypt-spring-boot-starter 无法级联引入，需要单独去引入jasypt-spring-boot的jar </p></blockquote><p>原文链接：<a href="https://blog.csdn.net/moneyshi/article/details/108628693">执笔记忆的空白</a></p><h1 id="创建SpringBoot项目出现Java：程序包org-springframework-stereotype-不存在——解决办法"><a href="#创建SpringBoot项目出现Java：程序包org-springframework-stereotype-不存在——解决办法" class="headerlink" title="创建SpringBoot项目出现Java：程序包org.springframework.stereotype 不存在——解决办法"></a>创建SpringBoot项目出现Java：程序包org.springframework.stereotype 不存在——解决办法</h1><p>前言：在出现问题是查了很多相关的资料，都说的是缺少依赖，需要导包之类的，但是没有说在创建项目后没有选择JRE和Delegate IDE build/run actions to Maven,需要将项目交给Maven管理，希望能对大家有所帮助吧。</p><h2 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h2><p><strong>Java：程序包org.springframework.stereotype 不存在</strong></p><p><strong>Java：程序包org.springframework.beans.factory.annotation不存在</strong></p><p><img src= "/img/loading.gif" data-lazy-src="20200714111912938.png" alt="img"></p><h2 id="二、解决方法"><a href="#二、解决方法" class="headerlink" title="二、解决方法"></a>二、解决方法</h2><p>1.File——Settings</p><p><img src= "/img/loading.gif" data-lazy-src="20200714111923702.png" alt="img"></p><p> 2.Setting——Build，Execution，Deployment——Maven——Runner—选择Delegate IDE，选择自己安装的JRE的路径——OK</p><p><img src= "/img/loading.gif" data-lazy-src="20200714111930652.png" alt="img"></p><p>成功启动</p><p><img src= "/img/loading.gif" data-lazy-src="20200714111944812.png" alt="img"></p><p>选好之后运行能成功，因为自己出现好几次这样的问题了，所以记录一下，以免下次出现还不会解决。</p><p>from <a href="https://blog.csdn.net/yyp0304Devin/article/details/107334656">here</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;配置文件优先级&quot;&gt;&lt;a href=&quot;#配置文件优先级&quot; class=&quot;headerlink&quot; title=&quot;配置文件优先级&quot;&gt;&lt;/a&gt;配置文件优先级&lt;/h1&gt;&lt;h2 id=&quot;1-项目内部配置文件&quot;&gt;&lt;a href=&quot;#1-项目内部配置文件&quot; class=&quot;head</summary>
      
    
    
    
    
    <category term="basis" scheme="http://victorfengming.gitee.io/tags/basis/"/>
    
    <category term="Java" scheme="http://victorfengming.gitee.io/tags/Java/"/>
    
    <category term="SpringBoot" scheme="http://victorfengming.gitee.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Python实现Hexo工具</title>
    <link href="http://victorfengming.gitee.io/comic/python-hexo-tools/"/>
    <id>http://victorfengming.gitee.io/comic/python-hexo-tools/</id>
    <published>2021-04-16T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.024Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本工具是通过<code>Python</code>脚本实现 <code>Hexo</code> 自动 生成 执行 编译 发布的功能</p><p>你可以在这里<a href="https://victorfengming.gitee.io/file/exe/hexo-tools/hexo-tools-21.4.21.exe">下载exe</a> </p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="1-exe下载"><a href="#1-exe下载" class="headerlink" title="1. exe下载"></a>1. exe下载</h3><blockquote><p>将exe文件放在你的任意文件夹中</p></blockquote><h3 id="2-file-md"><a href="#2-file-md" class="headerlink" title="2. file.md"></a>2. file.md</h3><p>创建 名为<code>file.md</code>的文件,在你要写book的目录下</p><blockquote><p>注意: 这里file.md文件名不可更改</p></blockquote><h3 id="3-编辑文件内容"><a href="#3-编辑文件内容" class="headerlink" title="3. 编辑文件内容"></a>3. 编辑文件内容</h3><p>类似这样</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">01<span class="emphasis">_JVM内存与垃概述.md</span></span><br><span class="line"><span class="emphasis">02_</span>如何看术与JVM.md</span><br><span class="line">03<span class="emphasis">_为什学习JVM.md</span></span><br><span class="line"><span class="emphasis">04_</span>面课程特点.md</span><br></pre></td></tr></table></figure><h3 id="4-运行"><a href="#4-运行" class="headerlink" title="4. 运行"></a>4. 运行</h3><h4 id="hexo-tools-21-4-20-exe"><a href="#hexo-tools-21-4-20-exe" class="headerlink" title="hexo-tools-21.4.20.exe"></a>hexo-tools-21.4.20.exe</h4><p><img src= "/img/loading.gif" data-lazy-src="1618599141367.png" alt="1618599141367"></p><h4 id="hexo-tools-21-4-21-exe"><a href="#hexo-tools-21-4-21-exe" class="headerlink" title="hexo-tools-21.4.21.exe"></a>hexo-tools-21.4.21.exe</h4><p><img src= "/img/loading.gif" data-lazy-src="1618654713205.png" alt="1618654713205"></p><h3 id="5-执行"><a href="#5-执行" class="headerlink" title="5. 执行"></a>5. 执行</h3><h4 id="1：生成md"><a href="#1：生成md" class="headerlink" title="1：生成md"></a>1：生成md</h4><p>运行这条选项会根据<code>file.md</code>每行的文本生成对应文件</p><p><img src= "/img/loading.gif" data-lazy-src="1618599290568.png" alt="1618599290568"></p><p>并且在每个文件中自动加入 一级标题</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &quot;qwfp576&quot;</span><br><span class="line">date:   2021-4-18</span><br><span class="line">cover: &quot;/img/lynk/55.jpg&quot;</span><br><span class="line">author: &quot;victor&quot;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="section"># qwfp576</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h4><p>这步相当于</p><p>在终端直接敲</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>编译后,会在当localhost:4000 run</p><h4 id="4-git-指令"><a href="#4-git-指令" class="headerlink" title="4. git 指令"></a>4. git 指令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m\&quot;Commit by hexo tool!!!\&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>这里 add &gt;&gt;&gt; all</p><p>commit的信息的固定的</p><p>push时,如果是已经clone下来自己的库,能够直接push</p><p>否则要先登录</p><h4 id="5-gitee-pages"><a href="#5-gitee-pages" class="headerlink" title="5. gitee pages"></a>5. gitee pages</h4><p>gitee pages 部署,这个update</p><p>只有gitee pro 会员才能够 支持自动 更新</p><p>但是这里可以通过py提供了一些代码参考</p><p>先 tag一个 TODO</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Python: 3.7</p><p>hexo-cli: 4.2.0</p><p>Node.js v15.8.0</p><p><a href="mailto:&#110;&#x70;&#109;&#64;&#x37;&#46;&#x31;&#x30;&#46;&#x30;">&#110;&#x70;&#109;&#64;&#x37;&#46;&#x31;&#x30;&#46;&#x30;</a></p><p>Pycharm 2021.3</p><p>Pyinstaller</p><p>Gitee Pages</p><h2 id="Hexo-介绍"><a href="#Hexo-介绍" class="headerlink" title="Hexo 介绍"></a>Hexo 介绍</h2><p>一个快速, 简洁且高效的博客框架</p><p>让上百个页面在几秒内瞬间完成渲染. Hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统.</p><h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><ol><li><p>生成md文件列表,通过读取文件,创建md文件</p></li><li><p>null</p></li><li><p>run 编译 ,html格式以便发布</p></li><li><p>git 自动 push md</p></li><li><p>gitee pages 自动update(dev)</p></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="cmder"><a href="#cmder" class="headerlink" title="cmder"></a>cmder</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#!/usr/bin/env python</span></span><br><span class="line"><span class="string"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="string"># Created by victor</span></span><br><span class="line"><span class="string"># Created Time: &#x27;2021/4/17 0:42&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">version: 21.4.21</span></span><br><span class="line"><span class="string">TODO :         gitee pages auto sync!!!</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># import sys</span></span><br><span class="line"><span class="comment"># import re</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># dir 是全路径</span></span><br><span class="line"><span class="comment"># 比如: E:\Projects\PycharmProjects\untitled\test\database\redis\2019-09-25-deepin-install-redis.md</span></span><br><span class="line"><span class="comment"># :param dir:</span></span><br><span class="line"><span class="comment"># :return:</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HexoTool</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,pypath</span>):</span></span><br><span class="line">        self.sum_file_name = <span class="string">&quot;file.md&quot;</span></span><br><span class="line">        self.summary_file_name = <span class="string">&quot;SUMMARY.md&quot;</span></span><br><span class="line">        self.readme_name = <span class="string">&quot;README.md&quot;</span></span><br><span class="line">        <span class="comment"># 当前脚本目录</span></span><br><span class="line">        <span class="comment"># self.pypath = sys.path[0]</span></span><br><span class="line">        <span class="comment"># self.pypath = os.getcwd()</span></span><br><span class="line">        <span class="comment"># self.pypath = input(&quot;please input the root path(windows split symbol is \\)\n:&quot;)</span></span><br><span class="line">        self.pypath = pypath</span><br><span class="line">        <span class="comment"># self.root_path = self.pypath</span></span><br><span class="line">        <span class="comment"># sour_path source 源 路径</span></span><br><span class="line">        self.sour_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.sum_file_name</span><br><span class="line">        <span class="comment"># SUMMARY.md 路径</span></span><br><span class="line">        self.summary_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.summary_file_name</span><br><span class="line">        print(<span class="string">&quot;| self.pypath &gt;&gt;&gt; &quot;</span>,self.pypath)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">repSpilt</span>(<span class="params">self, path</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        替换路径分隔符</span></span><br><span class="line"><span class="string">        :param path:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> path.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;\\\\&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">newFile</span>(<span class="params">self, line, dirname</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        创建文件</span></span><br><span class="line"><span class="string">        :param line:</span></span><br><span class="line"><span class="string">        :param dirname:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        print(<span class="string">&quot;| gen file &gt;&gt;&gt;&quot;</span>)</span><br><span class="line">        <span class="comment"># 新建文件的文件名,最后的\n去掉</span></span><br><span class="line">        newName = dirname + <span class="string">&quot;\\&quot;</span> + line[:-<span class="number">1</span>]</span><br><span class="line">        print(<span class="string">&quot;| \t&quot;</span>, line[:-<span class="number">1</span>])</span><br><span class="line">        i = datetime.now()</span><br><span class="line">        ran = randint(<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(newName, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">            f2.write(<span class="string">&quot;---\n&quot;</span>)</span><br><span class="line">            f2.write(<span class="string">&quot;title: \&quot;&quot;</span> + line[:-<span class="number">4</span>]+<span class="string">&quot;\&quot;\n&quot;</span>)</span><br><span class="line">            f2.write(<span class="string">&quot;date:   %s-%s-%s\n&quot;</span> % (i.year, i.month, i.day))</span><br><span class="line">            f2.write(<span class="string">&quot;cover: \&quot;/img/lynk/&quot;</span>+<span class="built_in">str</span>(ran)+<span class="string">&quot;.jpg\&quot;\n&quot;</span>)</span><br><span class="line">            f2.write(<span class="string">&quot;author: \&quot;victor\&quot;\n&quot;</span>)</span><br><span class="line">            f2.write(<span class="string">&quot;---\n&quot;</span>)</span><br><span class="line">            f2.write(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            f2.write(<span class="string">&quot;# &quot;</span>+line[:-<span class="number">4</span>]+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">for_line</span>(<span class="params">self, file</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        读取 sm文件,并遍历行</span></span><br><span class="line"><span class="string">        :param file:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 获取目录</span></span><br><span class="line">        dirname = os.path.dirname(file)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> f1:</span><br><span class="line">                <span class="keyword">if</span> line == <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                    <span class="comment"># line 是空行</span></span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 判断line是不是最后一行</span></span><br><span class="line">                    <span class="keyword">if</span> line[-<span class="number">1</span>] != <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                        <span class="comment"># 加上换行</span></span><br><span class="line">                        line += <span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                    self.newFile(line, dirname)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;| gen &quot;</span>, i, <span class="string">&quot;file success!!!&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| path:&quot;</span>, dirname)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_md</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        生成md文件</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 获取输入</span></span><br><span class="line">        print(<span class="string">&quot;| -----------------------------------------------------&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| md文件生成器&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 通过读取file.md文件中的行数来创建文件&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 生成的文件会和源文件同目录&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 注意:原有文件会被替换&quot;</span>)</span><br><span class="line">        <span class="comment"># print(&quot;| 请输入源目录文件路径,window用 \ 来分隔文件夹&quot;)</span></span><br><span class="line">        <span class="comment"># sourceFile = input(&quot;:&quot;)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># E:\Projects\PycharmProjects\untitled\newFile</span></span><br><span class="line">        <span class="comment"># sourceFile = self.pypath + &quot;\\&quot; + &quot;SUMMARY.md&quot;</span></span><br><span class="line">        sour_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.sum_file_name</span><br><span class="line">        self.for_line(self.repSpilt(sour_path))</span><br><span class="line">        <span class="comment"># os.system(&#x27;pause&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hexo_run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        运行hexo</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        print(<span class="string">&quot;| runing...&quot;</span>)</span><br><span class="line">        os.chdir(self.pypath)</span><br><span class="line">        os.system(<span class="string">&quot;hexo clean&quot;</span>)</span><br><span class="line">        os.system(<span class="string">&quot;hexo g&quot;</span>)</span><br><span class="line">        os.system(<span class="string">&quot;hexo s&quot;</span>)</span><br><span class="line">        <span class="comment"># os.system(&#x27;pause&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replace_sum</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># SUMMARY.md 路径</span></span><br><span class="line">        <span class="comment"># 更新路径</span></span><br><span class="line">        summary_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.summary_file_name</span><br><span class="line">        sour_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.sum_file_name</span><br><span class="line"></span><br><span class="line">        <span class="comment"># summary_path = self.pypath + &quot;\\&quot; + &quot;SUMMARY.md&quot;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(sour_path, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f1, <span class="built_in">open</span>(summary_path, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> f1:</span><br><span class="line">                <span class="keyword">if</span> line == <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                    <span class="comment"># line 是空行</span></span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 判断line是不是最后一行</span></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> line[-<span class="number">1</span>] != <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                        <span class="comment"># 加上换行</span></span><br><span class="line">                        line += <span class="string">&quot;\n&quot;</span></span><br><span class="line">                    f2.write(<span class="string">&quot;- [&quot;</span>)</span><br><span class="line">                    f2.write(line[:-<span class="number">4</span>])</span><br><span class="line">                    f2.write(<span class="string">&quot;](&quot;</span>)</span><br><span class="line">                    f2.write(line[:-<span class="number">1</span>])</span><br><span class="line">                    f2.write(<span class="string">&quot;)&quot;</span>)</span><br><span class="line">                    f2.write(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| gen summary success!!!&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| total effect line:&quot;</span>,i)</span><br><span class="line">        <span class="comment"># os.system(&#x27;pause&#x27;)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">qucik_git</span>(<span class="params">self</span>):</span></span><br><span class="line"></span><br><span class="line">        os.chdir(self.pypath)</span><br><span class="line">        os.system(<span class="string">&quot;git add .&quot;</span>)</span><br><span class="line">        os.system(<span class="string">&quot;git commit -m\&quot;Commit by Hexo Tools!!!\&quot;&quot;</span>)</span><br><span class="line">        os.system(<span class="string">&quot;git push&quot;</span>)</span><br><span class="line">        <span class="comment"># os.system(&#x27;pause&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">menu</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 获取输入</span></span><br><span class="line">        <span class="comment"># print(&quot;| =========================================&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| ================ Hexo tools ================&quot;)</span></span><br><span class="line">        print(<span class="string">&quot;| --------------------------- Hexo tools ---------------------------&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 1：生成md&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 2: 转换SUMMARY&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 3: 本地运行&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 4: 发布Git&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 0: exit()&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| --------------------------- Hexo tools ---------------------------&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">input</span>(<span class="string">&quot;| choose operation you need：&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    yt = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">       ┌─┐       ┌─┐ + +</span></span><br><span class="line"><span class="string">    ┌──┘ ┴───────┘ ┴──┐++</span></span><br><span class="line"><span class="string">    │                 │</span></span><br><span class="line"><span class="string">    │       ───       │++ + + +</span></span><br><span class="line"><span class="string">    ███████───███████ │+</span></span><br><span class="line"><span class="string">    │                 │+</span></span><br><span class="line"><span class="string">    │       ─┴─       │</span></span><br><span class="line"><span class="string">    │                 │</span></span><br><span class="line"><span class="string">    └───┐         ┌───┘</span></span><br><span class="line"><span class="string">        │         │</span></span><br><span class="line"><span class="string">        │         │   + +</span></span><br><span class="line"><span class="string">        │         │</span></span><br><span class="line"><span class="string">        │         └──────────────┐</span></span><br><span class="line"><span class="string">        │                        │</span></span><br><span class="line"><span class="string">        │                        ├─┐</span></span><br><span class="line"><span class="string">        │                        ┌─┘</span></span><br><span class="line"><span class="string">        │                        │</span></span><br><span class="line"><span class="string">        └─┐  ┐  ┌───────┬──┐  ┌──┘  + + + +</span></span><br><span class="line"><span class="string">          │ ─┤ ─┤       │ ─┤ ─┤</span></span><br><span class="line"><span class="string">          └──┴──┘       └──┴──┘  + + + +</span></span><br><span class="line"><span class="string">                神兽保佑</span></span><br><span class="line"><span class="string">                代码无BUG!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    print(yt)</span><br><span class="line">    print(<span class="string">&quot;| --------------------------- hexo tools ---------------------------&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @version: 21.4.23&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @description: hexo tools auto gen file &amp; build &amp; sync to git&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @author: victor&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @site: https://victorfengming.gitee.io/&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @introduce: https://victorfengming.gitee.io/comic/python-hexo-tools/&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @readme: https://victorfengming.gitee.io/file/exe/hexo-tools/readme.md&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @download: https://victorfengming.gitee.io/file/exe/hexo-tools/hexo-tools-21.4.20.exe&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| --------------------------- hexo tools ---------------------------&quot;</span>)</span><br><span class="line">    <span class="comment"># print(&quot;| 注意：使用前请将exe文件放到file.md同级目录下&quot;)</span></span><br><span class="line">    <span class="comment"># print(&quot;| ========================================&quot;)</span></span><br><span class="line">    <span class="comment"># print(os.path.isfile(&quot;E:\\Projects\\PycharmProjects\\untitled\\newFiletest\\12.md&quot;))</span></span><br><span class="line">    <span class="comment"># ht = HexoTool(input(&quot;please input the root path(windows split symbol is \\)\n:&quot;))</span></span><br><span class="line">    ht = HexoTool(<span class="built_in">input</span>(<span class="string">&quot;please input the root path(windows split symbol is \\)\n:&quot;</span>))</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        cho = ht.menu()</span><br><span class="line">        <span class="keyword">if</span> cho == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">            print(<span class="number">1</span>)</span><br><span class="line">            ht.gen_md()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">            print(<span class="number">2</span>)</span><br><span class="line">            ht.replace_sum()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;3&quot;</span>:</span><br><span class="line">            print(<span class="number">3</span>)</span><br><span class="line">            ht.hexo_run()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;4&quot;</span>:</span><br><span class="line">            print(<span class="number">4</span>)</span><br><span class="line">            ht.qucik_git()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;0&quot;</span>:</span><br><span class="line">            <span class="comment"># print(&quot;| bye~&quot;)</span></span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> filedialog, messagebox</span><br><span class="line"><span class="keyword">from</span> hexo_tools <span class="keyword">import</span> HexoTool</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">| --------------------------- HexoTool tools ---------------------------</span></span><br><span class="line"><span class="string">| @version: 21.4.23</span></span><br><span class="line"><span class="string">| @description: hexo tools auto gen file &amp; build &amp; sync to git</span></span><br><span class="line"><span class="string">| @author: victor</span></span><br><span class="line"><span class="string">| @site: https://victorfengming.gitee.io/</span></span><br><span class="line"><span class="string">| @introduce: https://victorfengming.gitee.io/comic/python-hexo-tools/</span></span><br><span class="line"><span class="string">| @readme: https://victorfengming.gitee.io/file/exe/hexo-tools/readme.md</span></span><br><span class="line"><span class="string">| @download: https://victorfengming.gitee.io/file/exe/hexo-tools/hexo-tools-21.4.21.exe</span></span><br><span class="line"><span class="string">| --------------------------- hexo tools ---------------------------</span></span><br><span class="line"><span class="string">| TODO : </span></span><br><span class="line"><span class="string">|     1. 递归扫描md文件,根据相对路径 生成`SUMMARY.md`</span></span><br><span class="line"><span class="string">|     2. cmd 日志 放入 tk页面 </span></span><br><span class="line"><span class="string">|     5. gitee pages auto update by chrome tools </span></span><br><span class="line"><span class="string">| --------------------------- hexo tools ---------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tk_gui</span>():</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, gt</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        初始化魔术方法</span></span><br><span class="line"><span class="string">        用于设置界面的初始状态</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 创建tkinter窗口</span></span><br><span class="line">        self.root = Tk()</span><br><span class="line">        <span class="comment"># 设置窗口的标题</span></span><br><span class="line">        self.root.title(<span class="string">&#x27;Gitbook Tools&#x27;</span>)</span><br><span class="line">        <span class="comment"># 设置窗口的长和宽,最大值和最小值设置相同,用户不可调整窗口大小</span></span><br><span class="line">        self.root.minsize(<span class="number">90</span>, <span class="number">180</span>)</span><br><span class="line">        self.root.maxsize(<span class="number">780</span>, <span class="number">180</span>)</span><br><span class="line">        self.gt = gt</span><br><span class="line">        self.root_path = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化</span></span><br><span class="line">        <span class="comment"># 初始化主要url</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 调用主要逻辑执行函数</span></span><br><span class="line">        self.main_logic()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main_logic</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        主业务逻辑</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 顶部信息栏</span></span><br><span class="line">        topp = Frame()</span><br><span class="line">        topp.grid(row=<span class="number">0</span>, column=<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 内容栏</span></span><br><span class="line">        self.cont = Frame()</span><br><span class="line">        self.cont.grid(row=<span class="number">1</span>, column=<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 输入选项操作</span></span><br><span class="line">        self.indo = Frame()</span><br><span class="line">        self.indo.grid(row=<span class="number">0</span>, column=<span class="number">1</span>, rowspan=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 状态栏</span></span><br><span class="line">        self.stat = Frame()</span><br><span class="line">        self.stat.grid(row=<span class="number">2</span>, column=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># self.get_path()</span></span><br><span class="line">        self.put_button()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 加入主消息循环</span></span><br><span class="line">        self.root.mainloop()</span><br><span class="line">        <span class="comment"># #</span></span><br><span class="line">        <span class="comment"># self.myStdout()  # 实例化重定向类</span></span><br><span class="line">        <span class="comment"># self.restoreStd()  # 恢复标准输出</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put_button</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        用于绘制顶部菜单</span></span><br><span class="line"><span class="string">        :param topp:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 菜单栏</span></span><br><span class="line">        <span class="comment"># print(&quot;| 1：生成md&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| 2: 转换SUMMARY&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| 3: 编译&gt;HTML&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| 4: 发布Git&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| 0: exit()&quot;)</span></span><br><span class="line">        self.gen_button(<span class="string">&quot;设置工作路径&quot;</span>, self.get_path).grid(row=<span class="number">0</span>, column=<span class="number">0</span>)</span><br><span class="line">        self.gen_button(<span class="string">&quot;生成md&quot;</span>, <span class="keyword">lambda</span>: self.button_run_before(gt.gen_md)()).grid(row=<span class="number">1</span>, column=<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># self.gen_button(&quot;转换SUMMARY&quot;, lambda: self.button_run_before(gt.replace_sum)()).grid(row=2, column=0)</span></span><br><span class="line">        self.gen_button(<span class="string">&quot;localhost运行&quot;</span>, <span class="keyword">lambda</span>: self.button_run_before(gt.hexo_run)()).grid(row=<span class="number">3</span>, column=<span class="number">0</span>)</span><br><span class="line">        self.gen_button(<span class="string">&quot;发布Git&quot;</span>, <span class="keyword">lambda</span>: self.button_run_before(gt.qucik_git)()).grid(row=<span class="number">4</span>, column=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_button</span>(<span class="params">self, text, method</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        生成 button</span></span><br><span class="line"><span class="string">        :param text:</span></span><br><span class="line"><span class="string">        :param method:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> Button(self.cont, text=text, command=method, width=<span class="number">22</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_path</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.root_path = filedialog.askdirectory()</span><br><span class="line">        print(<span class="string">&quot;getpath&gt;&gt;&gt;&quot;</span>,self.root_path)</span><br><span class="line">        <span class="comment"># 将路径 从 图形类 传入 工具类</span></span><br><span class="line">        self.gt.pypath = self.root_path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">button_run_before</span>(<span class="params">self,func</span>):</span></span><br><span class="line">        <span class="comment"># 判断</span></span><br><span class="line">        <span class="comment"># if func != self.get_path and self.root_path == &quot;&quot;:</span></span><br><span class="line">        <span class="keyword">if</span> self.root_path == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            messagebox.showinfo(<span class="string">&#x27;错误&#x27;</span>,<span class="string">&#x27;请先设置工作路径&#x27;</span>)</span><br><span class="line">            self.get_path()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> func</span><br><span class="line">yt = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">       ┌─┐       ┌─┐ + +</span></span><br><span class="line"><span class="string">    ┌──┘ ┴───────┘ ┴──┐++</span></span><br><span class="line"><span class="string">    │                 │</span></span><br><span class="line"><span class="string">    │       ───       │++ + + +</span></span><br><span class="line"><span class="string">    ███████───███████ │+</span></span><br><span class="line"><span class="string">    │                 │+</span></span><br><span class="line"><span class="string">    │       ─┴─       │</span></span><br><span class="line"><span class="string">    │                 │</span></span><br><span class="line"><span class="string">    └───┐         ┌───┘</span></span><br><span class="line"><span class="string">        │         │</span></span><br><span class="line"><span class="string">        │         │   + +</span></span><br><span class="line"><span class="string">        │         │</span></span><br><span class="line"><span class="string">        │         └──────────────┐</span></span><br><span class="line"><span class="string">        │                        │</span></span><br><span class="line"><span class="string">        │                        ├─┐</span></span><br><span class="line"><span class="string">        │                        ┌─┘</span></span><br><span class="line"><span class="string">        │                        │</span></span><br><span class="line"><span class="string">        └─┐  ┐  ┌───────┬──┐  ┌──┘  + + + +</span></span><br><span class="line"><span class="string">          │ ─┤ ─┤       │ ─┤ ─┤</span></span><br><span class="line"><span class="string">          └──┴──┘       └──┴──┘  + + + +</span></span><br><span class="line"><span class="string">                神兽保佑</span></span><br><span class="line"><span class="string">                代码无BUG!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">print(yt)</span><br><span class="line">print(<span class="string">&quot;| --------------------------- hexo tools ---------------------------&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @version: 21.4.21&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @description: hexo tools auto gen file &amp; build &amp; sync to git&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @author: victor&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @site: https://victorfengming.gitee.io/&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @introduce: https://victorfengming.gitee.io/comic/python-hexo-tools/&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @readme: https://victorfengming.gitee.io/file/exe/hexo-tools/readme.md&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @download: https://victorfengming.gitee.io/file/exe/hexo-tools/hexo-tools-21.4.21.exe&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| --------------------------- hexo tools ---------------------------&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| 注意：使用前请将exe文件放到file.md同级目录下&quot;</span>)</span><br><span class="line"><span class="comment"># print(&quot;| ========================================&quot;)</span></span><br><span class="line"><span class="comment"># print(os.path.isfile(&quot;E:\\Projects\\PycharmProjects\\untitled\\newFiletest\\12.md&quot;))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># gt = GitbookTool(input(&quot;please input the root path(windows split symbol is \\)\n:&quot;))</span></span><br><span class="line"></span><br><span class="line">gt = HexoTool(<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">t = Tk_gui(gt)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;本工具是通过&lt;code&gt;Python&lt;/code&gt;脚本实现 &lt;code&gt;Hexo&lt;/code&gt; 自动 生成 执行 编译 发布</summary>
      
    
    
    
    
    <category term="Python" scheme="http://victorfengming.gitee.io/tags/Python/"/>
    
    <category term="node" scheme="http://victorfengming.gitee.io/tags/node/"/>
    
    <category term="hexo" scheme="http://victorfengming.gitee.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Python实现GitBook工具</title>
    <link href="http://victorfengming.gitee.io/comic/python-gitbook-tools/"/>
    <id>http://victorfengming.gitee.io/comic/python-gitbook-tools/</id>
    <published>2021-04-15T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.022Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本工具是通过<code>Python</code>脚本实现 <code>GitBook</code> 自动 生成 执行 编译 发布的功能</p><p>你可以在这里<a href="https://victorfengming.gitee.io/file/exe/gitbook-tools/gitbook-tools-21.4.23.exe">下载exe</a> </p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="1-exe下载-并移动位置"><a href="#1-exe下载-并移动位置" class="headerlink" title="1. exe下载,并移动位置"></a>1. exe下载,并移动位置</h3><blockquote><p>将exe文件放在你的任意文件夹中</p></blockquote><h3 id="2-file-md"><a href="#2-file-md" class="headerlink" title="2. file.md"></a>2. file.md</h3><p>创建 名为<code>file.md</code>的文件,在你要写book的目录下</p><blockquote><p>注意: 这里file.md文件名不可更改</p></blockquote><h3 id="3-编辑文件内容"><a href="#3-编辑文件内容" class="headerlink" title="3. 编辑文件内容"></a>3. 编辑文件内容</h3><p>类似这样</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">01<span class="emphasis">_JVM内存与垃概述.md</span></span><br><span class="line"><span class="emphasis">02_</span>如何看术与JVM.md</span><br><span class="line">03<span class="emphasis">_为什学习JVM.md</span></span><br><span class="line"><span class="emphasis">04_</span>面课程特点.md</span><br></pre></td></tr></table></figure><h3 id="4-运行"><a href="#4-运行" class="headerlink" title="4. 运行"></a>4. 运行</h3><h4 id="gitbook-tools-21-4-18-exe"><a href="#gitbook-tools-21-4-18-exe" class="headerlink" title="gitbook-tools-21.4.18.exe"></a>gitbook-tools-21.4.18.exe</h4><p><img src= "/img/loading.gif" data-lazy-src="1618599141367.png" alt="1618599141367"></p><h4 id="gitbook-tools-21-4-23-exe"><a href="#gitbook-tools-21-4-23-exe" class="headerlink" title="gitbook-tools-21.4.23.exe"></a>gitbook-tools-21.4.23.exe</h4><p><img src= "/img/loading.gif" data-lazy-src="1618654713205.png" alt="1618654713205"></p><h3 id="5-执行"><a href="#5-执行" class="headerlink" title="5. 执行"></a>5. 执行</h3><h4 id="1：生成md"><a href="#1：生成md" class="headerlink" title="1：生成md"></a>1：生成md</h4><p>运行这条选项会根据<code>file.md</code>每行的文本生成对应文件</p><p><img src= "/img/loading.gif" data-lazy-src="1618599290568.png" alt="1618599290568"></p><p>并且在每个文件中自动加入 一级标题</p><p><img src= "/img/loading.gif" data-lazy-src="1618599404144.png" alt="1618599404144"></p><p>现在就可以编写主要内容了</p><h4 id="2-转换SUMMARY"><a href="#2-转换SUMMARY" class="headerlink" title="2: 转换SUMMARY"></a>2: 转换SUMMARY</h4><p>执行这条命令会根据<code>file.md</code>每行的文本生成</p><p>目录格式的 <code>SUMMARY.md</code></p><p>生成后的文件如下</p><p><img src= "/img/loading.gif" data-lazy-src="1618599578828.png" alt="1618599578828"></p><p>如果你可以自己写SUMMARY，这步可以忽略</p><h4 id="3-编译build"><a href="#3-编译build" class="headerlink" title="3. 编译build"></a>3. 编译build</h4><p>这步相当于</p><p>在终端直接敲</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitbook build</span><br></pre></td></tr></table></figure><p>不同的是,如果你没有README文件,会自动创建</p><p><img src= "/img/loading.gif" data-lazy-src="1618599701544.png" alt="1618599701544"></p><p>编译后,会在当前目录生成<code>_book</code><br>文件夹,里面为编译后的HTML,可供发布或部署</p><h4 id="4-git-指令"><a href="#4-git-指令" class="headerlink" title="4. git 指令"></a>4. git 指令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add _book</span><br><span class="line">git commit -m\&quot;Commit by gitbook tool!!!\&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>这里 add 只是add了 _book 文件夹</p><p>commit的信息的固定的</p><p>push时,如果是已经clone下来自己的库,能够直接push</p><p>否则要先登录</p><h4 id="5-gitee-pages"><a href="#5-gitee-pages" class="headerlink" title="5. gitee pages"></a>5. gitee pages</h4><p>gitee pages 部署,这个update</p><p>只有gitee pro 会员才能够 支持自动 更新</p><p>但是这里可以通过py提供了一些代码参考</p><p>先 tag一个 TODO</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Python: 3.7 </p><p>GitBook CLI version: 2.3.2</p><p>GitBook version: 3.2.3</p><p>Node.js v15.8.0</p><p><a href="mailto:&#110;&#112;&#109;&#64;&#55;&#46;&#x31;&#48;&#46;&#x30;">&#110;&#112;&#109;&#64;&#55;&#46;&#x31;&#48;&#46;&#x30;</a></p><p>Pycharm 2021.3</p><p>Pyinstaller</p><p>Gitee Pages</p><h2 id="Gitbook-介绍"><a href="#Gitbook-介绍" class="headerlink" title="Gitbook 介绍"></a>Gitbook 介绍</h2><p>GitBook 是一个基于 Node.js 的命令行工具，可使用 Github/Git 和 Markdown 来制作精美的电子书，GitBook 并非关于 Git 的教程。</p><p><a href="https://www.jianshu.com/p/0388d8bb49a7">Gitbook教程</a></p><p>安装遇到的<a href="https://victorfengming.gitee.io/git/gitbook/">问题</a></p><h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><ol><li><p>生成md文件列表,通过读取文件,创建md文件</p></li><li><p>生成SUMMARY.md 替换文件名 为 Gitbook的SUMMARY格式</p></li><li><p>build 编译gitbook ,html格式以便发布</p></li><li><p>git 自动 push <code>_book</code>文件夹</p></li><li><p>gitee pages 自动update(dev)</p></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#!/usr/bin/env python</span></span><br><span class="line"><span class="string"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="string"># Created by victor</span></span><br><span class="line"><span class="string"># Created Time: &#x27;2021/4/17 0:42&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">version: 21.4.18</span></span><br><span class="line"><span class="string">TODO :         gitee pages auto sync!!!</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># import sys</span></span><br><span class="line"><span class="comment"># import re</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># dir 是全路径</span></span><br><span class="line"><span class="comment"># 比如: E:\Projects\PycharmProjects\untitled\test\database\redis\2019-09-25-deepin-install-redis.md</span></span><br><span class="line"><span class="comment"># :param dir:</span></span><br><span class="line"><span class="comment"># :return:</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GitbookTool</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">self.sum_file_name = <span class="string">&quot;file.md&quot;</span></span><br><span class="line"><span class="comment"># 当前脚本目录</span></span><br><span class="line"><span class="comment"># self.pypath = sys.path[0]</span></span><br><span class="line"><span class="comment"># self.pypath = os.getcwd()</span></span><br><span class="line">self.pypath = <span class="built_in">input</span>(<span class="string">&quot;please input the root path(windows split symbol is \\)\n:&quot;</span>)</span><br><span class="line"><span class="comment"># self.root_path = self.pypath</span></span><br><span class="line"><span class="comment"># sour_path source 源 路径</span></span><br><span class="line">self.sour_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.sum_file_name</span><br><span class="line"><span class="comment"># SUMMARY.md 路径</span></span><br><span class="line">self.summary_path = self.pypath + <span class="string">&quot;\\&quot;</span> + <span class="string">&quot;SUMMARY.md&quot;</span></span><br><span class="line">print(<span class="string">&quot;| self.pypath &gt;&gt;&gt; &quot;</span>,self.pypath)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">repSpilt</span>(<span class="params">self, path</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        替换路径分隔符</span></span><br><span class="line"><span class="string">        :param path:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">return</span> path.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;\\\\&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">newFile</span>(<span class="params">self, line, dirname</span>):</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        创建文件</span></span><br><span class="line"><span class="string">        :param line:</span></span><br><span class="line"><span class="string">        :param dirname:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">print(<span class="string">&quot;| gen file &gt;&gt;&gt;&quot;</span>)</span><br><span class="line"><span class="comment"># 新建文件的文件名,最后的\n去掉</span></span><br><span class="line">newName = dirname + <span class="string">&quot;\\&quot;</span> + line[:-<span class="number">1</span>]</span><br><span class="line">print(<span class="string">&quot;| \t&quot;</span>, line[:-<span class="number">1</span>])</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(newName, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">f2.write(<span class="string">&quot;# &quot;</span> + line[:-<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">for_line</span>(<span class="params">self, file</span>):</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        读取 sm文件,并遍历行</span></span><br><span class="line"><span class="string">        :param file:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 获取目录</span></span><br><span class="line">dirname = os.path.dirname(file)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f1:</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> line == <span class="string">&quot;\n&quot;</span>:</span><br><span class="line"><span class="comment"># line 是空行</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="comment"># 判断line是不是最后一行</span></span><br><span class="line"><span class="keyword">if</span> line[-<span class="number">1</span>] != <span class="string">&quot;\n&quot;</span>:</span><br><span class="line"><span class="comment"># 加上换行</span></span><br><span class="line">line += <span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">i += <span class="number">1</span></span><br><span class="line">self.newFile(line, dirname)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;| gen &quot;</span>, i, <span class="string">&quot;file success!!!&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| path:&quot;</span>, dirname)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_md</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        生成md文件</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 获取输入</span></span><br><span class="line">print(<span class="string">&quot;| -----------------------------------------------------&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| md文件生成器&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| 通过读取file.md文件中的行数来创建文件&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| 生成的文件会和源文件同目录&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| 注意:原有文件会被替换&quot;</span>)</span><br><span class="line"><span class="comment"># print(&quot;| 请输入源目录文件路径,window用 \ 来分隔文件夹&quot;)</span></span><br><span class="line"><span class="comment"># sourceFile = input(&quot;:&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># E:\Projects\PycharmProjects\untitled\newFile</span></span><br><span class="line"><span class="comment"># sourceFile = self.pypath + &quot;\\&quot; + &quot;SUMMARY.md&quot;</span></span><br><span class="line">self.for_line(self.repSpilt(self.sour_path))</span><br><span class="line">os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gitbook_build</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        编译gitbook</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># fname = self.pypath + +&quot;\\&quot;+&quot;SUMMARY.md&quot;</span></span><br><span class="line"><span class="comment"># os.path.isfile(fname)</span></span><br><span class="line">rname = self.pypath + <span class="string">&quot;\\&quot;</span> + <span class="string">&quot;README.md&quot;</span></span><br><span class="line"><span class="comment"># print(&quot;rname &gt;&gt;&gt; &quot;,rname)</span></span><br><span class="line"><span class="keyword">if</span> os.path.isfile(rname):</span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(rname, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">f2.write(<span class="string">&quot;This file is generated by py script!!!\n&quot;</span>)</span><br><span class="line">f2.write(<span class="string">&quot;Please write the contents of the README.md&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| building...&quot;</span>)</span><br><span class="line">os.chdir(self.pypath)</span><br><span class="line">os.system(<span class="string">&quot;gitbook build&quot;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">replace_sum</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(self.sour_path, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f1, <span class="built_in">open</span>(self.summary_path, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f1:</span><br><span class="line"><span class="keyword">if</span> line == <span class="string">&quot;\n&quot;</span>:</span><br><span class="line"><span class="comment"># line 是空行</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="comment"># 判断line是不是最后一行</span></span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> line[-<span class="number">1</span>] != <span class="string">&quot;\n&quot;</span>:</span><br><span class="line"><span class="comment"># 加上换行</span></span><br><span class="line">line += <span class="string">&quot;\n&quot;</span></span><br><span class="line">f2.write(<span class="string">&quot;- [&quot;</span>)</span><br><span class="line">f2.write(line[:-<span class="number">4</span>])</span><br><span class="line">f2.write(<span class="string">&quot;](&quot;</span>)</span><br><span class="line">f2.write(line[:-<span class="number">1</span>])</span><br><span class="line">f2.write(<span class="string">&quot;)&quot;</span>)</span><br><span class="line">f2.write(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| gen summary success!!!&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| total effect line:&quot;</span>,i)</span><br><span class="line">os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">qucik_git</span>(<span class="params">self</span>):</span></span><br><span class="line">os.chdir(self.pypath)</span><br><span class="line">os.system(<span class="string">&quot;git add _book&quot;</span>)</span><br><span class="line">os.system(<span class="string">&quot;git commit -m\&quot;Commit by gitbook tool!!!\&quot;&quot;</span>)</span><br><span class="line">os.system(<span class="string">&quot;git push&quot;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">menu</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="comment"># 获取输入</span></span><br><span class="line"><span class="comment"># print(&quot;| =========================================&quot;)</span></span><br><span class="line"><span class="comment"># print(&quot;| ================ gitbook tools ================&quot;)</span></span><br><span class="line">print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| 1：生成md&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| 2: 转换SUMMARY&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| 3: 编译&gt;HTML&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| 4: 发布Git&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| 0: exit()&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">input</span>(<span class="string">&quot;| choose operation you need：&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">yt = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">       ┌─┐       ┌─┐ + +</span></span><br><span class="line"><span class="string">    ┌──┘ ┴───────┘ ┴──┐++</span></span><br><span class="line"><span class="string">    │                 │</span></span><br><span class="line"><span class="string">    │       ───       │++ + + +</span></span><br><span class="line"><span class="string">    ███████───███████ │+</span></span><br><span class="line"><span class="string">    │                 │+</span></span><br><span class="line"><span class="string">    │       ─┴─       │</span></span><br><span class="line"><span class="string">    │                 │</span></span><br><span class="line"><span class="string">    └───┐         ┌───┘</span></span><br><span class="line"><span class="string">        │         │</span></span><br><span class="line"><span class="string">        │         │   + +</span></span><br><span class="line"><span class="string">        │         │</span></span><br><span class="line"><span class="string">        │         └──────────────┐</span></span><br><span class="line"><span class="string">        │                        │</span></span><br><span class="line"><span class="string">        │                        ├─┐</span></span><br><span class="line"><span class="string">        │                        ┌─┘</span></span><br><span class="line"><span class="string">        │                        │</span></span><br><span class="line"><span class="string">        └─┐  ┐  ┌───────┬──┐  ┌──┘  + + + +</span></span><br><span class="line"><span class="string">          │ ─┤ ─┤       │ ─┤ ─┤</span></span><br><span class="line"><span class="string">          └──┴──┘       └──┴──┘  + + + +</span></span><br><span class="line"><span class="string">                神兽保佑</span></span><br><span class="line"><span class="string">                代码无BUG!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">print(yt)</span><br><span class="line">print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @version: 21.4.18&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @description: gitbook tools auto gen file &amp; build &amp; sync to git&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @author: victor&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @site: https://victorfengming.gitee.io/&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @introduce: https://victorfengming.gitee.io/comic/python-gitbook-tools/&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @readme: https://victorfengming.gitee.io/file/exe/gitbook-tools/readme.md&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| @download: https://victorfengming.gitee.io/file/exe/gitbook-tools/gitbook-tools-21.4.18.exe&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;| 注意：使用前请将exe文件放到file.md同级目录下&quot;</span>)</span><br><span class="line"><span class="comment"># print(&quot;| ========================================&quot;)</span></span><br><span class="line"><span class="comment"># print(os.path.isfile(&quot;E:\\Projects\\PycharmProjects\\untitled\\newFiletest\\12.md&quot;))</span></span><br><span class="line">gt = GitbookTool()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">cho = gt.menu()</span><br><span class="line"><span class="keyword">if</span> cho == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">print(<span class="number">1</span>)</span><br><span class="line">gt.gen_md()</span><br><span class="line"><span class="keyword">elif</span> cho == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">print(<span class="number">2</span>)</span><br><span class="line">gt.replace_sum()</span><br><span class="line"><span class="keyword">elif</span> cho == <span class="string">&quot;3&quot;</span>:</span><br><span class="line">print(<span class="number">3</span>)</span><br><span class="line">gt.gitbook_build()</span><br><span class="line"><span class="keyword">elif</span> cho == <span class="string">&quot;4&quot;</span>:</span><br><span class="line">print(<span class="number">4</span>)</span><br><span class="line">gt.qucik_git()</span><br><span class="line"><span class="keyword">elif</span> cho == <span class="string">&quot;0&quot;</span>:</span><br><span class="line"><span class="comment"># print(&quot;| bye~&quot;)</span></span><br><span class="line">exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="gitee-page-代码-dev"><a href="#gitee-page-代码-dev" class="headerlink" title="gitee page 代码(dev)"></a>gitee page 代码(dev)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait <span class="keyword">as</span> Wait</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;start refresh gitee pages...&quot;</span>)</span><br><span class="line"></span><br><span class="line">repo_user_name = <span class="string">&quot;victorfengming&quot;</span></span><br><span class="line">repo_name = <span class="string">&quot;shell&quot;</span></span><br><span class="line">login_user = <span class="string">&quot;victorfengming&quot;</span></span><br><span class="line">login_pwd = <span class="string">&quot;xxxx&quot;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://gitee.com/&quot;</span>+repo_user_name+<span class="string">&quot;/&quot;</span>+repo_name+<span class="string">&quot;/pages&quot;</span></span><br><span class="line"></span><br><span class="line">driver = <span class="string">&quot;E:\\chrome\\chromedriver.exe&quot;</span></span><br><span class="line">chrome_options = Options()</span><br><span class="line">chrome_options.add_argument(<span class="string">&quot;--window-size=1920,1080&quot;</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">&quot;--start-maximized&quot;</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">&quot;--headless&quot;</span>)</span><br><span class="line">browser=webdriver.Chrome(executable_path=driver, options=chrome_options)</span><br><span class="line"></span><br><span class="line">browser.get(url)</span><br><span class="line"></span><br><span class="line">Wait(browser, <span class="number">10</span>).until(EC.presence_of_element_located((By.CLASS_NAME, <span class="string">&quot;item.git-nav-user__login-item&quot;</span>)))</span><br><span class="line">print(<span class="string">&quot;load finish. url=&quot;</span> + url)</span><br><span class="line">login_btn = browser.find_element_by_class_name(<span class="string">&quot;item.git-nav-user__login-item&quot;</span>)</span><br><span class="line">login_btn.click()</span><br><span class="line"></span><br><span class="line">Wait(browser, <span class="number">10</span>).until(EC.presence_of_element_located((By.ID, <span class="string">&quot;user_login&quot;</span>)))</span><br><span class="line">Wait(browser, <span class="number">10</span>).until(EC.presence_of_element_located((By.ID, <span class="string">&quot;user_password&quot;</span>)))</span><br><span class="line">print(<span class="string">&quot;login page load finish.&quot;</span>)</span><br><span class="line">user_input = browser.find_element_by_id(<span class="string">&quot;user_login&quot;</span>)</span><br><span class="line">pwd_input = browser.find_element_by_id(<span class="string">&quot;user_password&quot;</span>)</span><br><span class="line">login_btn = browser.find_element_by_name(<span class="string">&quot;commit&quot;</span>)</span><br><span class="line">user_input.send_keys(login_user)</span><br><span class="line">pwd_input.send_keys(login_pwd)</span><br><span class="line">login_btn.click()</span><br><span class="line"></span><br><span class="line">Wait(browser, <span class="number">10</span>).until(EC.presence_of_element_located((By.CLASS_NAME, <span class="string">&quot;button.orange.redeploy-button.ui.update_deploy&quot;</span>)))</span><br><span class="line">print(<span class="string">&quot;login finish.&quot;</span>)</span><br><span class="line">deploy_btn = browser.find_element_by_class_name(<span class="string">&#x27;button.orange.redeploy-button.ui.update_deploy&#x27;</span>)</span><br><span class="line"></span><br><span class="line">browser.execute_script(<span class="string">&quot;window.scrollTo(100, document.body.scrollHeight);&quot;</span>)</span><br><span class="line">deploy_btn.click()</span><br><span class="line">dialog = browser.switch_to.alert</span><br><span class="line">dialog.accept()</span><br><span class="line">print(<span class="string">&quot;refresh gitee pages finish.&quot;</span>)</span><br><span class="line">browser.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参考: <a href="https://www.jianshu.com/p/6460df84a099">https://www.jianshu.com/p/6460df84a099</a></p><p><a href="https://blog.csdn.net/weixin_29981095/article/details/113987875">https://blog.csdn.net/weixin_29981095/article/details/113987875</a></p><h2 id="Pyinstaller"><a href="#Pyinstaller" class="headerlink" title="Pyinstaller"></a>Pyinstaller</h2><p><img src= "/img/loading.gif" data-lazy-src="1618600264685.png" alt="1618600264685"></p><p>设置 运行参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-F $FileNameWithoutExtension$.py</span><br></pre></td></tr></table></figure><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>gitee pages 自动update(dev)</p><p>tkinter界面</p><h2 id="附录源码"><a href="#附录源码" class="headerlink" title="附录源码"></a>附录源码</h2><h3 id="cmd-版本-fix-bug"><a href="#cmd-版本-fix-bug" class="headerlink" title="cmd 版本 (fix bug)"></a>cmd 版本 (fix bug)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#!/usr/bin/env python</span></span><br><span class="line"><span class="string"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="string"># Created by victor</span></span><br><span class="line"><span class="string"># Created Time: &#x27;2021/4/17 0:42&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">version: 21.4.18</span></span><br><span class="line"><span class="string">TODO :         gitee pages auto sync!!!</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># import sys</span></span><br><span class="line"><span class="comment"># import re</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># dir 是全路径</span></span><br><span class="line"><span class="comment"># 比如: E:\Projects\PycharmProjects\untitled\test\database\redis\2019-09-25-deepin-install-redis.md</span></span><br><span class="line"><span class="comment"># :param dir:</span></span><br><span class="line"><span class="comment"># :return:</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GitbookTool</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.sum_file_name = <span class="string">&quot;file.md&quot;</span></span><br><span class="line">        <span class="comment"># 当前脚本目录</span></span><br><span class="line">        <span class="comment"># self.pypath = sys.path[0]</span></span><br><span class="line">        <span class="comment"># self.pypath = os.getcwd()</span></span><br><span class="line">        self.pypath = <span class="built_in">input</span>(<span class="string">&quot;please input the root path(windows split symbol is \\)\n:&quot;</span>)</span><br><span class="line">        <span class="comment"># self.root_path = self.pypath</span></span><br><span class="line">        <span class="comment"># sour_path source 源 路径</span></span><br><span class="line">        self.sour_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.sum_file_name</span><br><span class="line">        <span class="comment"># SUMMARY.md 路径</span></span><br><span class="line">        self.summary_path = self.pypath + <span class="string">&quot;\\&quot;</span> + <span class="string">&quot;SUMMARY.md&quot;</span></span><br><span class="line">        print(<span class="string">&quot;| self.pypath &gt;&gt;&gt; &quot;</span>,self.pypath)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">repSpilt</span>(<span class="params">self, path</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        替换路径分隔符</span></span><br><span class="line"><span class="string">        :param path:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> path.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;\\\\&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">newFile</span>(<span class="params">self, line, dirname</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        创建文件</span></span><br><span class="line"><span class="string">        :param line:</span></span><br><span class="line"><span class="string">        :param dirname:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        print(<span class="string">&quot;| gen file &gt;&gt;&gt;&quot;</span>)</span><br><span class="line">        <span class="comment"># 新建文件的文件名,最后的\n去掉</span></span><br><span class="line">        newName = dirname + <span class="string">&quot;\\&quot;</span> + line[:-<span class="number">1</span>]</span><br><span class="line">        print(<span class="string">&quot;| \t&quot;</span>, line[:-<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(newName, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">            f2.write(<span class="string">&quot;# &quot;</span> + line[:-<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">for_line</span>(<span class="params">self, file</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        读取 sm文件,并遍历行</span></span><br><span class="line"><span class="string">        :param file:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 获取目录</span></span><br><span class="line">        dirname = os.path.dirname(file)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> f1:</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> line == <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                    <span class="comment"># line 是空行</span></span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 判断line是不是最后一行</span></span><br><span class="line">                    <span class="keyword">if</span> line[-<span class="number">1</span>] != <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                        <span class="comment"># 加上换行</span></span><br><span class="line">                        line += <span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                    self.newFile(line, dirname)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;| gen &quot;</span>, i, <span class="string">&quot;file success!!!&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| path:&quot;</span>, dirname)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_md</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        生成md文件</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 获取输入</span></span><br><span class="line">        print(<span class="string">&quot;| -----------------------------------------------------&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| md文件生成器&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 通过读取file.md文件中的行数来创建文件&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 生成的文件会和源文件同目录&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 注意:原有文件会被替换&quot;</span>)</span><br><span class="line">        <span class="comment"># print(&quot;| 请输入源目录文件路径,window用 \ 来分隔文件夹&quot;)</span></span><br><span class="line">        <span class="comment"># sourceFile = input(&quot;:&quot;)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># E:\Projects\PycharmProjects\untitled\newFile</span></span><br><span class="line">        <span class="comment"># sourceFile = self.pypath + &quot;\\&quot; + &quot;SUMMARY.md&quot;</span></span><br><span class="line">        self.for_line(self.repSpilt(self.sour_path))</span><br><span class="line">        os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gitbook_build</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        编译gitbook</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># fname = self.pypath + +&quot;\\&quot;+&quot;SUMMARY.md&quot;</span></span><br><span class="line">        <span class="comment"># os.path.isfile(fname)</span></span><br><span class="line">        rname = self.pypath + <span class="string">&quot;\\&quot;</span> + <span class="string">&quot;README.md&quot;</span></span><br><span class="line">        print(<span class="string">&quot;rname &gt;&gt;&gt; &quot;</span>,rname)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(rname):</span><br><span class="line">            <span class="comment"># 文件存在</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(rname, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">                f2.write(<span class="string">&quot;This file is generated by py script!!!\n&quot;</span>)</span><br><span class="line">                f2.write(<span class="string">&quot;Please write the contents of the README.md&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># bookignore = self.pypath + +&quot;\\&quot;+&quot;SUMMARY.md&quot;</span></span><br><span class="line">        <span class="comment"># os.path.isfile(fname)</span></span><br><span class="line">        bookignore = self.pypath + <span class="string">&quot;\\&quot;</span> + <span class="string">&quot;.bookignore&quot;</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(bookignore):</span><br><span class="line">            <span class="comment"># 文件存在 啥也不干</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(bookignore, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">                f2.write(<span class="string">&quot;file.md&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;| building...&quot;</span>)</span><br><span class="line">        os.chdir(self.pypath)</span><br><span class="line">        os.system(<span class="string">&quot;gitbook build&quot;</span>)</span><br><span class="line">        os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replace_sum</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(self.sour_path, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f1, <span class="built_in">open</span>(self.summary_path, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> f1:</span><br><span class="line">                <span class="keyword">if</span> line == <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                    <span class="comment"># line 是空行</span></span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 判断line是不是最后一行</span></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> line[-<span class="number">1</span>] != <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                        <span class="comment"># 加上换行</span></span><br><span class="line">                        line += <span class="string">&quot;\n&quot;</span></span><br><span class="line">                    f2.write(<span class="string">&quot;- [&quot;</span>)</span><br><span class="line">                    f2.write(line[:-<span class="number">4</span>])</span><br><span class="line">                    f2.write(<span class="string">&quot;](&quot;</span>)</span><br><span class="line">                    f2.write(line[:-<span class="number">1</span>])</span><br><span class="line">                    f2.write(<span class="string">&quot;)&quot;</span>)</span><br><span class="line">                    f2.write(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| gen summary success!!!&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| total effect line:&quot;</span>,i)</span><br><span class="line">        os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">qucik_git</span>(<span class="params">self</span>):</span></span><br><span class="line"></span><br><span class="line">        os.chdir(self.pypath)</span><br><span class="line">        os.system(<span class="string">&quot;git add _book&quot;</span>)</span><br><span class="line">        os.system(<span class="string">&quot;git commit -m\&quot;Commit by gitbook tool!!!\&quot;&quot;</span>)</span><br><span class="line">        os.system(<span class="string">&quot;git push&quot;</span>)</span><br><span class="line">        os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">menu</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 获取输入</span></span><br><span class="line">        <span class="comment"># print(&quot;| =========================================&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| ================ gitbook tools ================&quot;)</span></span><br><span class="line">        print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 1：生成md&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 2: 转换SUMMARY&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 3: 编译&gt;HTML&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 4: 发布Git&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 0: exit()&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">input</span>(<span class="string">&quot;| choose operation you need：&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    yt = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">       ┌─┐       ┌─┐ + +</span></span><br><span class="line"><span class="string">    ┌──┘ ┴───────┘ ┴──┐++</span></span><br><span class="line"><span class="string">    │                 │</span></span><br><span class="line"><span class="string">    │       ───       │++ + + +</span></span><br><span class="line"><span class="string">    ███████───███████ │+</span></span><br><span class="line"><span class="string">    │                 │+</span></span><br><span class="line"><span class="string">    │       ─┴─       │</span></span><br><span class="line"><span class="string">    │                 │</span></span><br><span class="line"><span class="string">    └───┐         ┌───┘</span></span><br><span class="line"><span class="string">        │         │</span></span><br><span class="line"><span class="string">        │         │   + +</span></span><br><span class="line"><span class="string">        │         │</span></span><br><span class="line"><span class="string">        │         └──────────────┐</span></span><br><span class="line"><span class="string">        │                        │</span></span><br><span class="line"><span class="string">        │                        ├─┐</span></span><br><span class="line"><span class="string">        │                        ┌─┘</span></span><br><span class="line"><span class="string">        │                        │</span></span><br><span class="line"><span class="string">        └─┐  ┐  ┌───────┬──┐  ┌──┘  + + + +</span></span><br><span class="line"><span class="string">          │ ─┤ ─┤       │ ─┤ ─┤</span></span><br><span class="line"><span class="string">          └──┴──┘       └──┴──┘  + + + +</span></span><br><span class="line"><span class="string">                神兽保佑</span></span><br><span class="line"><span class="string">                代码无BUG!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    print(yt)</span><br><span class="line">    print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @version: 21.4.22&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @description: gitbook tools auto gen file &amp; build &amp; sync to git&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @author: victor&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @site: https://victorfengming.gitee.io/&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @introduce: https://victorfengming.gitee.io/comic/python-gitbook-tools/&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @readme: https://victorfengming.gitee.io/file/exe/gitbook-tools/readme.md&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @download: https://victorfengming.gitee.io/file/exe/gitbook-tools/gitbook-tools-21.4.22.exe&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| 注意：使用前请将exe文件放到file.md同级目录下&quot;</span>)</span><br><span class="line">    <span class="comment"># print(&quot;| ========================================&quot;)</span></span><br><span class="line">    <span class="comment"># print(os.path.isfile(&quot;E:\\Projects\\PycharmProjects\\untitled\\newFiletest\\12.md&quot;))</span></span><br><span class="line">    gt = GitbookTool()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        cho = gt.menu()</span><br><span class="line">        <span class="keyword">if</span> cho == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">            print(<span class="number">1</span>)</span><br><span class="line">            gt.gen_md()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">            print(<span class="number">2</span>)</span><br><span class="line">            gt.replace_sum()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;3&quot;</span>:</span><br><span class="line">            print(<span class="number">3</span>)</span><br><span class="line">            gt.gitbook_build()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;4&quot;</span>:</span><br><span class="line">            print(<span class="number">4</span>)</span><br><span class="line">            gt.qucik_git()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;0&quot;</span>:</span><br><span class="line">            <span class="comment"># print(&quot;| bye~&quot;)</span></span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="图形Tk版本"><a href="#图形Tk版本" class="headerlink" title="图形Tk版本"></a>图形Tk版本</h3><h4 id="main-py"><a href="#main-py" class="headerlink" title="main.py"></a>main.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> filedialog, messagebox</span><br><span class="line"><span class="keyword">from</span> gitbook_tools <span class="keyword">import</span> GitbookTool</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">| --------------------------- gitbook tools ---------------------------</span></span><br><span class="line"><span class="string">| @version: 21.4.23</span></span><br><span class="line"><span class="string">| @description: gitbook tools auto gen file &amp; build &amp; sync to git</span></span><br><span class="line"><span class="string">| @author: victor</span></span><br><span class="line"><span class="string">| @site: https://victorfengming.gitee.io/</span></span><br><span class="line"><span class="string">| @introduce: https://victorfengming.gitee.io/comic/python-gitbook-tools/</span></span><br><span class="line"><span class="string">| @readme: https://victorfengming.gitee.io/file/exe/gitbook-tools/readme.md</span></span><br><span class="line"><span class="string">| @download: https://victorfengming.gitee.io/file/exe/gitbook-tools/gitbook-tools-21.4.23.exe</span></span><br><span class="line"><span class="string">| --------------------------- gitbook tools ---------------------------</span></span><br><span class="line"><span class="string">| TODO : </span></span><br><span class="line"><span class="string">|     1. 递归扫描md文件,根据相对路径 生成`SUMMARY.md`</span></span><br><span class="line"><span class="string">|     2. cmd 日志 放入 tk页面 </span></span><br><span class="line"><span class="string">|     5. gitee pages auto update by chrome tools </span></span><br><span class="line"><span class="string">| --------------------------- gitbook tools ---------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tk_gui</span>():</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, gt</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        初始化魔术方法</span></span><br><span class="line"><span class="string">        用于设置界面的初始状态</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 创建tkinter窗口</span></span><br><span class="line">        self.root = Tk()</span><br><span class="line">        <span class="comment"># 设置窗口的标题</span></span><br><span class="line">        self.root.title(<span class="string">&#x27;Gitbook Tools&#x27;</span>)</span><br><span class="line">        <span class="comment"># 设置窗口的长和宽,最大值和最小值设置相同,用户不可调整窗口大小</span></span><br><span class="line">        self.root.minsize(<span class="number">90</span>, <span class="number">180</span>)</span><br><span class="line">        self.root.maxsize(<span class="number">780</span>, <span class="number">180</span>)</span><br><span class="line">        self.gt = gt</span><br><span class="line">        self.root_path = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 初始化</span></span><br><span class="line">        <span class="comment"># 初始化主要url</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 调用主要逻辑执行函数</span></span><br><span class="line">        self.main_logic()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main_logic</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        主业务逻辑</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 顶部信息栏</span></span><br><span class="line">        topp = Frame()</span><br><span class="line">        topp.grid(row=<span class="number">0</span>, column=<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 内容栏</span></span><br><span class="line">        self.cont = Frame()</span><br><span class="line">        self.cont.grid(row=<span class="number">1</span>, column=<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 输入选项操作</span></span><br><span class="line">        self.indo = Frame()</span><br><span class="line">        self.indo.grid(row=<span class="number">0</span>, column=<span class="number">1</span>, rowspan=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 状态栏</span></span><br><span class="line">        self.stat = Frame()</span><br><span class="line">        self.stat.grid(row=<span class="number">2</span>, column=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># self.get_path()</span></span><br><span class="line">        self.put_button()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 加入主消息循环</span></span><br><span class="line">        self.root.mainloop()</span><br><span class="line">        <span class="comment"># #</span></span><br><span class="line">        <span class="comment"># self.myStdout()  # 实例化重定向类</span></span><br><span class="line">        <span class="comment"># self.restoreStd()  # 恢复标准输出</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put_button</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        用于绘制顶部菜单</span></span><br><span class="line"><span class="string">        :param topp:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 菜单栏</span></span><br><span class="line">        <span class="comment"># print(&quot;| 1：生成md&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| 2: 转换SUMMARY&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| 3: 编译&gt;HTML&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| 4: 发布Git&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| 0: exit()&quot;)</span></span><br><span class="line">        self.gen_button(<span class="string">&quot;设置工作路径&quot;</span>, self.get_path).grid(row=<span class="number">0</span>, column=<span class="number">0</span>)</span><br><span class="line">        self.gen_button(<span class="string">&quot;生成md&quot;</span>, <span class="keyword">lambda</span>: self.button_run_before(gt.gen_md)()).grid(row=<span class="number">1</span>, column=<span class="number">0</span>)</span><br><span class="line">        self.gen_button(<span class="string">&quot;转换SUMMARY&quot;</span>, <span class="keyword">lambda</span>: self.button_run_before(gt.replace_sum)()).grid(row=<span class="number">2</span>, column=<span class="number">0</span>)</span><br><span class="line">        self.gen_button(<span class="string">&quot;编译&gt;HTML&quot;</span>, <span class="keyword">lambda</span>: self.button_run_before(gt.gitbook_build)()).grid(row=<span class="number">3</span>, column=<span class="number">0</span>)</span><br><span class="line">        self.gen_button(<span class="string">&quot;发布Git&quot;</span>, <span class="keyword">lambda</span>: self.button_run_before(gt.qucik_git)()).grid(row=<span class="number">4</span>, column=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_button</span>(<span class="params">self, text, method</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        生成 button</span></span><br><span class="line"><span class="string">        :param text:</span></span><br><span class="line"><span class="string">        :param method:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> Button(self.cont, text=text, command=method, width=<span class="number">22</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_path</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.root_path = filedialog.askdirectory()</span><br><span class="line">        print(<span class="string">&quot;getpath&gt;&gt;&gt;&quot;</span>,self.root_path)</span><br><span class="line">        <span class="comment"># 将路径 从 图形类 传入 工具类</span></span><br><span class="line">        self.gt.pypath = self.root_path</span><br><span class="line"></span><br><span class="line">    <span class="comment"># cmd 消息 放入 tk页面 （dev）</span></span><br><span class="line">    <span class="comment"># def myStdout(self):  # 重定向类</span></span><br><span class="line">    <span class="comment">#     # 将其备份</span></span><br><span class="line">    <span class="comment">#     self.stdoutbak = sys.stdout</span></span><br><span class="line">    <span class="comment">#     self.stderrbak = sys.stderr</span></span><br><span class="line">    <span class="comment">#     # 重定向</span></span><br><span class="line">    <span class="comment">#     sys.stdout = self</span></span><br><span class="line">    <span class="comment">#     sys.stderr = self</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># def write(self, info):</span></span><br><span class="line">    <span class="comment">#     t = Text(self.cont)  # 创建多行文本控件</span></span><br><span class="line">    <span class="comment">#     t.pack()  # 布局在窗体上</span></span><br><span class="line">    <span class="comment">#     # info信息即标准输出sys.stdout和sys.stderr接收到的输出信息</span></span><br><span class="line">    <span class="comment">#     t.insert(&#x27;end&#x27;, info)  # 在多行文本控件最后一行插入print信息</span></span><br><span class="line">    <span class="comment">#     t.update()  # 更新显示的文本，不加这句插入的信息无法显示</span></span><br><span class="line">    <span class="comment">#     t.see(END)  # 始终显示最后一行，不加这句，当文本溢出控件最后一行时，不会自动显示最后一行</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># def restoreStd(self):</span></span><br><span class="line">    <span class="comment">#     # 恢复标准输出</span></span><br><span class="line">    <span class="comment">#     sys.stdout = self.stdoutbak</span></span><br><span class="line">    <span class="comment">#     sys.stderr = self.stderrbak</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">button_run_before</span>(<span class="params">self,func</span>):</span></span><br><span class="line">        <span class="comment"># 判断</span></span><br><span class="line">        <span class="comment"># if func != self.get_path and self.root_path == &quot;&quot;:</span></span><br><span class="line">        <span class="keyword">if</span> self.root_path == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            messagebox.showinfo(<span class="string">&#x27;错误&#x27;</span>,<span class="string">&#x27;请先设置工作路径&#x27;</span>)</span><br><span class="line">            self.get_path()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> func</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(&quot;| ========================================&quot;)</span></span><br><span class="line"><span class="comment"># print(os.path.isfile(&quot;E:\\Projects\\PycharmProjects\\untitled\\newFiletest\\12.md&quot;))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># gt = GitbookTool(input(&quot;please input the root path(windows split symbol is \\)\n:&quot;))</span></span><br><span class="line"></span><br><span class="line">gt = GitbookTool()</span><br><span class="line"></span><br><span class="line">t = Tk_gui(gt)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="gitbook-tools-py"><a href="#gitbook-tools-py" class="headerlink" title="gitbook_tools.py"></a>gitbook_tools.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#!/usr/bin/env python</span></span><br><span class="line"><span class="string"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="string"># Created by victor</span></span><br><span class="line"><span class="string"># Created Time: &#x27;2021/4/17 0:42&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">version: 21.4.18</span></span><br><span class="line"><span class="string">TODO :         gitee pages auto sync!!!</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># import sys</span></span><br><span class="line"><span class="comment"># import re</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># dir 是全路径</span></span><br><span class="line"><span class="comment"># 比如: E:\Projects\PycharmProjects\untitled\test\database\redis\2019-09-25-deepin-install-redis.md</span></span><br><span class="line"><span class="comment"># :param dir:</span></span><br><span class="line"><span class="comment"># :return:</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GitbookTool</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.sum_file_name = <span class="string">&quot;file.md&quot;</span></span><br><span class="line">        self.summary_file_name = <span class="string">&quot;SUMMARY.md&quot;</span></span><br><span class="line">        self.readme_name = <span class="string">&quot;README.md&quot;</span></span><br><span class="line">        <span class="comment"># 当前脚本目录</span></span><br><span class="line">        <span class="comment"># self.pypath = sys.path[0]</span></span><br><span class="line">        <span class="comment"># self.pypath = os.getcwd()</span></span><br><span class="line">        <span class="comment"># self.pypath = input(&quot;please input the root path(windows split symbol is \\)\n:&quot;)</span></span><br><span class="line">        self.pypath = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="comment"># self.root_path = self.pypath</span></span><br><span class="line">        <span class="comment"># sour_path source 源 路径</span></span><br><span class="line">        self.sour_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.sum_file_name</span><br><span class="line">        <span class="comment"># SUMMARY.md 路径</span></span><br><span class="line">        self.summary_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.summary_file_name</span><br><span class="line">        print(<span class="string">&quot;| self.pypath &gt;&gt;&gt; &quot;</span>,self.pypath)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">repSpilt</span>(<span class="params">self, path</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        替换路径分隔符</span></span><br><span class="line"><span class="string">        :param path:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> path.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;\\\\&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">newFile</span>(<span class="params">self, line, dirname</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        创建文件</span></span><br><span class="line"><span class="string">        :param line:</span></span><br><span class="line"><span class="string">        :param dirname:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        print(<span class="string">&quot;| gen file &gt;&gt;&gt;&quot;</span>)</span><br><span class="line">        <span class="comment"># 新建文件的文件名,最后的\n去掉</span></span><br><span class="line">        newName = dirname + <span class="string">&quot;\\&quot;</span> + line[:-<span class="number">1</span>]</span><br><span class="line">        print(<span class="string">&quot;| \t&quot;</span>, line[:-<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(newName, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">            f2.write(<span class="string">&quot;# &quot;</span> + line[:-<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">for_line</span>(<span class="params">self, file</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        读取 sm文件,并遍历行</span></span><br><span class="line"><span class="string">        :param file:</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 获取目录</span></span><br><span class="line">        dirname = os.path.dirname(file)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> f1:</span><br><span class="line">                <span class="keyword">if</span> line == <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                    <span class="comment"># line 是空行</span></span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 判断line是不是最后一行</span></span><br><span class="line">                    <span class="keyword">if</span> line[-<span class="number">1</span>] != <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                        <span class="comment"># 加上换行</span></span><br><span class="line">                        line += <span class="string">&quot;\n&quot;</span></span><br><span class="line"></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                    self.newFile(line, dirname)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;| gen &quot;</span>, i, <span class="string">&quot;file success!!!&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| path:&quot;</span>, dirname)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_md</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        生成md文件</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 获取输入</span></span><br><span class="line">        print(<span class="string">&quot;| -----------------------------------------------------&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| md文件生成器&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 通过读取file.md文件中的行数来创建文件&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 生成的文件会和源文件同目录&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 注意:原有文件会被替换&quot;</span>)</span><br><span class="line">        <span class="comment"># print(&quot;| 请输入源目录文件路径,window用 \ 来分隔文件夹&quot;)</span></span><br><span class="line">        <span class="comment"># sourceFile = input(&quot;:&quot;)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># E:\Projects\PycharmProjects\untitled\newFile</span></span><br><span class="line">        <span class="comment"># sourceFile = self.pypath + &quot;\\&quot; + &quot;SUMMARY.md&quot;</span></span><br><span class="line">        sour_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.sum_file_name</span><br><span class="line">        self.for_line(self.repSpilt(sour_path))</span><br><span class="line">        <span class="comment"># os.system(&#x27;pause&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gitbook_build</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        编译gitbook</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># fname = self.pypath + +&quot;\\&quot;+&quot;SUMMARY.md&quot;</span></span><br><span class="line">        <span class="comment"># os.path.isfile(fname)</span></span><br><span class="line">        rname = self.pypath + <span class="string">&quot;\\&quot;</span> + self.readme_name</span><br><span class="line">        print(<span class="string">&quot;rname &gt;&gt;&gt; &quot;</span>,rname)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(rname):</span><br><span class="line">            <span class="comment"># 文件存在</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(rname, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">                f2.write(<span class="string">&quot;This file is generated by py script!!!\n&quot;</span>)</span><br><span class="line">                f2.write(<span class="string">&quot;Please write the contents of the README.md&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># bookignore = self.pypath + +&quot;\\&quot;+&quot;SUMMARY.md&quot;</span></span><br><span class="line">        <span class="comment"># os.path.isfile(fname)</span></span><br><span class="line">        bookignore = self.pypath + <span class="string">&quot;\\&quot;</span> + <span class="string">&quot;.bookignore&quot;</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(bookignore):</span><br><span class="line">            <span class="comment"># 文件存在 啥也不干</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(bookignore, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">                f2.write(<span class="string">&quot;file.md\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;| building...&quot;</span>)</span><br><span class="line">        os.chdir(self.pypath)</span><br><span class="line">        os.system(<span class="string">&quot;gitbook build&quot;</span>)</span><br><span class="line">        <span class="comment"># os.system(&#x27;pause&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replace_sum</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># SUMMARY.md 路径</span></span><br><span class="line">        <span class="comment"># 更新路径</span></span><br><span class="line">        summary_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.summary_file_name</span><br><span class="line">        sour_path = self.pypath + <span class="string">&quot;\\&quot;</span> + self.sum_file_name</span><br><span class="line"></span><br><span class="line">        <span class="comment"># summary_path = self.pypath + &quot;\\&quot; + &quot;SUMMARY.md&quot;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(sour_path, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f1, <span class="built_in">open</span>(summary_path, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f2:</span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> f1:</span><br><span class="line">                <span class="keyword">if</span> line == <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                    <span class="comment"># line 是空行</span></span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 判断line是不是最后一行</span></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> line[-<span class="number">1</span>] != <span class="string">&quot;\n&quot;</span>:</span><br><span class="line">                        <span class="comment"># 加上换行</span></span><br><span class="line">                        line += <span class="string">&quot;\n&quot;</span></span><br><span class="line">                    f2.write(<span class="string">&quot;- [&quot;</span>)</span><br><span class="line">                    f2.write(line[:-<span class="number">4</span>])</span><br><span class="line">                    f2.write(<span class="string">&quot;](&quot;</span>)</span><br><span class="line">                    f2.write(line[:-<span class="number">1</span>])</span><br><span class="line">                    f2.write(<span class="string">&quot;)&quot;</span>)</span><br><span class="line">                    f2.write(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| gen summary success!!!&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| total effect line:&quot;</span>,i)</span><br><span class="line">        <span class="comment"># os.system(&#x27;pause&#x27;)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">qucik_git</span>(<span class="params">self</span>):</span></span><br><span class="line"></span><br><span class="line">        os.chdir(self.pypath)</span><br><span class="line">        os.system(<span class="string">&quot;git add _book&quot;</span>)</span><br><span class="line">        os.system(<span class="string">&quot;git commit -m\&quot;Commit by gitbook tool!!!\&quot;&quot;</span>)</span><br><span class="line">        os.system(<span class="string">&quot;git push&quot;</span>)</span><br><span class="line">        <span class="comment"># os.system(&#x27;pause&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">menu</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 获取输入</span></span><br><span class="line">        <span class="comment"># print(&quot;| =========================================&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;| ================ gitbook tools ================&quot;)</span></span><br><span class="line">        print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 1：生成md&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 2: 转换SUMMARY&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 3: 编译&gt;HTML&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 4: 发布Git&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| 0: exit()&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">input</span>(<span class="string">&quot;| choose operation you need：&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    yt = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">       ┌─┐       ┌─┐ + +</span></span><br><span class="line"><span class="string">    ┌──┘ ┴───────┘ ┴──┐++</span></span><br><span class="line"><span class="string">    │                 │</span></span><br><span class="line"><span class="string">    │       ───       │++ + + +</span></span><br><span class="line"><span class="string">    ███████───███████ │+</span></span><br><span class="line"><span class="string">    │                 │+</span></span><br><span class="line"><span class="string">    │       ─┴─       │</span></span><br><span class="line"><span class="string">    │                 │</span></span><br><span class="line"><span class="string">    └───┐         ┌───┘</span></span><br><span class="line"><span class="string">        │         │</span></span><br><span class="line"><span class="string">        │         │   + +</span></span><br><span class="line"><span class="string">        │         │</span></span><br><span class="line"><span class="string">        │         └──────────────┐</span></span><br><span class="line"><span class="string">        │                        │</span></span><br><span class="line"><span class="string">        │                        ├─┐</span></span><br><span class="line"><span class="string">        │                        ┌─┘</span></span><br><span class="line"><span class="string">        │                        │</span></span><br><span class="line"><span class="string">        └─┐  ┐  ┌───────┬──┐  ┌──┘  + + + +</span></span><br><span class="line"><span class="string">          │ ─┤ ─┤       │ ─┤ ─┤</span></span><br><span class="line"><span class="string">          └──┴──┘       └──┴──┘  + + + +</span></span><br><span class="line"><span class="string">                神兽保佑</span></span><br><span class="line"><span class="string">                代码无BUG!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    print(yt)</span><br><span class="line">    print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @version: 21.4.23&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @description: gitbook tools auto gen file &amp; build &amp; sync to git&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @author: victor&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @site: https://victorfengming.gitee.io/&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @introduce: https://victorfengming.gitee.io/comic/python-gitbook-tools/&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @readme: https://victorfengming.gitee.io/file/exe/gitbook-tools/readme.md&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| @download: https://victorfengming.gitee.io/file/exe/gitbook-tools/gitbook-tools-21.4.23.exe&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;| --------------------------- gitbook tools ---------------------------&quot;</span>)</span><br><span class="line">    <span class="comment"># print(&quot;| 注意：使用前请将exe文件放到file.md同级目录下&quot;)</span></span><br><span class="line">    <span class="comment"># print(&quot;| ========================================&quot;)</span></span><br><span class="line">    <span class="comment"># print(os.path.isfile(&quot;E:\\Projects\\PycharmProjects\\untitled\\newFiletest\\12.md&quot;))</span></span><br><span class="line">    gt = GitbookTool(<span class="built_in">input</span>(<span class="string">&quot;please input the root path(windows split symbol is \\)\n:&quot;</span>))</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        cho = gt.menu()</span><br><span class="line">        <span class="keyword">if</span> cho == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">            print(<span class="number">1</span>)</span><br><span class="line">            gt.gen_md()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">            print(<span class="number">2</span>)</span><br><span class="line">            gt.replace_sum()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;3&quot;</span>:</span><br><span class="line">            print(<span class="number">3</span>)</span><br><span class="line">            gt.gitbook_build()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;4&quot;</span>:</span><br><span class="line">            print(<span class="number">4</span>)</span><br><span class="line">            gt.qucik_git()</span><br><span class="line">        <span class="keyword">elif</span> cho == <span class="string">&quot;0&quot;</span>:</span><br><span class="line">            <span class="comment"># print(&quot;| bye~&quot;)</span></span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;本工具是通过&lt;code&gt;Python&lt;/code&gt;脚本实现 &lt;code&gt;GitBook&lt;/code&gt; 自动 生成 执行 编译</summary>
      
    
    
    
    
    <category term="gitbook" scheme="http://victorfengming.gitee.io/tags/gitbook/"/>
    
    <category term="Python" scheme="http://victorfengming.gitee.io/tags/Python/"/>
    
    <category term="node" scheme="http://victorfengming.gitee.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的索引与优化</title>
    <link href="http://victorfengming.gitee.io/database/mysql/index-optimize/"/>
    <id>http://victorfengming.gitee.io/database/mysql/index-optimize/</id>
    <published>2021-04-14T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.066Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面:"></a>写在前面:</h2><h3 id="TO-KNOW"><a href="#TO-KNOW" class="headerlink" title="TO KNOW"></a>TO KNOW</h3><ul><li>MySQL索引定义</li><li>MySQL索引结构</li><li>MySQL索引优势</li></ul><p>写在前面:索引对查询的速度有着至关重要的影响,理解索引也是进行数据库性能调优的起点.考虑如下情况,假设数据库中一个表有10^6条记录,DBMS的页面大小为4K,并存储100条记录.如果没有索引,查询将对整个表进行扫描,最坏的情况下,如果所有数据页,需要读取10^4个页面,如果这10^4个页面在磁盘上下随机分布,需要需要进行10^4次I/O,假设磁盘每次I/O时间为10ms(忽略数据传输时间),则总共需要100s(但实际上要好很多很多).如果对之建立B-Tree索引,则只需要进行log100(10^6)=3次页面读取,最坏情况下耗时30ms.这就是索引带来的效果,很多时候,当你的应用程序进行SQL查询速度很慢时,应该想想是否可以建索引.进入正题:</p><h2 id="索引与优化"><a href="#索引与优化" class="headerlink" title="索引与优化"></a>索引与优化</h2><h3 id="1-选择索引的数据类型"><a href="#1-选择索引的数据类型" class="headerlink" title="1. 选择索引的数据类型"></a>1. 选择索引的数据类型</h3><p>MySQL支持很多数据类型,选择合适的数据类型存储数据对性能有很大影响.</p><p>通常来说,可以遵循以下一些指导原则:</p><ul><li><strong>越小的数据类型通常更好</strong>:越小的数据类型通常在磁盘,内存和CPU缓存中都需要更少的空间,处理起来更快.</li><li><strong>简单的数据类型更好</strong>:整形数据比起字符,处理开销更小,因为字符串的比较更复杂. 在MySQL中,应该用内置的日期和时间数据类型,而不是用字符串来存储时间;以及用整型数据类型存储IP地址.</li><li>**尽量避免NULL:**应该指定列为NOT NULL,除非你想存储NULL.在MySQL中,含有空值的列很难进行查询优化,因为他们使得索引,索引的统计信息以及比较运算更加复杂.你应该用0,一个特除的值或者一个空串代替空值.</li></ul><h4 id="选择标识符"><a href="#选择标识符" class="headerlink" title="选择标识符"></a>选择标识符</h4><p>选择合适的标识符是非常重要的.选择时不仅应该考虑存储类型,而且应该考虑MySQL是怎样进行运算和比较的.一旦选定数据类型,应该保证所有相关的表都使用相同的数据类型.</p><ul><li>整型: 通常是作为标识符的最好选择,因为可以更快的处理,而且可以设置为AUTO_INCREMENT.</li><li>字符串: 尽量避免使用字符串作为标识符,它们消耗更好的空间,处理起来也较慢.而且,通常来说,字符串都是随机的,所以他们在索引中的位置也是随机的,这会导致页面分裂,随机访问磁盘,聚簇索引分裂(对于使用聚簇索引的存储引擎).</li></ul><h3 id="2-索引的入口"><a href="#2-索引的入口" class="headerlink" title="2. 索引的入口"></a>2. 索引的入口</h3><p>对于任何<a href="https://blog.csdn.net/gengkui9897/article/details/89294936">DBMS</a>,索引都是进行优化的最主要的因素.对于少量的数据,没有合适的索引影响不是很大,但是,当随着数据量的增加,性能会急剧下降.</p><p>如果对多列进行索引(组合索引),列的顺序非常重要,MySQL仅能对索引最左边的前缀进行有效的查找.例如:</p><p>假设存在组合索引it1c1c2(c1,c2)，查询语句select * from t1 where c1=1 and c2=2能够使用该索引。查询语句select * from t1 where c1=1也能够使用该索引。但是，查询语句select * from t1 where c2=2不能够使用该索引，因为没有组合索引的引导列，即，要想使用c2列进行查找，必需出现c1等于某值。</p><h4 id="索引的类型"><a href="#索引的类型" class="headerlink" title="索引的类型"></a>索引的类型</h4><p>索引是在存储引擎中实现的,而不是在服务器层中实现的.所以,每种存储引擎的索引类型都不一定完全相同,并不是所有的存储引擎都支持所有的索引类型.</p><h5 id="B-Tree-索引"><a href="#B-Tree-索引" class="headerlink" title="B-Tree 索引"></a>B-Tree 索引</h5><p><a href="https://victorfengming.gitee.io/data_algorithm/135_%E6%A0%91_%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91_AVL%E6%A0%91_%E4%BB%8B%E7%BB%8D.html">B-Tree(balance Tree)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面:&quot;&gt;&lt;/a&gt;写在前面:&lt;/h2&gt;&lt;h3 id=&quot;TO-KNOW&quot;&gt;&lt;a href=&quot;#TO-KNOW&quot; class=&quot;headerlink&quot; title=&quot;T</summary>
      
    
    
    
    
    <category term="database" scheme="http://victorfengming.gitee.io/tags/database/"/>
    
    <category term="mysql" scheme="http://victorfengming.gitee.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Java遍历对象所有属性</title>
    <link href="http://victorfengming.gitee.io/cp/java/for-props/"/>
    <id>http://victorfengming.gitee.io/cp/java/for-props/</id>
    <published>2021-04-13T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.061Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote><p>要获取对象的所有属性可以使用<code>getDeclaredFields()</code></p><p>方法会返回一个<code>Field</code>数组</p></blockquote><p>遍历这个数组几个遍历所有属性</p><blockquote><p>注意: 使用这个方法会抛出4个异常</p><p>然后,根据属性的类型选择执行对应的内容</p></blockquote><h2 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">eachProperties</span><span class="params">(Object model)</span> <span class="keyword">throws</span> NoSuchMethodException, IllegalAccessException, IllegalArgumentException, InvocationTargetException</span>&#123;</span><br><span class="line">    Field[] field = model.getClass().getDeclaredFields(); <span class="comment">//获取实体类的所有属性，返回Field数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span> ; j&lt;field.length ; j++)&#123; <span class="comment">//遍历所有属性</span></span><br><span class="line">        String name = field[j].getName(); <span class="comment">//获取属性的名字</span></span><br><span class="line"> </span><br><span class="line">        System.out.println(<span class="string">&quot;attribute name:&quot;</span>+name);</span><br><span class="line">        name = name.substring(<span class="number">0</span>,<span class="number">1</span>).toUpperCase()+name.substring(<span class="number">1</span>); <span class="comment">//将属性的首字符大写，方便构造get，set方法</span></span><br><span class="line">        String type = field[j].getGenericType().toString(); <span class="comment">//获取属性的类型</span></span><br><span class="line">        <span class="keyword">if</span>(type.equals(<span class="string">&quot;class java.lang.String&quot;</span>))&#123; <span class="comment">//如果type是类类型，则前面包含&quot;class &quot;，后面跟类名</span></span><br><span class="line">          ...</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(type.equals(<span class="string">&quot;class java.lang.Integer&quot;</span>))&#123;</span><br><span class="line">          ...</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(type.equals(<span class="string">&quot;class java.lang.Short&quot;</span>))&#123;</span><br><span class="line">          ...</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(type.equals(<span class="string">&quot;class java.lang.Double&quot;</span>))&#123;</span><br><span class="line">          ...</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(type.equals(<span class="string">&quot;class java.lang.Boolean&quot;</span>))&#123;</span><br><span class="line">          ...</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(type.equals(<span class="string">&quot;class java.util.Date&quot;</span>))&#123;</span><br><span class="line">          ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>具体执行的内容就是重点了</p></blockquote><p>我们知道模型的属性都会有对应的<code>getter</code>和<code>setter</code>方法</p><p>只需要得到对应的<code>getter</code>和<code>setter</code>方法即可获取和设置属性</p><blockquote><p>这里就需要用到getMethod方法</p></blockquote><h2 id="获得getter方法"><a href="#获得getter方法" class="headerlink" title="获得getter方法"></a>获得getter方法</h2><blockquote><p>方法有分带参数和不带参数,我们知道getter方法是不带参数的</p></blockquote><p>获得getter方法如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Method m = model.getClass().getMethod(<span class="string">&quot;get&quot;</span>+name);</span><br></pre></td></tr></table></figure><h2 id="获得setter方法"><a href="#获得setter方法" class="headerlink" title="获得setter方法"></a>获得setter方法</h2><blockquote><p>如果是带参数的setter方法,就应该把参数的类型做封装成一个Class&lt;?&gt;泛型数组传入getMethod方法的第二个参数</p></blockquote><p>例如参数是String类型的setter方法如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Method m = model.getClass().getMethod(<span class="string">&quot;set&quot;</span>+name, <span class="keyword">new</span> Class[] &#123;String.class&#125;);</span><br></pre></td></tr></table></figure><h2 id="执行getter方法"><a href="#执行getter方法" class="headerlink" title="执行getter方法"></a>执行getter方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String value = (String) m.invoke(model);</span><br></pre></td></tr></table></figure><h2 id="执行setter方法"><a href="#执行setter方法" class="headerlink" title="执行setter方法"></a>执行setter方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m.invoke(model,<span class="keyword">new</span> Object[] &#123;<span class="keyword">new</span> String(<span class="string">&quot;new value&quot;</span>)&#125;);</span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>参考: from: <a href="http://zhenhappy.github.io/2015/10/26/Java/Java-Each-Properties/">http://zhenhappy.github.io/2015/10/26/Java/Java-Each-Properties/</a></p><p>转载于:<a href="https://www.cnblogs.com/GarfieldEr007/p/7056817.html">https://www.cnblogs.com/GarfieldEr007/p/7056817.html</a></p><p>原文: <a href="https://blog.csdn.net/weixin_30588675/article/details/97631029">https://blog.csdn.net/weixin_30588675/article/details/97631029</a></p><h2 id="java-获取类和父类的属性和方法"><a href="#java-获取类和父类的属性和方法" class="headerlink" title="java 获取类和父类的属性和方法"></a>java 获取类和父类的属性和方法</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在日常开发中，经常需要获取当前类和父类的所有属性，没办法只能查API了。</p><h3 id="getDeclaredFields-VS-getFields"><a href="#getDeclaredFields-VS-getFields" class="headerlink" title="getDeclaredFields VS getFields"></a>getDeclaredFields VS getFields</h3><p>查阅API得知，class.getDeclaredFields()能获取所有属性（public、protected、default、private），但不包括父类属性，相对的class.getFields() 获取类的属性（public），包括父类；</p><p>显然以上二者都不能满足需求，这么常见的需求，肯定有开源包实现了，功夫不负有心人果然查到了。apache commons包下的FieldUtils.getAllFields()可以获取类和父类的所有(public、protected、default、private)属性。</p><p>为了加深理解，看一下源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Field[] getAllFields(<span class="keyword">final</span> Class&lt;?&gt; cls) &#123;</span><br><span class="line">       <span class="keyword">final</span> List&lt;Field&gt; allFieldsList = getAllFieldsList(cls);</span><br><span class="line">       <span class="keyword">return</span> allFieldsList.toArray(<span class="keyword">new</span> Field[allFieldsList.size()]);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Field&gt; <span class="title">getAllFieldsList</span><span class="params">(<span class="keyword">final</span> Class&lt;?&gt; cls)</span> </span>&#123;</span><br><span class="line">       Validate.isTrue(cls != <span class="keyword">null</span>, <span class="string">&quot;The class must not be null&quot;</span>);</span><br><span class="line">       <span class="keyword">final</span> List&lt;Field&gt; allFields = <span class="keyword">new</span> ArrayList&lt;Field&gt;();</span><br><span class="line">       Class&lt;?&gt; currentClass = cls;</span><br><span class="line">       <span class="keyword">while</span> (currentClass != <span class="keyword">null</span>) &#123;</span><br><span class="line">           <span class="keyword">final</span> Field[] declaredFields = currentClass.getDeclaredFields();</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">final</span> Field field : declaredFields) &#123;</span><br><span class="line">               allFields.add(field);</span><br><span class="line">           &#125;</span><br><span class="line">           currentClass = currentClass.getSuperclass();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> allFields;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>通过class.getDeclaredFields()获取所有的属性，然后再获取类的父类，再获取所有属性，直到父类为null截止；</p><h3 id="获取类和父类的方法"><a href="#获取类和父类的方法" class="headerlink" title="获取类和父类的方法"></a>获取类和父类的方法</h3><p>类似的，API中也有getDeclaredMethods()和getMethods()</p><p>class.getDeclaredMethods() 获取类的所有方法（public、protected、default、private），但不包括继承的方法；</p><p>class.getMethods() 获取当前类和父类的public方法。</p><p>apache commons包提供了MethodUtils.getMethodsWithAnnotation(class,annotation),获取类及父类的注解为annotation的public方法；</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>获取类的所有属性（public、protected、default、private），包括父类的属性，则使用FieldUtils.getAllFields()</li><li>获取类标注某个注解的方法（包括类及父类），使用MethodUtils.getMethodsWithAnnotation(class,annotation)</li></ul><p>原文: <a href="https://blog.csdn.net/wangjun5159/article/details/79289244/">https://blog.csdn.net/wangjun5159/article/details/79289244/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;要获取对象的所有属性可以使用&lt;code&gt;getDeclaredFields()&lt;/code&gt;&lt;/p</summary>
      
    
    
    
    
    <category term="base" scheme="http://victorfengming.gitee.io/tags/base/"/>
    
    <category term="java" scheme="http://victorfengming.gitee.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>jFinal配置自动生成</title>
    <link href="http://victorfengming.gitee.io/java/jfinal/collected/"/>
    <id>http://victorfengming.gitee.io/java/jfinal/collected/</id>
    <published>2021-04-09T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.103Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Jfinal配置自动生成model"><a href="#Jfinal配置自动生成model" class="headerlink" title="Jfinal配置自动生成model"></a>Jfinal配置自动生成model</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.demo.common.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jfinal.kit.PathKit;</span><br><span class="line"><span class="keyword">import</span> com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect;</span><br><span class="line"><span class="keyword">import</span> com.jfinal.plugin.activerecord.generator.Generator;</span><br><span class="line"><span class="keyword">import</span> com.jfinal.plugin.druid.DruidPlugin;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本 demo 仅表达最为粗浅的 jfinal 用法，更为有价值的实用的企业级用法 详见 JFinal 俱乐部:</span></span><br><span class="line"><span class="comment"> * http://jfinal.com/club</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 在数据库表有任何变动时，运行一下 main 方法，极速响应变化进行代码重构</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_JFinalDemoGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidPlugin druidPlugin = <span class="keyword">new</span> DruidPlugin(</span><br><span class="line">                <span class="string">&quot;jdbc:postgresql://localhost:5444/console1?currentSchema=console1&quot;</span>, <span class="string">&quot;username&quot;</span>, <span class="string">&quot;password&quot;</span>);</span><br><span class="line">        druidPlugin.start();</span><br><span class="line">        <span class="keyword">return</span> druidPlugin.getDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// base model 所使用的包名</span></span><br><span class="line">        String baseModelPackageName = <span class="string">&quot;com.model.base&quot;</span>;</span><br><span class="line">        <span class="comment">// base model 文件保存路径</span></span><br><span class="line">        String baseModelOutputDir = PathKit.getWebRootPath()</span><br><span class="line">                + <span class="string">&quot;/src/main/java/com/model/base&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// model 所使用的包名 (MappingKit 默认使用的包名)</span></span><br><span class="line">        String modelPackageName = <span class="string">&quot;com.model&quot;</span>;</span><br><span class="line">        <span class="comment">// model 文件保存路径 (MappingKit 与 DataDictionary 文件默认保存路径)</span></span><br><span class="line">        String modelOutputDir = baseModelOutputDir + <span class="string">&quot;/..&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建生成器</span></span><br><span class="line">        Generator generator = <span class="keyword">new</span> Generator(getDataSource(), baseModelPackageName, baseModelOutputDir, modelPackageName,</span><br><span class="line">                modelOutputDir);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置是否生成备注</span></span><br><span class="line">        generator.setGenerateRemarks(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置数据库方言</span></span><br><span class="line">        generator.setDialect(<span class="keyword">new</span> PostgreSqlDialect());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置是否生成链式 setter 方法</span></span><br><span class="line">        generator.setGenerateChainSetter(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加不需要生成的表名</span></span><br><span class="line">        generator.addExcludedTable(<span class="string">&quot;adv&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置是否在 Model 中生成 dao 对象</span></span><br><span class="line">        generator.setGenerateDaoInModel(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置是否生成字典文件</span></span><br><span class="line">        generator.setGenerateDataDictionary(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置需要被移除的表名前缀用于生成modelName。例如表名 &quot;osc_user&quot;，移除前缀 &quot;osc_&quot;后生成的model名为</span></span><br><span class="line">        <span class="comment">// &quot;User&quot;而非 OscUser</span></span><br><span class="line">        generator.setMetaBuilder(<span class="keyword">new</span> SelfMetaBuilder(getDataSource()));</span><br><span class="line"></span><br><span class="line">        generator.setGenerateChainSetter(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 生成</span></span><br><span class="line">        generator.generate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.demo.common.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jfinal.plugin.activerecord.generator.MetaBuilder;</span><br><span class="line"><span class="keyword">import</span> com.jfinal.plugin.activerecord.generator.TableMeta;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelfMetaBuilder</span> <span class="keyword">extends</span> <span class="title">MetaBuilder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates a new instance of SelfMetaBuilder.&lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * Description: TODO&lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataSource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SelfMetaBuilder</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(dataSource);</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">buildTableNames</span><span class="params">(List&lt;TableMeta&gt; ret)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        ResultSet rs = getTablesResultSet();</span><br><span class="line">        <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">            String tableName = rs.getString(<span class="string">&quot;TABLE_NAME&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!tableName.startsWith(<span class="string">&quot;blog_&quot;</span>)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;Skip table :&quot;</span> + tableName);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isSkipTable(tableName)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;Skip table :&quot;</span> + tableName);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// jfinal 4.3 新增过滤 table 机制</span></span><br><span class="line">            <span class="keyword">if</span> (filterPredicate != <span class="keyword">null</span> &amp;&amp; filterPredicate.test(tableName)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;Skip table :&quot;</span> + tableName);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            TableMeta tableMeta = <span class="keyword">new</span> TableMeta();</span><br><span class="line">            tableMeta.name = tableName;</span><br><span class="line">            tableMeta.remarks = rs.getString(<span class="string">&quot;REMARKS&quot;</span>);</span><br><span class="line"></span><br><span class="line">            tableMeta.modelName = buildModelName(tableName);</span><br><span class="line">            tableMeta.baseModelName = buildBaseModelName(tableMeta.modelName);</span><br><span class="line">            ret.add(tableMeta);</span><br><span class="line">        &#125;</span><br><span class="line">        rs.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Jfinal-初始化"><a href="#Jfinal-初始化" class="headerlink" title="Jfinal 初始化"></a>Jfinal 初始化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoConfig</span> <span class="keyword">extends</span> <span class="title">JFinalConfig</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configPlugin</span><span class="params">(Plugins me)</span> </span>&#123;</span><br><span class="line">  DruidPlugin dp = <span class="keyword">new</span> DruidPlugin(<span class="string">&quot;jdbc:mysql://localhost/db_name&quot;</span>, <span class="string">&quot;userName&quot;</span>, <span class="string">&quot;password&quot;</span>);</span><br><span class="line">    me.add(dp);</span><br><span class="line">    ActiveRecordPlugin arp = <span class="keyword">new</span> ActiveRecordPlugin(dp);</span><br><span class="line">    me.add(arp);</span><br><span class="line">    arp.addMapping(<span class="string">&quot;user&quot;</span>, User.class);</span><br><span class="line">    arp.addMapping(<span class="string">&quot;article&quot;</span>, <span class="string">&quot;article_id&quot;</span>, Article.class);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多: <a href="https://jfinal.com/doc/5-2">官方文档5.2 ActiveRecordPlugin</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Jfinal配置自动生成model&quot;&gt;&lt;a href=&quot;#Jfinal配置自动生成model&quot; class=&quot;headerlink&quot; title=&quot;Jfinal配置自动生成model&quot;&gt;&lt;/a&gt;Jfinal配置自动生成model&lt;/h3&gt;&lt;figure class</summary>
      
    
    
    
    
    <category term="Java" scheme="http://victorfengming.gitee.io/tags/Java/"/>
    
    <category term="jFinal" scheme="http://victorfengming.gitee.io/tags/jFinal/"/>
    
  </entry>
  
  <entry>
    <title>Redis哨兵（Sentinel）模式</title>
    <link href="http://victorfengming.gitee.io/database/redis/redis-Sentinel/"/>
    <id>http://victorfengming.gitee.io/database/redis/redis-Sentinel/</id>
    <published>2021-03-31T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.068Z</updated>
    
    <content type="html"><![CDATA[<p>主从切换技术的方法是：当主服务器宕机后，需要手动把一台从服务器切换为主服务器，这就需要人工干预，费事费力，还会造成一段时间内服务不可用。这不是一种推荐的方式，更多时候，我们优先考虑哨兵模式。</p><h2 id="一、哨兵模式概述"><a href="#一、哨兵模式概述" class="headerlink" title="一、哨兵模式概述"></a>一、哨兵模式概述</h2><p>哨兵模式是一种特殊的模式，首先Redis提供了哨兵的命令，哨兵是一个独立的进程，作为进程，它会独立运行。其原理是哨兵通过发送命令，等待Redis服务器响应，从而监控运行的多个Redis实例。</p><p> <img src= "/img/loading.gif" data-lazy-src="11320039-57a77ca2757d0924.webp" alt="img"> </p><p>这里的哨兵有两个作用</p><ul><li>通过发送命令，让Redis服务器返回监控其运行状态，包括主服务器和从服务器。</li><li>当哨兵监测到master宕机，会自动将slave切换成master，然后通过<strong>发布订阅模式</strong>通知其他的从服务器，修改配置文件，让它们切换主机。</li></ul><p>然而一个哨兵进程对Redis服务器进行监控，可能会出现问题，为此，我们可以使用多个哨兵进行监控。各个哨兵之间还会进行监控，这样就形成了多哨兵模式。</p><p>用文字描述一下<strong>故障切换（failover）</strong>的过程。假设主服务器宕机，哨兵1先检测到这个结果，系统并不会马上进行failover过程，仅仅是哨兵1主观的认为主服务器不可用，这个现象成为<strong>主观下线</strong>。当后面的哨兵也检测到主服务器不可用，并且数量达到一定值时，那么哨兵之间就会进行一次投票，投票的结果由一个哨兵发起，进行failover操作。切换成功后，就会通过发布订阅模式，让各个哨兵把自己监控的从服务器实现切换主机，这个过程称为<strong>客观下线</strong>。这样对于客户端而言，一切都是透明的。</p><h2 id="二、Redis配置哨兵模式"><a href="#二、Redis配置哨兵模式" class="headerlink" title="二、Redis配置哨兵模式"></a>二、Redis配置哨兵模式</h2><p>配置3个哨兵和1主2从的Redis服务器来演示这个过程。</p><table><thead><tr><th>服务类型</th><th>是否是主服务器</th><th>IP地址</th><th>端口</th></tr></thead><tbody><tr><td>Redis</td><td>是</td><td>192.168.11.128</td><td>6379</td></tr><tr><td>Redis</td><td>否</td><td>192.168.11.129</td><td>6379</td></tr><tr><td>Redis</td><td>否</td><td>192.168.11.130</td><td>6379</td></tr><tr><td>Sentinel</td><td>-</td><td>192.168.11.128</td><td>26379</td></tr><tr><td>Sentinel</td><td>-</td><td>192.168.11.129</td><td>26379</td></tr><tr><td>Sentinel</td><td>-</td><td>192.168.11.130</td><td>26379</td></tr></tbody></table><p> <img src= "/img/loading.gif" data-lazy-src="11320039-3f40b17c0412116c.webp" alt="img"> </p><p>首先配置Redis的主从服务器，修改redis.conf文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使得Redis服务器可以跨网络访问</span></span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line"><span class="comment"># 设置密码</span></span><br><span class="line">requirepass <span class="string">&quot;123456&quot;</span></span><br><span class="line"><span class="comment"># 指定主服务器，注意：有关slaveof的配置只是配置从服务器，主服务器不需要配置</span></span><br><span class="line">slaveof 192.168.11.128 6379</span><br><span class="line"><span class="comment"># 主服务器密码，注意：有关slaveof的配置只是配置从服务器，主服务器不需要配置</span></span><br><span class="line">masterauth 123456</span><br></pre></td></tr></table></figure><p>上述内容主要是配置Redis服务器，从服务器比主服务器多一个slaveof的配置和密码。</p><p>配置3个哨兵，每个哨兵的配置都是一样的。在Redis安装目录下有一个sentinel.conf文件，copy一份进行修改</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 禁止保护模式</span><br><span class="line">protected-mode no</span><br><span class="line"># 配置监听的主服务器，这里sentinel monitor代表监控，mymaster代表服务器的名称，可以自定义，<span class="number">192.168</span>.<span class="number">11.128</span>代表监控的主服务器，<span class="number">6379</span>代表端口，<span class="number">2</span>代表只有两个或两个以上的哨兵认为主服务器不可用的时候，才会进行failover操作。</span><br><span class="line">sentinel monitor mymaster <span class="number">192.168</span>.<span class="number">11.128</span> <span class="number">6379</span> <span class="number">2</span></span><br><span class="line"># sentinel author-pass定义服务的密码，mymaster是服务名称，<span class="number">123456</span>是Redis服务器密码</span><br><span class="line"># sentinel auth-pass &lt;master-name&gt; &lt;password&gt;</span><br><span class="line">sentinel auth-pass mymaster <span class="number">123456</span></span><br></pre></td></tr></table></figure><p>上述关闭了保护模式，便于测试。</p><p>有了上述的修改，我们可以进入Redis的安装目录的src目录，通过下面的命令启动服务器和哨兵</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动Redis服务器进程</span></span><br><span class="line">./redis-server ../redis.conf</span><br><span class="line"><span class="comment"># 启动哨兵进程</span></span><br><span class="line">./redis-sentinel ../sentinel.conf</span><br></pre></td></tr></table></figure><p> 注意启动的顺序。<strong>首先是主机（192.168.11.128）的Redis服务进程，然后启动从机的服务进程，最后启动3个哨兵的服务进程。</strong> </p><h2 id="三、Java中使用哨兵模式"><a href="#三、Java中使用哨兵模式" class="headerlink" title="三、Java中使用哨兵模式"></a>三、Java中使用哨兵模式</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试Redis哨兵模式</span></span><br><span class="line"><span class="comment"> * @author liu</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestSentinels</span> &#123;</span><br><span class="line">    @SuppressWarnings(<span class="string">&quot;resource&quot;</span>)</span><br><span class="line">    @Test</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSentinel</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        jedisPoolConfig.setMaxTotal(<span class="number">10</span>);</span><br><span class="line">        jedisPoolConfig.setMaxIdle(<span class="number">5</span>);</span><br><span class="line">        jedisPoolConfig.setMinIdle(<span class="number">5</span>);</span><br><span class="line">        <span class="comment">// 哨兵信息</span></span><br><span class="line">        Set&lt;String&gt; sentinels = <span class="keyword">new</span> HashSet&lt;&gt;(Arrays.asList(<span class="string">&quot;192.168.11.128:26379&quot;</span>,</span><br><span class="line">                <span class="string">&quot;192.168.11.129:26379&quot;</span>,<span class="string">&quot;192.168.11.130:26379&quot;</span>));</span><br><span class="line">        <span class="comment">// 创建连接池</span></span><br><span class="line">        JedisSentinelPool pool = <span class="keyword">new</span> JedisSentinelPool(<span class="string">&quot;mymaster&quot;</span>, sentinels,jedisPoolConfig,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取客户端</span></span><br><span class="line">        Jedis jedis = pool.getResource();</span><br><span class="line">        <span class="comment">// 执行两个命令</span></span><br><span class="line">        jedis.<span class="keyword">set</span>(<span class="string">&quot;mykey&quot;</span>, <span class="string">&quot;myvalue&quot;</span>);</span><br><span class="line">        String <span class="keyword">value</span> = jedis.<span class="keyword">get</span>(<span class="string">&quot;mykey&quot;</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="keyword">value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 上面是通过Jedis进行使用的，同样也可以使用Spring进行配置RedisTemplate使用。 </p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id = <span class="string">&quot;poolConfig&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;redis.clients.jedis.JedisPoolConfig&quot;</span>&gt;</span><br><span class="line">    &lt;!-- 最大空闲数 --&gt;</span><br><span class="line">    &lt;property name=<span class="string">&quot;maxIdle&quot;</span> value=<span class="string">&quot;50&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">    &lt;!-- 最大连接数 --&gt;</span><br><span class="line">    &lt;property name=<span class="string">&quot;maxTotal&quot;</span> value=<span class="string">&quot;100&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">    &lt;!-- 最大等待时间 --&gt;</span><br><span class="line">    &lt;property name=<span class="string">&quot;maxWaitMillis&quot;</span> value=<span class="string">&quot;20000&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;bean id=<span class="string">&quot;connectionFactory&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;org.springframework.data.redis.connection.jedis.JedisConnectionFactory&quot;</span>&gt;</span><br><span class="line">    &lt;<span class="title">constructor</span>-<span class="title">arg</span> <span class="title">name</span>=&quot;<span class="title">poolConfig</span>&quot; <span class="title">ref</span>=&quot;<span class="title">poolConfig</span>&quot;&gt;&lt;/<span class="title">constructor</span>-<span class="title">arg</span>&gt;</span><br><span class="line">    &lt;<span class="title">constructor</span>-<span class="title">arg</span> <span class="title">name</span>=&quot;<span class="title">sentinelConfig</span>&quot; <span class="title">ref</span>=&quot;<span class="title">sentinelConfig</span>&quot;&gt;&lt;/<span class="title">constructor</span>-<span class="title">arg</span>&gt;</span><br><span class="line">    &lt;<span class="title">property</span> <span class="title">name</span>=&quot;<span class="title">password</span>&quot; <span class="title">value</span>=&quot;123456&quot;&gt;&lt;/<span class="title">property</span>&gt;</span><br><span class="line">&lt;/<span class="title">bean</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="title">JDK</span>序列化器 --&gt;</span><br><span class="line">&lt;<span class="title">bean</span> <span class="title">id</span>=&quot;<span class="title">jdkSerializationRedisSerializer</span>&quot; <span class="title">class</span>=&quot;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">data</span>.<span class="title">redis</span>.<span class="title">serializer</span>.<span class="title">JdkSerializationRedisSerializer</span>&quot;&gt;&lt;/<span class="title">bean</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- <span class="title">String</span>序列化器 --&gt;</span><br><span class="line">&lt;<span class="title">bean</span> <span class="title">id</span>=&quot;<span class="title">stringRedisSerializer</span>&quot; <span class="title">class</span>=&quot;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">data</span>.<span class="title">redis</span>.<span class="title">serializer</span>.<span class="title">StringRedisSerializer</span>&quot;&gt;&lt;/<span class="title">bean</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="title">bean</span> <span class="title">id</span>=&quot;<span class="title">redisTemplate</span>&quot; <span class="title">class</span>=&quot;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">data</span>.<span class="title">redis</span>.<span class="title">core</span>.<span class="title">RedisTemplate</span>&quot;&gt;</span><br><span class="line">    &lt;<span class="title">property</span> <span class="title">name</span>=&quot;<span class="title">connectionFactory</span>&quot; <span class="title">ref</span>=&quot;<span class="title">connectionFactory</span>&quot;&gt;&lt;/<span class="title">property</span>&gt;</span><br><span class="line">    &lt;<span class="title">property</span> <span class="title">name</span>=&quot;<span class="title">keySerializer</span>&quot; <span class="title">ref</span>=&quot;<span class="title">stringRedisSerializer</span>&quot;&gt;&lt;/<span class="title">property</span>&gt;</span><br><span class="line">    &lt;<span class="title">property</span> <span class="title">name</span>=&quot;<span class="title">defaultSerializer</span>&quot; <span class="title">ref</span>=&quot;<span class="title">stringRedisSerializer</span>&quot;&gt;&lt;/<span class="title">property</span>&gt;</span><br><span class="line">    &lt;<span class="title">property</span> <span class="title">name</span>=&quot;<span class="title">valueSerializer</span>&quot; <span class="title">ref</span>=&quot;<span class="title">jdkSerializationRedisSerializer</span>&quot;&gt;&lt;/<span class="title">property</span>&gt;</span><br><span class="line">&lt;/<span class="title">bean</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 哨兵配置 --&gt;</span><br><span class="line">&lt;<span class="title">bean</span> <span class="title">id</span>=&quot;<span class="title">sentinelConfig</span>&quot; <span class="title">class</span>=&quot;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">data</span>.<span class="title">redis</span>.<span class="title">connection</span>.<span class="title">RedisSentinelConfiguration</span>&quot;&gt;</span><br><span class="line">    &lt;!-- 服务名称 --&gt;</span><br><span class="line">    &lt;<span class="title">property</span> <span class="title">name</span>=&quot;<span class="title">master</span>&quot;&gt;</span><br><span class="line">        &lt;<span class="title">bean</span> <span class="title">class</span>=&quot;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">data</span>.<span class="title">redis</span>.<span class="title">connection</span>.<span class="title">RedisNode</span>&quot;&gt;</span><br><span class="line">            &lt;<span class="title">property</span> <span class="title">name</span>=&quot;<span class="title">name</span>&quot; <span class="title">value</span>=&quot;<span class="title">mymaster</span>&quot;&gt;&lt;/<span class="title">property</span>&gt;</span><br><span class="line">        &lt;/<span class="title">bean</span>&gt;</span><br><span class="line">    &lt;/<span class="title">property</span>&gt;</span><br><span class="line">    &lt;!-- 哨兵服务<span class="title">IP</span>和端口 --&gt;</span><br><span class="line">    &lt;<span class="title">property</span> <span class="title">name</span>=&quot;<span class="title">sentinels</span>&quot;&gt;</span><br><span class="line">        &lt;<span class="title">set</span>&gt;</span><br><span class="line">            &lt;<span class="title">bean</span> <span class="title">class</span>=&quot;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">data</span>.<span class="title">redis</span>.<span class="title">connection</span>.<span class="title">RedisNode</span>&quot;&gt;</span><br><span class="line">                &lt;<span class="title">constructor</span>-<span class="title">arg</span> <span class="title">name</span>=&quot;<span class="title">host</span>&quot; <span class="title">value</span>=&quot;192.168.11.128&quot;&gt;&lt;/<span class="title">constructor</span>-<span class="title">arg</span>&gt;</span><br><span class="line">                &lt;<span class="title">constructor</span>-<span class="title">arg</span> <span class="title">name</span>=&quot;<span class="title">port</span>&quot; <span class="title">value</span>=&quot;26379&quot;&gt;&lt;/<span class="title">constructor</span>-<span class="title">arg</span>&gt;</span><br><span class="line">            &lt;/<span class="title">bean</span>&gt;</span><br><span class="line">            &lt;<span class="title">bean</span> <span class="title">class</span>=&quot;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">data</span>.<span class="title">redis</span>.<span class="title">connection</span>.<span class="title">RedisNode</span>&quot;&gt;</span><br><span class="line">                &lt;<span class="title">constructor</span>-<span class="title">arg</span> <span class="title">name</span>=&quot;<span class="title">host</span>&quot; <span class="title">value</span>=&quot;192.168.11.129&quot;&gt;&lt;/<span class="title">constructor</span>-<span class="title">arg</span>&gt;</span><br><span class="line">                &lt;<span class="title">constructor</span>-<span class="title">arg</span> <span class="title">name</span>=&quot;<span class="title">port</span>&quot; <span class="title">value</span>=&quot;26379&quot;&gt;&lt;/<span class="title">constructor</span>-<span class="title">arg</span>&gt;</span><br><span class="line">            &lt;/<span class="title">bean</span>&gt;</span><br><span class="line">            &lt;<span class="title">bean</span> <span class="title">class</span>=&quot;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">data</span>.<span class="title">redis</span>.<span class="title">connection</span>.<span class="title">RedisNode</span>&quot;&gt;</span><br><span class="line">                &lt;<span class="title">constructor</span>-<span class="title">arg</span> <span class="title">name</span>=&quot;<span class="title">host</span>&quot; <span class="title">value</span>=&quot;192.168.11.130&quot;&gt;&lt;/<span class="title">constructor</span>-<span class="title">arg</span>&gt;</span><br><span class="line">                &lt;<span class="title">constructor</span>-<span class="title">arg</span> <span class="title">name</span>=&quot;<span class="title">port</span>&quot; <span class="title">value</span>=&quot;26379&quot;&gt;&lt;/<span class="title">constructor</span>-<span class="title">arg</span>&gt;</span><br><span class="line">            &lt;/<span class="title">bean</span>&gt;</span><br><span class="line">        &lt;/<span class="title">set</span>&gt;</span><br><span class="line">    &lt;/<span class="title">property</span>&gt;</span><br><span class="line">&lt;/<span class="title">bean</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="四、哨兵模式的其他配置项"><a href="#四、哨兵模式的其他配置项" class="headerlink" title="四、哨兵模式的其他配置项"></a>四、哨兵模式的其他配置项</h2><table><thead><tr><th>配置项</th><th>参数类型</th><th>作用</th></tr></thead><tbody><tr><td>port</td><td>整数</td><td>启动哨兵进程端口</td></tr><tr><td>dir</td><td>文件夹目录</td><td>哨兵进程服务临时文件夹，默认为/tmp，要保证有可写入的权限</td></tr><tr><td>sentinel down-after-milliseconds</td><td>&lt;服务名称&gt;&lt;毫秒数（整数）&gt;</td><td>指定哨兵在监控Redis服务时，当Redis服务在一个默认毫秒数内都无法回答时，单个哨兵认为的主观下线时间，默认为30000（30秒）</td></tr><tr><td>sentinel parallel-syncs</td><td>&lt;服务名称&gt;&lt;服务器数（整数）&gt;</td><td>指定可以有多少个Redis服务同步新的主机，一般而言，这个数字越小同步时间越长，而越大，则对网络资源要求越高</td></tr><tr><td>sentinel failover-timeout</td><td>&lt;服务名称&gt;&lt;毫秒数（整数）&gt;</td><td>指定故障切换允许的毫秒数，超过这个时间，就认为故障切换失败，默认为3分钟</td></tr><tr><td>sentinel notification-script</td><td>&lt;服务名称&gt;&lt;脚本路径&gt;</td><td>指定sentinel检测到该监控的redis实例指向的实例异常时，调用的报警脚本。该配置项可选，比较常用</td></tr></tbody></table><p>sentinel down-after-milliseconds配置项只是一个哨兵在超过规定时间依旧没有得到响应后，会自己认为主机不可用。对于其他哨兵而言，并不是这样认为。哨兵会记录这个消息，当拥有认为主观下线的哨兵达到sentinel monitor所配置的数量时，就会发起一次投票，进行failover，此时哨兵会重写Redis的哨兵配置文件，以适应新场景的需要。</p><blockquote><p>原文链接: <a href="https://www.jianshu.com/p/06ab9daf921d">https://www.jianshu.com/p/06ab9daf921d</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主从切换技术的方法是：当主服务器宕机后，需要手动把一台从服务器切换为主服务器，这就需要人工干预，费事费力，还会造成一段时间内服务不可用。这不是一种推荐的方式，更多时候，我们优先考虑哨兵模式。&lt;/p&gt;
&lt;h2 id=&quot;一、哨兵模式概述&quot;&gt;&lt;a href=&quot;#一、哨兵模式概述&quot;</summary>
      
    
    
    
    
    <category term="database" scheme="http://victorfengming.gitee.io/tags/database/"/>
    
    <category term="redis" scheme="http://victorfengming.gitee.io/tags/redis/"/>
    
    <category term="Linux" scheme="http://victorfengming.gitee.io/tags/Linux/"/>
    
    <category term="nosql" scheme="http://victorfengming.gitee.io/tags/nosql/"/>
    
  </entry>
  
  <entry>
    <title>Win10如何以管理员身份设置开机自启程序</title>
    <link href="http://victorfengming.gitee.io/linux/windows-start/"/>
    <id>http://victorfengming.gitee.io/linux/windows-start/</id>
    <published>2021-03-30T16:00:00.000Z</published>
    <updated>2022-03-04T04:24:15.110Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载</p></blockquote><p>自己水平太菜，对Windows的权限问题一直不是特别了解。之前在《Win10 如何以管理员身份设置开机自启程序(1)》一文中介绍了：通过Windows“任务计划程序”来实现以管理员身份开机自启。</p><p>但是，但是，遇到一台奇怪的Win10系统，上边的策略行不通。一旦设置管理员运行，就无法成功开机自启。而非管理员就可以正常自启。</p><p>后来瞎蒙出一种方法：</p><ul><li>(1) 对<strong>“A.exe”</strong>创建快捷方式<strong>“A.lnk”</strong></li><li>(2) 右键<strong>“A.lnk”</strong>-&gt; 高级，勾选用管理员身份运行；</li></ul><p> <img src= "/img/loading.gif" data-lazy-src="20170930131356710.png" alt="img"></p><ul><li>(3) 新建<strong>“A.bat”</strong>文件，将<strong>“A.lnk”</strong>的路径信息写入并保存，如：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">&quot;C:\Users\ZFan\Desktop\A.lnk&quot;</span><br></pre></td></tr></table></figure><ul><li>(4) 打开<strong>“运行”</strong>输入<strong>“shell:startup”</strong>然后回车，然后将<strong>“A.bat”</strong>剪切到打开的目录中</li></ul><p><img src= "/img/loading.gif" data-lazy-src="1617198089460.png" alt="1617198089460"></p><p><img src= "/img/loading.gif" data-lazy-src="1617198110116.png" alt="1617198110116"></p><p> <img src= "/img/loading.gif" data-lazy-src="1617197997200.png" alt="1617197997200"></p><p>参考:</p><p>原文链接：<a href="https://blog.csdn.net/shuzfan/article/details/78141845">https://blog.csdn.net/shuzfan/article/details/78141845</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;转载&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;自己水平太菜，对Windows的权限问题一直不是特别了解。之前在《Win10 如何以管理员身份设置开机自启程序(1)》一文中介绍了：通过Windows“任务计划程序”来实现以管理员身份开机自启。&lt;/p</summary>
      
    
    
    
    
    <category term="Windows" scheme="http://victorfengming.gitee.io/tags/Windows/"/>
    
  </entry>
  
</feed>
